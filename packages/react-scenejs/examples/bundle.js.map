{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/raindrop.css","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/scenejs/dist/scene.esm.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/index.tsx","webpack:///./src/raindrop.css?1a1b","webpack:///./src/react-scenejs/Scene.tsx","webpack:///./src/react-scenejs/SceneInterface.tsx","webpack:///./src/react-scenejs/SceneItem.tsx","webpack:///./src/react-scenejs/index.ts","webpack:///external \"React\"","webpack:///external \"ReactDOM\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,2BAA2B,mBAAO,CAAC,6FAA4C;AAC/E;;;AAGA;AACA,cAAc,QAAS,aAAa,uBAAuB,GAAG,gBAAgB,uBAAuB,0BAA0B,iBAAiB,kBAAkB,GAAG,eAAe,uBAAuB,iBAAiB,kBAAkB,YAAY,aAAa,WAAW,cAAc,iBAAiB,8BAA8B,uBAAuB,2BAA2B,wBAAwB,GAAG,WAAW,uBAAuB,gBAAgB,iBAAiB,qBAAqB,GAAG;;AAEvf;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oDAAoD,cAAc;;AAElE;AACA;;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA;AACA,aAAa,cAAc,YAAY,eAAe;AACtD,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,yBAAyB,SAAS;AAClC,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,6BAA6B,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,GAAG;;AAEH,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,WAAW,SAAS;AACpB;AACA,QAAQ,OAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU,OAAO;AACjB,UAAU,gBAAgB;AAC1B,WAAW,SAAS;AACpB;AACA,QAAQ,MAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,WAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,SAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,OAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,KAAK;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,QAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,SAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,YAAY;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA,+CAA+C,wDAAwD,EAAE;AACzG;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB;AAClB;AACA;AACA,4CAA4C,0DAA0D,EAAE;AACxG;AACA;AACA;AACA,gBAAgB,SAAS;AACzB,gBAAgB,IAAI;AACpB,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB,iBAAiB,eAAe;AAChC,cAAc,yHAAyH;AACvI;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG,EAAE;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC,iDAAiD;AACjD;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,2EAA2E,6CAA6C,EAAE;AAC1H;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,aAAa,OAAO;AACpB,aAAa,qCAAqC;AAClD,aAAa,kBAAkB;AAC/B,aAAa,eAAe;AAC5B,aAAa,OAAO;AACpB,aAAa,mDAAmD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,UAAU,gBAAgB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,gBAAgB,OAAO;AACvB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B,iBAAiB,eAAe;AAChC;;AAEA,2BAA2B;AAC3B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB,OAAO;AAC9B,uBAAuB,OAAO;AAC9B,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qCAAqC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qCAAqC;AACtD,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mDAAmD;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mDAAmD;AACpE,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,OAAO;AACnC,4BAA4B,OAAO;AACnC,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,MAAM;AAChB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,mBAAmB,EAAE;AACtE;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,qBAAqB;AAC/B,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sBAAsB;AACpC,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,sBAAsB;AAChC,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,4BAA4B,EAAE;AAC5F;AACA;AACA;AACA,8DAA8D,4BAA4B,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uCAAuC,8BAA8B,EAAE;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C,mBAAmB;AACnB;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sCAAsC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sCAAsC;AACtD,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B,iBAAiB,QAAQ;AACzB;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B,iBAAiB,YAAY;AAC7B,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,kBAAkB,gBAAgB;AAClC;AACA;AACA,0CAA0C,uCAAuC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,MAAM;AAChB,UAAU,MAAM;AAChB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,eAAe;AACzB,UAAU,eAAe;AACzB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,WAAW,eAAe;AAC1B;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,eAAe;AACzB,UAAU,eAAe;AACzB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU,6BAA6B;AACvC,UAAU,6BAA6B;AACvC,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,WAAW,OAAO;AAClB,WAAW,eAAemBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,iBAAiB,gBAAgB;AACjC;AACA;;AAEA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,iBAAiB;AACjC,iBAAiB,gBAAgB;AACjC;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,iBAAiB;AACjC,iBAAiB,mCAAmC;AACpD;AACA,mBAAmB;AACnB,wCAAwC;AACxC;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,iBAAiB;AACjC,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC,gBAAgB,OAAO;AACvB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC,gBAAgB,cAAc;AAC9B,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD,iCAAiC,8BAA8B;AAC/D;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA,uDAAuD,2CAA2C,EAAE;AACpG;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAoB;AACzD,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,MAAM,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B;AACjE,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,wDAAwD,8BAA8B;AACtF;AACA;AACA;AACA,kCAAkC,+BAA+B;AACjE,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,OAAO,eAAe;AACtC,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B;AACjE,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA,iFAAiF,eAAe;AAChG;AACA;AACA;AACA,4EAA4E,0BAA0B;AACtG,SAAS;AACT;AACA;AACA;AACA,iCAAiC;AACjC;AACA,4EAA4E,2CAA2C;AACvH;AACA;AACA,gCAAgC,4BAA4B;AAC5D,sCAAsC,oCAAoC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB,OAAO;AAC9B,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mDAAmD;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,aAAa;AAC7B,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B,iBAAiB,wBAAwB;AACzC,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA,kCAAkC,+BAA+B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,OAAO,eAAe;AACtC,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,iBAAiB,MAAM;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD,iCAAiC,8BAA8B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB,OAAO;AAC9B,uBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,MAAM;AACjB,WAAW,gBAAgB;AAC3B;AACA,WAAW,WAAW;AACtB,8BAA8B,YAAY;AAC1C,iCAAiC,YAAY;;AAE7C;AACA,aAAa,YAAY;;AAEzB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA,+BAA+B;AAC/B;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,QAAQ;AACnB,YAAY,YAAY;AACxB,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB,WAAW,8BAA8B;AACzC,cAAc,8BAA8B;AAC5C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB;AACA,WAAW,QAAQ;AACnB,YAAY,8BAA8B;AAC1C,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,WAAW;AACtB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB,WAAW,YAAY;AACvB,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,QAAQ;AACnB,YAAY,YAAY;AACxB,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,MAAM;AACjB,UAAU,YAAY;AACtB,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEe,oEAAK,EAAC;AACuP;;;;;;;;;;;;ACzwH5Q;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,uDAAQ;;AAE9B;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA,mBAAmB,2BAA2B;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,mBAAmB;AACnC;AACA;;AAEA;AACA;;AAEA,iBAAiB,2BAA2B;AAC5C;AACA;;AAEA,QAAQ,uBAAuB;AAC/B;AACA;AACA,GAAG;AACH;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd,kDAAkD,sBAAsB;AACxE;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD;;AAEA,6BAA6B,mBAAmB;;AAEhD;;AAEA;;AAEA;AACA;;;;;;;;;;;;;AC1XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,WAAW,EAAE;AACrD,wCAAwC,WAAW,EAAE;;AAErD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,sCAAsC;AACtC,GAAG;AACH;AACA,8DAA8D;AAC9D;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA,sDAA+B;AAC/B,iEAAsC;AACtC,iGAAgE;AAChE,gEAAwB;AAExB;IAAkB,uBAA8C;IAC9D,aAAY,KAAU;QAAtB,YACE,kBAAM,KAAK,CAAC,SAKb;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,IAAI,EAAE,CAAC;SACR,CAAC;;IACJ,CAAC;IACM,oBAAM,GAAb;QAAA,iBA6CC;QA5CC,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAC7B,IAAM,SAAS,GAAG;YAChB,CAAC,EAAE,EAAE,cAAc,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,WAAW,EAAE,UAAU,EAAE;YACrE,CAAC,EAAE,EAAE,cAAc,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE;SACxE,CAAC;QACF,OAAO,6BAAK,SAAS,EAAC,SAAS;YAC7B,oBAAC,qBAAK,IAAC,MAAM,EAAE,2BAAW,EAAE,SAAS,EAAE;oBACrC,SAAS,EAAE,EAAE,SAAS,aAAE,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE;oBAC/C,SAAS,EAAE,EAAE,SAAS,aAAE,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE;oBACjD,SAAS,EAAE,EAAE,SAAS,aAAE,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE;iBAClD,EAAE,cAAc,EAAC,UAAU,EAAC,GAAG,QAAC,QAAQ;gBACvC,6BAAK,SAAS,EAAC,WAAW;oBACxB,6BAAK,SAAS,EAAC,UAAU,mBAAe,WAAW,GAAO;oBAC1D,6BAAK,SAAS,EAAC,UAAU,mBAAe,WAAW,GAAO;oBAC1D,6BAAK,SAAS,EAAC,UAAU,mBAAe,WAAW,GAAO,CACtD,CACA;YACR,+BAAM;YACN,+BAAO,IAAI,EAAC,OAAO,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,UAAC,CAAC;oBAC1C,KAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAG,CAAC,CAAC,MAA2B,CAAC,KAAK,EAAE,CAAC,CAAC;gBAChE,CAAC,GAAI;YACL,+BAAM;YACN,oBAAC,qBAAK,IAAC,MAAM,EAAE,2BAAW,EAAE,IAAI,EAAK,IAAI,MAAG,EAAE,SAAS,EAAE;oBACvD,SAAS,EAAE,EAAE,SAAS,aAAE,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE;oBAC/C,SAAS,EAAE,EAAE,SAAS,aAAE,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE;oBACjD,SAAS,EAAE,EAAE,SAAS,aAAE,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE;iBAClD;gBACC,6BAAK,SAAS,EAAC,WAAW;oBACxB,6BAAK,SAAS,EAAC,UAAU,mBAAe,WAAW,GAAO;oBAC1D,6BAAK,SAAS,EAAC,UAAU,mBAAe,WAAW,GAAO;oBAC1D,6BAAK,SAAS,EAAC,UAAU,mBAAe,WAAW,GAAO,CACtD,CACA;YACR,6BAAK,SAAS,EAAC,WAAW;gBACxB,oBAAC,yBAAS,IACR,IAAI,EAAK,IAAI,MAAG,EAChB,QAAQ,EAAE,CAAC,EACX,IAAI,EAAE,EAAE,cAAc,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,WAAW,EAAE,UAAU,EAAE,EACxE,EAAE,EAAE,EAAE,cAAc,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,EAAE,WAAW,EAAE,UAAU,EAAE,EACpE,cAAc,EAAC,UAAU;oBACzB,6BAAK,SAAS,EAAC,UAAU,GAAO,CACtB,CACR,CACD,CAAC;IACV,CAAC;IACH,UAAC;AAAD,CAAC,CAtDiB,KAAK,CAAC,SAAS,GAsDhC;AAGD,QAAQ,CAAC,MAAM,CAAC,oBAAC,GAAG,OAAG,EAAE,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;;;;;;;;;;;;;AC7D1D,cAAc,mBAAO,CAAC,yGAAsD;;AAE5E,4CAA4C,QAAS;;AAErD;AACA;;;;AAIA,eAAe;;AAEf;AACA;;AAEA,aAAa,mBAAO,CAAC,mGAAgD;;AAErE;;AAEA,GAAG,KAAU,EAAE,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBf,+FAAiD;AACjD,oEAAwC;AACxC,6GAAkD;AAGlD;IAA2B,yBAAc;IAEvC,eAAY,KAAU;QAAtB,YACE,kBAAM,KAAK,CAAC,SACb;QAHS,UAAI,GAAgB,IAAI,iBAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;;IAGtD,CAAC;IACM,sBAAM,GAAb;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC7B,CAAC;IACM,iCAAiB,GAAxB;QACE,IAAM,OAAO,GAAG,uBAAW,CAAC,IAAI,CAAgB,CAAC;QACjD,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACxB,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;YAEvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SACtC;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,IAAe;YAChC,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YAExB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,sBAAmB,EAAE,QAAI,CAAgB,CAAC,CAAC;YACjF,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IACH,YAAC;AAAD,CAAC,CAxB0B,+BAAc,GAwBxC;AAxBY,sBAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHlB,wDAAkC;AAClC,+FAA0D;AAsB1D;IAAoC,kCAAwB;IAA5D;QAAA,qEA2EC;QAvDW,YAAM,GAAyB;YACvC,IAAI,EAAE,UAAC,CAAM,IAAK,YAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAApB,CAAoB;YACtC,MAAM,EAAE,UAAC,CAAM,IAAK,YAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAtB,CAAsB;YAC1C,KAAK,EAAE,UAAC,CAAM,IAAK,YAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAArB,CAAqB;YACxC,UAAU,EAAE,UAAC,CAAM,IAAK,YAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,EAA1B,CAA0B;YAClD,SAAS,EAAE,UAAC,CAAM,IAAK,YAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,EAAzB,CAAyB;YAChD,OAAO,EAAE,UAAC,CAAM,IAAK,YAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAvB,CAAuB;SAC7C,CAAC;;IAgDJ,CAAC;IA/CQ,+BAAM,GAAb;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC7B,CAAC;IACM,2CAAkB,GAAzB;QACE,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,QAAQ,CAAC,EAAE;YACtG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACpC;IACH,CAAC;IACM,6CAAoB,GAA3B;QACE,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;IAClB,CAAC;IACM,gCAAO,GAAd,UAAe,IAAqB;QAClC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IACM,gCAAO,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IACM,6BAAI,GAAX;QACE,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IACpE,CAAC;IACM,8BAAK,GAAZ;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC;IACM,gCAAO,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACM,oCAAW,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IACjC,CAAC;IACS,6BAAI,GAAd;QAAA,iBAiBC;QAhBC,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAM,YAAY,GAAmB,EAAE,CAAC;QAExC,iBAAO,CAAC,OAAO,CAAC,UAAC,IAAI;YACnB,YAAY,CAAC,IAAI,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAC9B,gBAAM,CAAC,OAAO,CAAC,UAAC,IAAI;YAClB,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,KAAK,EAAE;YACjC,IAAI,CAAC,IAAI,EAAE,CAAC;SACb;aAAM,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE;YACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC/B;IACH,CAAC;IAzEa,2BAAY,GAAc;QACtC,QAAQ,EAAE,CAAC;QACX,QAAQ,EAAE,UAAU;QACpB,SAAS,EAAE,QAAQ;QACnB,SAAS,EAAE,CAAC;QACZ,cAAc,EAAE,CAAC;QACjB,KAAK,EAAE,CAAC;QACR,MAAM,EAAE,CAAC;QACT,IAAI,EAAE,CAAC,CAAC;QACR,GAAG,EAAE,KAAK;QACV,QAAQ,EAAE,KAAK;QACf,MAAM,EAAE,cAAM,gBAAS,EAAT,CAAS;QACvB,QAAQ,EAAE,cAAM,gBAAS,EAAT,CAAS;QACzB,OAAO,EAAE,cAAM,gBAAS,EAAT,CAAS;QACxB,YAAY,EAAE,cAAM,gBAAS,EAAT,CAAS;QAC7B,WAAW,EAAE,cAAM,gBAAS,EAAT,CAAS;QAC5B,SAAS,EAAE,cAAM,gBAAS,EAAT,CAAS;KAC3B,CAAC;IAyDJ,qBAAC;CAAA,CA3EmC,iBAAS,GA2E5C;AA3EY,wCAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzB3B,+FAAuD;AACvD,oEAAwC;AACxC,6GAAkD;AAGlD;IAA+B,6BAAc;IAE3C,mBAAY,KAAU;QAAtB,YACE,kBAAM,KAAK,CAAC,SACb;QAHS,UAAI,GAAoB,IAAI,mBAAe,EAAE,CAAC;;IAGxD,CAAC;IACM,0BAAM,GAAb;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC7B,CAAC;IACM,qCAAiB,GAAxB;QACE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,uBAAW,CAAC,IAAI,CAAgB,CAAC,CAAC;QAEvD,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SACrC;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SACtC;QACD,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IACH,gBAAC;AAAD,CAAC,CAnB8B,+BAAc,GAmB5C;AAnBY,8BAAS;;;;;;;;;;;;;;;ACLtB,+FAA0F;AAAjF,6BAAI;AAAE,mCAAO;AAAE,2CAAW;AAAE,iCAAM;AAAE,+BAAK;AAAE,yCAAU;AAAE,qCAAQ;AACxE,8FAAwC;AAA/B,yCAAS;AAClB,kFAAgC;AAAvB,6BAAK;;;;;;;;;;;;ACFd,uB;;;;;;;;;;;ACAA,0B","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/exmaples/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.tsx\");\n","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".wrapper {\\n  text-align: center;\\n}\\n\\n.container {\\n  position: relative;\\n  display: inline-block;\\n  width: 300px;\\n  height: 300px;\\n}\\n\\n.raindrop {\\n  position: absolute;\\n  width: 300px;\\n  height: 300px;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  margin: auto;\\n  border: 100px solid black;\\n  border-radius: 50%;\\n  box-sizing: border-box;\\n  transform: scale(0);\\n}\\n\\n.test {\\n  position: absolute;\\n  width: 20px;\\n  height: 20px;\\n  background: #333;\\n}\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\nvar PREFIX = \"__SCENEJS_\";\nvar timingFunction = \"animation-timing-function\";\nvar ROLES = { transform: {}, filter: {}, attribute: {} };\nvar ALIAS = { easing: [\"animation-timing-function\"] };\nvar FIXED = { \"animation-timing-function\": true, \"contents\": true };\nvar MAXIMUM = 1000000;\nvar THRESHOLD = 0.000001;\n/**\n* option name list\n* @name Scene.OPTIONS\n* @memberof Scene\n* @static\n* @type {string[]}\n* @example\n* Scene.OPTIONS // [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"]\n*/\nvar OPTIONS = [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"];\n/**\n* Event name list\n* @name Scene.EVENTS\n* @memberof Scene\n* @static\n* @type {string[]}\n* @example\n* Scene.EVENTS // [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\"];\n*/\nvar EVENTS = [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\"];\nvar prefixes = [\"webkit\", \"ms\", \"moz\", \"o\"];\nvar checkProperties = function (property) {\n    var styles = (document.body || document.documentElement).style;\n    var length = prefixes.length;\n    if (typeof styles[property] !== \"undefined\") {\n        return property;\n    }\n    for (var i = 0; i < length; ++i) {\n        var name = \"-\" + prefixes[i] + \"-\" + property;\n        if (typeof styles[name] !== \"undefined\") {\n            return name;\n        }\n    }\n    return \"\";\n};\nvar TRANSFORM = checkProperties(\"transform\");\nvar FILTER = checkProperties(\"filter\");\nvar ANIMATION = checkProperties(\"animation\");\nvar KEYFRAMES = ANIMATION.replace(\"animation\", \"keyframes\");\nvar START_ANIMATION = \"startAnimation\";\n\n/**\n* attach and trigger event handlers.\n* @memberof Scene\n*/\nvar EventTrigger = /*#__PURE__*/ (function () {\n    /**\n      * @example\n  const et = new Scene.EventTrigger();\n  const scene = new Scene();\n  \n  scene.on(\"call\", e => {\n      console.log(e.param);\n  });\n  et.on(\"call\", e => {\n      console.log(e.param);\n  });\n  scene.trigger(\"call\", {param: 1});\n  et.trigger(\"call\", {param: 1});\n       */\n    function EventTrigger() {\n        this.events = {};\n    }\n    /**\n      * Attach an event handler function for one or more events to target\n      * @param {String} name - event's name\n      * @param {Function} callback -  function to execute when the event is triggered.\n      * @return {EventTrigger} An Instance itself.\n      * @example\n  target.on(\"animate\", function() {\n      console.log(\"animate\");\n  });\n  \n  target.trigger(\"animate\");\n  \n      */\n    EventTrigger.prototype.on = function (name, callback) {\n        var _this = this;\n        var events = this.events;\n        if (typeof name === \"object\") {\n            for (var i in name) {\n                this.on(i, name[i]);\n            }\n            return this;\n        }\n        if (!(name in events)) {\n            events[name] = [];\n        }\n        if (!callback) {\n            return this;\n        }\n        if (typeof callback === \"object\") {\n            callback.forEach(function (func) { return _this.on(name, func); });\n            return this;\n        }\n        var event = events[name];\n        event.push(callback);\n        return this;\n    };\n    /**\n      * Dettach an event handler function for one or more events to target\n      * @param {String} name - event's name\n      * @param {Function} callback -  function to execute when the event is triggered.\n      * @return {EventTrigger} An Instance itself.\n      * @example\n  const callback = function() {\n      console.log(\"animate\");\n  };\n  target.on(\"animate\", callback);\n  \n  target.off(\"animate\", callback);\n  target.off(\"animate\");\n  \n      */\n    EventTrigger.prototype.off = function (name, callback) {\n        if (!name) {\n            this.events = {};\n        }\n        else if (!callback) {\n            this.events[name] = [];\n        }\n        else {\n            var callbacks = this.events[name];\n            if (!callbacks) {\n                return this;\n            }\n            var index = callbacks.indexOf(callback);\n            if (index !== -1) {\n                callbacks.splice(index, 1);\n            }\n        }\n        return this;\n    };\n    /**\n      * execute event handler\n      * @param {String} name - event's name\n      * @param {Function} [...data] - event handler's additional parameter\n      * @return {EventTrigger} An Instance itself.\n      * @example\n  target.on(\"animate\", function(a1, a2) {\n      console.log(\"animate\", a1, a2);\n  });\n  \n  target.trigger(\"animate\", [1, 2]); // log => \"animate\", 1, 2\n  \n      */\n    EventTrigger.prototype.trigger = function (name) {\n        var _this = this;\n        var data = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            data[_i - 1] = arguments[_i];\n        }\n        var events = this.events;\n        if (!(name in events)) {\n            return this;\n        }\n        var event = events[name];\n        if (data.length) {\n            var target = data[0];\n            target.type = name;\n            target.currentTarget = this;\n            !target.target && (target.target = this);\n        }\n        event.forEach(function (callback) {\n            callback.apply(_this, data);\n        });\n        return this;\n    };\n    return EventTrigger;\n}());\n\nfunction cubic(y1, y2, t) {\n    var t2 = 1 - t;\n    // Bezier Curve Formula\n    return t * t * t + 3 * t * t * t2 * y2 + 3 * t * t2 * t2 * y1;\n}\nfunction solveFromX(x1, x2, x) {\n    // x  0 ~ 1\n    // t 0 ~ 1\n    var t = x;\n    var solveX = x;\n    var dx = 1;\n    while (Math.abs(dx) > 1 / 1000) {\n        // 예상 t초에 의한 _x값\n        solveX = cubic(x1, x2, t);\n        dx = solveX - x;\n        // 차이가 미세하면 그 값을 t로 지정\n        if (Math.abs(dx) < 1 / 1000) {\n            return t;\n        }\n        t -= dx / 2;\n    }\n    return t;\n}\n/**\n * @namespace easing\n */\n/**\n* Cubic Bezier curve.\n* @memberof easing\n* @func bezier\n* @param {number} [x1] - point1's x\n* @param {number} [y1] - point1's y\n* @param {number} [x2] - point2's x\n* @param {number} [y2] - point2's y\n* @return {function} the curve function\n* @example\nimport {bezier} from \"scenejs\";\nScene.bezier(0, 0, 1, 1) // LINEAR\nScene.bezier(0.25, 0.1, 0.25, 1) // EASE\n*/\nfunction bezier(x1, y1, x2, y2) {\n    /*\n          x = f(t)\n          calculate inverse function by x\n          t = f-1(x)\n      */\n    var func = function (x) {\n        var t = solveFromX(x1, x2, Math.max(Math.min(1, x), 0));\n        return cubic(y1, y2, t);\n    };\n    func.easingName = \"cubic-bezier(\" + x1 + \", \" + y1 + \", \" + x2 + \", \" + y2 + \")\";\n    return func;\n}\n/**\n* Specifies a stepping function\n* @see {@link https://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp|CSS3 Timing Function}\n* @memberof easing\n* @func steps\n* @param {number} count - point1's x\n* @param {\"start\" | \"end\"} postion - point1's y\n* @return {function} the curve function\n* @example\nimport {steps} from \"scenejs\";\nScene.steps(1, \"start\") // Scene.STEP_START\nScene.steps(1, \"end\") // Scene.STEP_END\n*/\nfunction steps(count, position) {\n    var func = function (time) {\n        var level = 1 / count;\n        return (position === \"end\" ? level : 0) + Math.floor(time / level) * level;\n    };\n    func.easingName = \"steps(\" + count + \", \" + position + \")\";\n    return func;\n}\n/**\n* Equivalent to steps(1, start)\n* @memberof easing\n* @name STEP_START\n* @static\n* @type {function}\n* @example\nimport {STEP_START} from \"scenejs\";\nScene.STEP_START // steps(1, start)\n*/\nvar STEP_START = /*#__PURE__#*/ steps(1, \"start\");\n/**\n* Equivalent to steps(1, end)\n* @memberof easing\n* @name STEP_END\n* @static\n* @type {function}\n* @example\nimport {STEP_END} from \"scenejs\";\nScene.STEP_END // steps(1, end)\n*/\nvar STEP_END = /*#__PURE__#*/ steps(1, \"end\");\n/**\n* Linear Speed (0, 0, 1, 1)\n* @memberof easing\n* @name LINEAR\n* @static\n* @type {function}\n* @example\nimport {LINEAR} from \"scenejs\";\nScene.LINEAR\n*/\nvar LINEAR = /*#__PURE__#*/ bezier(0, 0, 1, 1);\n/**\n* Ease Speed (0.25, 0.1, 0.25, 1)\n* @memberof easing\n* @name EASE\n* @static\n* @type {function}\n* @example\nimport {EASE} from \"scenejs\";\nScene.EASE\n*/\nvar EASE = /*#__PURE__#*/ bezier(0.25, 0.1, 0.25, 1);\n/**\n* Ease In Speed (0.42, 0, 1, 1)\n* @memberof easing\n* @name EASE_IN\n* @static\n* @type {function}\n* @example\nimport {EASE_IN} from \"scenejs\";\nScene.EASE_IN\n*/\nvar EASE_IN = /*#__PURE__#*/ bezier(0.42, 0, 1, 1);\n/**\n* Ease Out Speed (0, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_OUT} from \"scenejs\";\nScene.EASE_OUT\n*/\nvar EASE_OUT = /*#__PURE__#*/ bezier(0, 0, 0.58, 1);\n/**\n* Ease In Out Speed (0.42, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_IN_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_IN_OUT} from \"scenejs\";\nScene.EASE_IN_OUT\n*/\nvar EASE_IN_OUT = /*#__PURE__#*/ bezier(0.42, 0, 0.58, 1);\n\n/**\n* Make string, array to PropertyObject for the dot product\n* @memberof Scene\n*/\nvar PropertyObject = /*#__PURE__*/ (function () {\n    /**\n      * @param {String|Array} value - This value is in the array format ..\n      * @param {String} separator - Array separator.\n      * @example\n  var obj1 = new PropertyObject(\"1,2,3\", \",\");\n  var obj2 = new PropertyObject([1,2,3], \" \");\n  var obj3 = new PropertyObject(\"1$2$3\", \"$\");\n  \n  // rgba(100, 100, 100, 0.5)\n  var obj4 = new PropertyObject([100,100,100,0.5], {\n      \"separator\" : \",\",\n      \"prefix\" : \"rgba(\",\n      \"suffix\" : \")\"\n  });\n       */\n    function PropertyObject(value, options) {\n        if (options === void 0) { options = {}; }\n        this.options = {\n            prefix: \"\",\n            suffix: \"\",\n            model: \"\",\n            type: \"\",\n            separator: \",\"\n        };\n        this.setOptions(options);\n        this.init(value);\n    }\n    PropertyObject.prototype.setOptions = function (options) {\n        Object.assign(this.options, options);\n        return this;\n    };\n    PropertyObject.prototype.getOption = function (name) {\n        return this.options[name];\n    };\n    /**\n      * the number of values.\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n  \n  console.log(obj1.length);\n  // 3\n       */\n    PropertyObject.prototype.size = function () {\n        return this.value.length;\n    };\n    /**\n      * retrieve one of values at the index\n      * @param {Number} index - index\n      * @return {Object} one of values at the index\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n  \n  console.log(obj1.get(0));\n  // 1\n       */\n    PropertyObject.prototype.get = function (index) {\n        return this.value[index];\n    };\n    /**\n      * Set the value at that index\n      * @param {Number} index - index\n      * @param {Object} value - text, a number, object to set\n      * @return {PropertyObject} An instance itself\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n  obj1.set(0, 2);\n  console.log(obj1.toValue());\n  // 2,2,3\n       */\n    PropertyObject.prototype.set = function (index, value) {\n        this.value[index] = value;\n        return this;\n    };\n    /**\n      * create a copy of an instance itself.\n      * @return {PropertyObject} clone\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n  const obj2 = obj1.clone();\n       */\n    PropertyObject.prototype.clone = function () {\n        var arr = this.value.map(function (v) { return ((v instanceof PropertyObject) ? v.clone() : v); });\n        return new PropertyObject(arr, {\n            separator: this.options.separator,\n            prefix: this.options.prefix,\n            suffix: this.options.suffix,\n            model: this.options.model,\n            type: this.options.type\n        });\n    };\n    /**\n      * Make Property Object to String\n      * @return {String} Make Property Object to String\n      * @example\n  //rgba(100, 100, 100, 0.5)\n  const obj4 = new PropertyObject([100,100,100,0.5], {\n      \"separator\" : \",\",\n      \"prefix\" : \"rgba(\",\n      \"suffix\" : \")\",\n  });\n  console.log(obj4.toValue());\n  // \"rgba(100,100,100,0.5)\"\n      */\n    PropertyObject.prototype.toValue = function () {\n        return this.options.prefix + this.join() + this.options.suffix;\n    };\n    /**\n      * Make Property Object's array to String\n      * @return {String} Join the elements of an array into a string\n      * @example\n      //rgba(100, 100, 100, 0.5)\n      var obj4 = new PropertyObject([100,100,100,0.5], {\n          \"separator\" : \",\",\n          \"prefix\" : \"rgba(\",\n          \"suffix\" : \")\"\n      });\n      obj4.join();  // =>   \"100,100,100,0.5\"\n       */\n    PropertyObject.prototype.join = function () {\n        return this.value.map(function (v) { return ((v instanceof PropertyObject) ? v.toValue() : v); }).join(this.options.separator);\n    };\n    /**\n      * executes a provided function once per array element.\n      * @param {Function} callback - Function to execute for each element, taking three arguments\n      * @param {All} [callback.currentValue] The current element being processed in the array.\n      * @param {Number} [callback.index] The index of the current element being processed in the array.\n      * @param {Array} [callback.array] the array.\n      * @return {PropertyObject} An instance itself\n      * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach|MDN Array.forEach()} reference to MDN document.\n      * @example\n  //rgba(100, 100, 100, 0.5)\n  var obj4 = new PropertyObject([100,100,100,0.5], {\n      \"separator\" : \",\",\n      \"prefix\" : \"rgba(\",\n      \"suffix\" : \")\"\n  });\n  \n  obj4.forEach(t => {\n      console.log(t);\n  });  // =>   \"100,100,100,0.5\"\n      */\n    PropertyObject.prototype.forEach = function (func) {\n        this.value.forEach(func);\n        return this;\n    };\n    PropertyObject.prototype.init = function (value) {\n        var type = typeof value;\n        if (type === \"string\") {\n            this.value = value.split(this.options.separator);\n        }\n        else if (type === \"object\") {\n            this.value = value;\n        }\n        else {\n            this.value = [value];\n        }\n        return this;\n    };\n    return PropertyObject;\n}());\n\nfunction setAlias(name, alias) {\n    ALIAS[name] = alias;\n}\nfunction setRole(names, isProperty, isFixedProperty) {\n    var length = names.length;\n    var roles = ROLES;\n    var fixed = FIXED;\n    for (var i = 0; i < length - 1; ++i) {\n        !roles[names[i]] && (roles[names[i]] = {});\n        roles = roles[names[i]];\n        if (isFixedProperty) {\n            !fixed[names[i]] && (fixed[names[i]] = {});\n            fixed = fixed[names[i]];\n        }\n    }\n    isFixedProperty && (fixed[names[length - 1]] = true);\n    roles[names[length - 1]] = isProperty ? true : {};\n}\nfunction getType(value) {\n    var type = typeof value;\n    if (type === \"object\") {\n        if (isArray(value)) {\n            return \"array\";\n        }\n        else if (value instanceof PropertyObject) {\n            return \"property\";\n        }\n    }\n    else if (type === \"string\" || type === \"number\") {\n        return \"value\";\n    }\n    return type;\n}\nfunction toFixed(num) {\n    return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nfunction isInProperties(roles, args, isCheckTrue) {\n    var length = args.length;\n    var role = roles;\n    if (length === 0) {\n        return false;\n    }\n    for (var i = 0; i < length; ++i) {\n        if (role === true) {\n            return false;\n        }\n        role = role[args[i]];\n        if (!role || (!isCheckTrue && role === true)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isRole(args, isCheckTrue) {\n    return isInProperties(ROLES, args, isCheckTrue);\n}\nfunction isFixed(args) {\n    return isInProperties(FIXED, args, true);\n}\nfunction isUndefined(value) {\n    return (typeof value === \"undefined\");\n}\nfunction isObject(value) {\n    return value && (typeof value === \"object\");\n}\nfunction isArray(value) {\n    return Array.isArray(value);\n}\nfunction isString(value) {\n    return typeof value === \"string\";\n}\nfunction has(object, name) {\n    return Object.prototype.hasOwnProperty.call(object, name);\n}\nfunction splitUnit(text) {\n    var matches = /^([^\\d|e|\\-|\\+]*)((?:\\d|\\.|-|e-|e\\+)+)(\\S*)$/g.exec(text);\n    if (!matches) {\n        return { prefix: \"\", unit: \"\", value: NaN };\n    }\n    var prefix = matches[1];\n    var value = matches[2];\n    var unit = matches[3];\n    return { prefix: prefix, unit: unit, value: parseFloat(value) };\n}\n// export function camelize(str: string) {\n// \treturn str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n// }\nfunction decamelize(str) {\n    return str.replace(/([a-z])([A-Z])/g, function (all, letter, letter2) { return letter + \"-\" + letter2.toLowerCase(); });\n}\n\nvar lastTime = 0;\nvar requestAnimFrame = (function () {\n    return window.requestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        (function (callback) {\n            var currTime = Date.now();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = window.setTimeout(function () {\n                callback(currTime + timeToCall);\n            }, 1000 / 60);\n            lastTime = currTime + timeToCall;\n            return id;\n        });\n})();\nfunction isDirectionReverse(iterationCount, direction) {\n    return direction === \"reverse\" ||\n        direction === (iterationCount % 2 >= 1 ? \"alternate\" : \"alternate-reverse\");\n}\n/**\n* @typedef {Object} AnimatorOptions The Animator options. Properties used in css animation.\n* @property {number} [duration] The duration property defines how long an animation should take to complete one cycle.\n* @property {\"none\"|\"forwards\"|\"backwards\"|\"both\"} [fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n* @property {\"infinite\"|number} [iterationCount] The iterationCount property specifies the number of times an animation should be played.\n* @property {array|function} [easing] The easing(timing-function) specifies the speed curve of an animation.\n* @property {number} [delay] The delay property specifies a delay for the start of an animation.\n* @property {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} [direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n*/\n/**\n* play video, animation, the others\n* @memberof Scene\n* @class Animator\n* @extends Scene.EventTrigger\n* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n* @param {AnimatorOptions} [options] - animator's options\n* @example\nconst animator = new Animator({\n    delay: 2,\n    diretion: \"alternate\",\n    duration: 2,\n    fillMode: \"forwards\",\n    iterationCount: 3,\n    easing: Scene.eaasing.EASE,\n});\n*/\nvar Animator = /*#__PURE__*/ (function (_super) {\n    __extends(Animator, _super);\n    function Animator(options) {\n        var _this = _super.call(this) || this;\n        _this.options = {};\n        _this.state = {\n            id: \"\",\n            easing: 0,\n            easingName: \"linear\",\n            iterationCount: 1,\n            delay: 0,\n            fillMode: \"forwards\",\n            direction: \"normal\",\n            playSpeed: 1,\n            currentTime: 0,\n            currentIterationTime: -1,\n            currentIterationCount: 0,\n            tickTime: 0,\n            prevTime: 0,\n            playState: \"paused\",\n            duration: 0\n        };\n        _this.setOptions(options);\n        return _this;\n    }\n    /**\n      * set animator's easing.\n      * @method Scene.Animator#setEasing\n      * @param {array| function} curverArray - The speed curve of an animation.\n      * @return {Scene.Animator} An instance itself.\n      * @example\n  animator.({\n      delay: 2,\n      diretion: \"alternate\",\n      duration: 2,\n      fillMode: \"forwards\",\n      iterationCount: 3,\n      easing: Scene.easing.EASE,\n  });\n      */\n    Animator.prototype.setEasing = function (curveArray) {\n        this.setState(Array.isArray(curveArray) ? {\n            easingName: \"cubic-bezier(\" + curveArray.join(\",\") + \")\",\n            easing: bezier(curveArray[0], curveArray[1], curveArray[2], curveArray[3])\n        } : {\n            easing: curveArray,\n            easingName: curveArray.easingName || \"linear\"\n        });\n        return this;\n    };\n    /**\n      * set animator's options.\n      * @method Scene.Animator#setOptions\n      * @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n      * @param {Object} [AnimatorOptions] - animator's options\n      * @return {Scene.Animator} An instance itself.\n      * @example\n  animator.({\n      delay: 2,\n      diretion: \"alternate\",\n      duration: 2,\n      fillMode: \"forwards\",\n      iterationCount: 3,\n      easing: Scene.eaasing.EASE,\n  });\n      */\n    Animator.prototype.setOptions = function (options) {\n        if (!options) {\n            return this;\n        }\n        for (var name in options) {\n            var value = options[name];\n            if (name === \"easing\") {\n                this.setEasing(value);\n                continue;\n            }\n            else if (name === \"duration\") {\n                value && this.setDuration(value);\n                continue;\n            }\n            (name in this.state ? this.state : this.options)[name] = value;\n        }\n        return this;\n    };\n    /**\n      * Get the animator's total duration including delay\n      * @method Scene.Animator#getTotalDuration\n      * @return {number} Total duration\n      * @example\n  animator.getTotalDuration();\n      */\n    Animator.prototype.getTotalDuration = function () {\n        if (this.state.iterationCount === \"infinite\") {\n            return Infinity;\n        }\n        return this.state.delay + this.getActiveDuration();\n    };\n    /**\n      * Get the animator's total duration excluding delay\n      * @method Scene.Animator#getActiveDuration\n      * @return {number} Total duration excluding delay\n      * @example\n  animator.getTotalDuration();\n      */\n    Animator.prototype.getActiveDuration = function () {\n        if (this.state.iterationCount === \"infinite\") {\n            return Infinity;\n        }\n        return this.getDuration() * this.state.iterationCount;\n    };\n    /**\n      * Check if the animator has reached the end.\n      * @method Scene.Animator#isEnded\n      * @return {boolean} ended\n      * @example\n  animator.isEnded(); // true or false\n      */\n    Animator.prototype.isEnded = function () {\n        if (this.state.tickTime === 0 && this.state.playState === \"paused\") {\n            return true;\n        }\n        else if (this.getTime() < this.getActiveDuration()) {\n            return false;\n        }\n        return true;\n    };\n    /**\n      *Check if the animator is paused:\n      * @method Scene.Animator#isPaused\n      * @return {boolean} paused\n      * @example\n  animator.isPaused(); // true or false\n      */\n    Animator.prototype.isPaused = function () {\n        return this.state.playState === \"paused\";\n    };\n    Animator.prototype.setNext = function (animator) {\n        this.on(\"ended\", function () {\n            animator.play();\n        });\n        return this;\n    };\n    /**\n      * play animator\n      * @method Scene.Animator#play\n      * @return {Scene.Animator} An instance itself.\n      */\n    Animator.prototype.play = function () {\n        var _this = this;\n        this.state.playState = \"running\";\n        if (this.isEnded()) {\n            this.setTickTime(0);\n        }\n        this.state.tickTime = this.getTime();\n        requestAnimFrame(function (time) {\n            _this.state.prevTime = time;\n            _this.tick(time);\n        });\n        /**\n             * This event is fired when play animator.\n             * @event Scene.Animator#play\n             */\n        this.trigger(\"play\");\n        return this;\n    };\n    /**\n      * pause animator\n      * @method Scene.Animator#pause\n      * @return {Scene.Animator} An instance itself.\n      */\n    Animator.prototype.pause = function () {\n        this.state.playState = \"paused\";\n        /**\n             * This event is fired when animator is paused.\n             * @event Scene.Animator#paused\n             */\n        this.trigger(\"paused\");\n        return this;\n    };\n    /**\n       * end animator\n       * @method Scene.Animator#end\n       * @return {Scene.Animator} An instance itself.\n      */\n    Animator.prototype.end = function () {\n        this.pause();\n        /**\n             * This event is fired when animator is ended.\n             * @event Scene.Animator#ended\n             */\n        this.trigger(\"ended\");\n        return this;\n    };\n    /**\n      * reset animator\n      * @method Scene.Animator#reset\n      * @return {Scene.Animator} An instance itself.\n      */\n    Animator.prototype.reset = function () {\n        this.state.tickTime = 0;\n        this.setTime(0);\n        this.pause();\n        return this;\n    };\n    /**\n      * set currentTime\n      * @method Scene.Animator#setTime\n      * @param {Number|String} time - currentTime\n      * @return {Scene.Animator} An instance itself.\n      * @example\n  \n  animator.setTime(\"from\"); // 0\n  animator.setTime(\"to\"); // 100%\n  animator.setTime(\"50%\");\n  animator.setTime(10);\n  animator.getTime() // 10\n      */\n    Animator.prototype.setTime = function (time, isTick) {\n        var activeDuration = this.getActiveDuration();\n        var currentTime = isTick ? time : this.getUnitTime(time);\n        this.state.tickTime = this.state.delay + currentTime;\n        if (currentTime < 0) {\n            currentTime = 0;\n        }\n        else if (currentTime > activeDuration) {\n            currentTime = activeDuration;\n        }\n        this.state.currentTime = currentTime;\n        this.calculateIterationTime();\n        if (this.isDelay()) {\n            return this;\n        }\n        /**\n             * This event is fired when the animator updates the time.\n             * @event Scene.Animator#timeupdate\n             * @param {Object} param The object of data to be sent to an event.\n             * @param {Number} param.currentTime The total time that the animator is running.\n             * @param {Number} param.time The iteration time during duration that the animator is running.\n             * @param {Number} param.iterationCount The iteration count that the animator is running.\n             */\n        this.trigger(\"timeupdate\", {\n            currentTime: currentTime,\n            time: this.getIterationTime(),\n            iterationCount: this.getIterationCount()\n        });\n        return this;\n    };\n    Animator.prototype.getState = function (name) {\n        return this.state[name];\n    };\n    Animator.prototype.setState = function (object) {\n        for (var name in object) {\n            this.state[name] = object[name];\n        }\n        return this;\n    };\n    /**\n      * Get the animator's current time\n      * @method Scene.Animator#getTime\n      * @return {number} current time\n      * @example\n  animator.getTime();\n      */\n    Animator.prototype.getTime = function () {\n        return this.state.currentTime;\n    };\n    Animator.prototype.getUnitTime = function (time) {\n        if (isString(time)) {\n            var duration = this.getDuration() || 100;\n            if (time === \"from\") {\n                return 0;\n            }\n            else if (time === \"to\") {\n                return duration;\n            }\n            var _a = splitUnit(time), unit = _a.unit, value = _a.value;\n            if (unit === \"%\") {\n                !this.getDuration() && (this.state.duration = duration);\n                return parseFloat(time) / 100 * duration;\n            }\n            else if (unit === \">\") {\n                return value + THRESHOLD;\n            }\n            else {\n                return value;\n            }\n        }\n        else {\n            return toFixed(time);\n        }\n    };\n    /**\n      * Get the animator's current iteration time\n      * @method Scene.Animator#getIterationTime\n      * @return {number} current iteration time\n      * @example\n  animator.getIterationTime();\n      */\n    Animator.prototype.getIterationTime = function () {\n        return this.state.currentIterationTime;\n    };\n    /**\n       * Get a delay for the start of an animation.\n       * @method Scene.Animator#getDelay\n       * @return {number} delay\n       */\n    Animator.prototype.getDelay = function () {\n        return this.state.delay;\n    };\n    /**\n       * Set a delay for the start of an animation.\n       * @method Scene.Animator#setDelay\n       * @param {number} delay - delay\n       * @return {Scene.Animator} An instance itself.\n       */\n    Animator.prototype.setDelay = function (delay) {\n        this.state.delay = delay;\n        return this;\n    };\n    /**\n       * Check if the current state of animator is delayed.\n       * @method Scene.Animator#isDelay\n       * @return {boolean} check delay state\n       */\n    Animator.prototype.isDelay = function () {\n        var _a = this.state, delay = _a.delay, tickTime = _a.tickTime;\n        return delay > 0 && (tickTime < delay);\n    };\n    /**\n       * Get fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n       * @method Scene.Animator#getFillMode\n       * @return {\"none\"|\"forwards\"|\"backwards\"|\"both\"} fillMode\n       */\n    Animator.prototype.getFillMode = function () {\n        return this.state.fillMode;\n    };\n    /**\n       * Set fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n       * @method Scene.Animator#setFillMode\n       * @param {\"none\"|\"forwards\"|\"backwards\"|\"both\"} fillMode - fillMode\n       * @return {Scene.Animator} An instance itself.\n       */\n    Animator.prototype.setFillMode = function (fillMode) {\n        this.state.fillMode = fillMode;\n        return this;\n    };\n    /**\n       * Get the number of times an animation should be played.\n       * @method Scene.Animator#getIterationCount\n       * @return {\"inifnite\"|number} iterationCount\n       */\n    Animator.prototype.getIterationCount = function () {\n        return this.state.iterationCount;\n    };\n    /**\n       * Set the number of times an animation should be played.\n       * @method Scene.Animator#setIterationCount\n       * @param {\"inifnite\"|number} iterationCount - iterationCount\n       * @return {Scene.Animator} An instance itself.\n       */\n    Animator.prototype.setIterationCount = function (iterationCount) {\n        this.state.iterationCount = iterationCount;\n        return this;\n    };\n    /**\n       * Get whether an animation should be played forwards, backwards or in alternate cycles.\n       * @method Scene.Animator#getDirection\n       * @return {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} direction\n       */\n    Animator.prototype.getDirection = function () {\n        return this.state.direction;\n    };\n    /**\n       * Set whether an animation should be played forwards, backwards or in alternate cycles.\n       * @method Scene.Animator#setDirection\n       * @param {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} direction - direction\n       * @return {Scene.Animator} An instance itself.\n       */\n    Animator.prototype.setDirection = function (direction) {\n        this.state.direction = direction;\n        return this;\n    };\n    /**\n       * Get whether the animation is running or paused.\n       * @method Scene.Animator#getPlayState\n       * @return {\"paused\"|\"running\"} playState\n       */\n    Animator.prototype.getPlayState = function () {\n        return this.state.playState;\n    };\n    /**\n       * Set whether the animation is running or paused.\n       * @method Scene.Animator#setPlayState\n       * @param {\"paused\"|\"running\"} playState - playState\n       * @return {Scene.Animator} An instance itself.\n       */\n    Animator.prototype.setPlayState = function (playState) {\n        this.state.playState = playState;\n        return this;\n    };\n    /**\n       * Get the animator's play speed\n       * @method Scene.Animator#getPlaySpeed\n       * @return {number} playSpeed\n       */\n    Animator.prototype.getPlaySpeed = function () {\n        return this.state.playSpeed;\n    };\n    /**\n       * Set the animator's play speed\n       * @method Scene.Animator#setPlaySpeed\n       * @param {number} playSpeed - playSpeed\n       * @return {Scene.Animator} An instance itself.\n       */\n    Animator.prototype.setPlaySpeed = function (playSpeed) {\n        this.state.playSpeed = playSpeed;\n        return this;\n    };\n    /**\n       * Get how long an animation should take to complete one cycle.\n       * @method Scene.Animator#getDuration\n       * @return {number} duration\n       */\n    Animator.prototype.getDuration = function () {\n        return this.state.duration;\n    };\n    /**\n       * Set how long an animation should take to complete one cycle.\n       * @method Scene.Animator#setDuration\n       * @param {number} duration - duration\n       * @return {Scene.Animator} An instance itself.\n       */\n    Animator.prototype.setDuration = function (duration) {\n        this.state.duration = duration;\n        return this;\n    };\n    /**\n       * Get the speed curve of an animation.\n       * @method Scene.Animator#getEasing\n       * @return {0|function} easing\n       */\n    Animator.prototype.getEasing = function () {\n        return this.state.easing;\n    };\n    /**\n       * Get the speed curve's name\n       * @method Scene.Animator#getEasingName\n       * @return {string} the curve's name.\n       */\n    Animator.prototype.getEasingName = function () {\n        return this.state.easingName;\n    };\n    Animator.prototype.setCurrentIterationCount = function (iterationCount) {\n        var state = this.state;\n        var passIterationCount = Math.floor(iterationCount);\n        if (state.currentIterationCount < passIterationCount) {\n            /**\n                  * The event is fired when an iteration of an animation ends.\n                  * @event Scene.Animator#iteration\n                  * @param {Object} param The object of data to be sent to an event.\n                  * @param {Number} param.currentTime The total time that the animator is running.\n                  * @param {Number} param.iterationCount The iteration count that the animator is running.\n                  */\n            this.trigger(\"iteration\", {\n                currentTime: state.currentTime,\n                iterationCount: passIterationCount\n            });\n        }\n        state.currentIterationCount = iterationCount;\n        return this;\n    };\n    Animator.prototype.setIterationTime = function (time) {\n        this.state.currentIterationTime = time;\n        return this;\n    };\n    Animator.prototype.calculateIterationTime = function () {\n        var _a = this.state, iterationCount = _a.iterationCount, fillMode = _a.fillMode, direction = _a.direction;\n        var duration = this.getDuration();\n        var time = this.getTime();\n        var currentIterationCount = duration === 0 ? 0 : time / duration;\n        var currentIterationTime = duration ? time % duration : 0;\n        if (!duration) {\n            this.setIterationTime(0);\n            return this;\n        }\n        this.setCurrentIterationCount(currentIterationCount);\n        // direction : normal, reverse, alternate, alternate-reverse\n        // fillMode : forwards, backwards, both, none\n        var isReverse = isDirectionReverse(currentIterationCount, direction);\n        if (isReverse) {\n            currentIterationTime = duration - currentIterationTime;\n        }\n        if (iterationCount !== \"infinite\") {\n            var isForwards = fillMode === \"both\" || fillMode === \"forwards\";\n            // fill forwards\n            if (currentIterationCount >= iterationCount) {\n                currentIterationTime = duration * (isForwards ? (iterationCount % 1) || 1 : 0);\n                isReverse && (currentIterationTime = duration - currentIterationTime);\n            }\n        }\n        this.setIterationTime(currentIterationTime);\n        return this;\n    };\n    Animator.prototype.caculateEasing = function (time) {\n        if (!this.state.easing) {\n            return time;\n        }\n        var duration = this.getDuration();\n        var easing = this.state.easing;\n        var ratio = duration === 0 ? 0 : time / duration;\n        var easingTime = easing(ratio) * time;\n        return easingTime;\n    };\n    Animator.prototype.tick = function (now) {\n        var _this = this;\n        var state = this.state;\n        var playSpeed = state.playSpeed, prevTime = state.prevTime;\n        var currentTime = this.state.tickTime + Math.min(1000, now - prevTime) / 1000 * playSpeed;\n        state.prevTime = now;\n        this.setTickTime(currentTime);\n        if (this.isEnded()) {\n            this.end();\n            return;\n        }\n        if (state.playState === \"paused\") {\n            return;\n        }\n        requestAnimFrame(function (time) {\n            _this.tick(time);\n        });\n    };\n    Animator.prototype.setTickTime = function (time) {\n        this.setTime(time - this.state.delay, true);\n    };\n    return Animator;\n}(EventTrigger));\n\n/**\n* @namespace\n* @name Color\n*/\nvar COLOR_MODELS = [\"rgb\", \"rgba\", \"hsl\", \"hsla\"];\n/**\n* Remove the # from the hex color.\n* @memberof Color\n* @param {String} hex - hex color\n* @return {String} hex color\n* @example\nconsole.log(cutHex(\"#000000\"))\n// \"000000\"\n*/\nfunction cutHex(hex) {\n    return (hex.charAt(0) === \"#\") ? hex.substring(1) : hex;\n}\n/**\n* convert hex color to rgb color.\n* @memberof Color\n* @param {String} hex - hex color\n* @return {Array} rgb color\n* @example\nconsole.log(hexToRGB(\"#000000\"));\n// [0, 0, 0]\nconsole.log(hexToRGB(\"#201045\"));\n// [32, 16, 69]\n*/\nfunction hexToRGB(hex) {\n    var h = cutHex(hex);\n    var r = parseInt(h.substring(0, 2), 16);\n    var g = parseInt(h.substring(2, 4), 16);\n    var b = parseInt(h.substring(4, 6), 16);\n    var a = parseInt(h.substring(6, 8), 16) / 255;\n    if (isNaN(a)) {\n        a = 1;\n    }\n    return [r, g, b, a];\n}\n/**\n* convert 3-digit hex color to 6-digit hex color.\n* @memberof Color\n* @param {String} hex - 3-digit hex color\n* @return {String} 6-digit hex color\n* @example\nconsole.log(hex3to6(\"#123\"));\n// \"#112233\"\n*/\nfunction hex3to6(h) {\n    var r = h.charAt(1);\n    var g = h.charAt(2);\n    var b = h.charAt(3);\n    var arr = [\"#\", r, r, g, g, b, b];\n    return arr.join(\"\");\n}\n/**\n* convert hsl color to rgb color.\n* @memberof Color\n* @param {Array} hsl - hsl color(hue: 0 ~ 360, saturation: 0 ~ 1, lightness: 0 ~ 1)\n* @return {Array} rgb color\n* @example\nconsole.log(hslToRGB([150, 0.5, 0.4]));\n// [51, 153, 102]\n*/\nfunction hslToRGB(hsl) {\n    var h = hsl[0];\n    var s = hsl[1];\n    var l = hsl[2];\n    if (h < 0) {\n        h += Math.floor((Math.abs(h) + 360) / 360) * 360;\n    }\n    h %= 360;\n    var c = (1 - Math.abs(2 * l - 1)) * s;\n    var x = c * (1 - Math.abs((h / 60) % 2 - 1));\n    var m = l - c / 2;\n    var rgb;\n    if (h < 60) {\n        rgb = [c, x, 0];\n    }\n    else if (h < 120) {\n        rgb = [x, c, 0];\n    }\n    else if (h < 180) {\n        rgb = [0, c, x];\n    }\n    else if (h < 240) {\n        rgb = [0, x, c];\n    }\n    else if (h < 300) {\n        rgb = [x, 0, c];\n    }\n    else if (h < 360) {\n        rgb = [c, 0, x];\n    }\n    var result = [\n        Math.round((rgb[0] + m) * 255),\n        Math.round((rgb[1] + m) * 255),\n        Math.round((rgb[2] + m) * 255),\n    ];\n    if (hsl.length > 3) {\n        result[3] = hsl[3];\n    }\n    return result;\n}\n\n/**\n* @namespace\n* @name Property\n*/\n/**\n* divide text by space.\n* @memberof Property\n* @function splitSpace\n* @param {String} text - text to divide\n* @return {Array} divided texts\n* @example\nconsole.log(splitSpace(\"a b c d e f g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitSpace(\"'a,b' c 'd,e' f g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\nfunction splitSpace(text) {\n    // divide comma(,)\n    var matches = text.match(/(\"[^\"]*\")|('[^']*')|([^\\s()]*(?:\\((?:[^()]*|\\([^()]*\\))*\\))[^\\s()]*)|\\S+/g);\n    return matches || [];\n}\n/**\n* divide text by comma.\n* @memberof Property\n* @function splitComma\n* @param {String} text - text to divide\n* @return {Array} divided texts\n* @example\nconsole.log(splitComma(\"a,b,c,d,e,f,g\"));\n// [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nconsole.log(splitComma(\"'a,b',c,'d,e',f,g\"));\n// [\"'a,b'\", \"c\", \"'d,e'\", \"f\", \"g\"]\n*/\nfunction splitComma(text) {\n    // divide comma(,)\n    // \"[^\"]*\"|'[^']*'\n    var matches = text.match(/(\"[^\"]*\"|'[^']*'|[^,\\s()]*\\((?:[^()]*|\\([^()]*\\))*\\)[^,\\s()]*|[^,])+/g);\n    return matches ? matches.map(function (str) { return str.trim(); }) : [];\n}\nfunction splitStyle(str) {\n    var _a;\n    var properties = str.split(\";\");\n    var length = properties.length;\n    var obj = [];\n    for (var i = 0; i < length; ++i) {\n        var matches = /([^:]*):([\\S\\s]*)/g.exec(properties[i]);\n        if (!matches || matches.length < 3 || !matches[1]) {\n            continue;\n        }\n        obj.push((_a = {}, _a[matches[1].trim()] = toPropertyObject(matches[2].trim()), _a));\n    }\n    return obj;\n}\n/**\n* convert array to PropertyObject[type=color].\n* default model \"rgba\"\n* @memberof Property\n* @function arrayToColorObject\n* @param {Array|PropertyObject} value ex) [0, 0, 0, 1]\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\narrayToColorObject([0, 0, 0])\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0, 1], separator=\",\")\n*/\nfunction arrayToColorObject(arr) {\n    var model = \"rgba\";\n    if (arr.length === 3) {\n        arr[3] = 1;\n    }\n    return new PropertyObject(arr, {\n        model: model,\n        separator: \",\",\n        type: \"color\",\n        prefix: model + \"(\",\n        suffix: \")\"\n    });\n}\n/**\n    * convert text with parentheses to PropertyObject[type=color].\n    * If the values are not RGBA model, change them RGBA mdoel.\n    * @memberof Property\n    * @function toColorObject\n    * @param {String|PropertyObject} value - color value \"rgba(0,0,0,1)\"\n    * @return {PropertyObject} PropertyObject[type=color]\n    * @example\ntoColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nfunction toColorObject(value) {\n    var colorObject;\n    if (value instanceof PropertyObject) {\n        colorObject = value;\n    }\n    else if (isArray(value)) {\n        colorObject = arrayToColorObject(value);\n    }\n    else if (isString(value)) {\n        return stringToColorObject(value);\n    }\n    var colorArray = colorObject.value;\n    var length = colorArray.length;\n    if (length === 4) {\n        colorArray[3] = parseFloat(colorArray[3]);\n    }\n    else if (length === 3) {\n        colorArray[3] = 1;\n    }\n    colorObject.setOptions({ type: \"color\" });\n    var colorModel = colorObject.getOption(\"model\").toLowerCase();\n    // rgb hsl model to CHANGE rgba hsla\n    // string -> number\n    if (colorModel === \"rgb\") {\n        colorObject.setOptions({\n            type: \"color\",\n            model: \"rgba\",\n            prefix: \"rgba(\",\n            suffix: \")\"\n        });\n    }\n    switch (colorModel) {\n        case \"rgb\":\n        case \"rgba\":\n            for (var i = 0; i < 3; ++i) {\n                colorArray[i] = parseInt(colorArray[i], 10);\n            }\n            break;\n        case \"hsl\":\n        case \"hsla\":\n            for (var i = 1; i < 3; ++i) {\n                if (colorArray[i].indexOf(\"%\") !== -1) {\n                    colorArray[i] = parseFloat(colorArray[i]) / 100;\n                }\n            }\n            // hsl, hsla to rgba\n            colorArray = hslToRGB(colorArray);\n            return arrayToColorObject(colorArray);\n        default:\n    }\n    return colorObject;\n}\n/**\n* convert text with parentheses to object.\n* @memberof Property\n* @function stringToBracketObject\n* @param {String} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject\n* @example\nstringToBracketObject(\"abcde(0, 0, 0,1)\")\n// => PropertyObject(model=\"abcde\", value=[0, 0, 0,1], separator=\",\")\n*/\nfunction stringToBracketObject(value) {\n    // [prefix, value, other]\n    var matches = (/([^(]*)\\(([\\s\\S]*)\\)([\\s\\S]*)/g).exec(value);\n    if (!matches || matches.length < 4) {\n        return value;\n    }\n    var model = matches[1] || \"\";\n    var text = matches[2];\n    var prefix = model + \"(\";\n    var suffix = \")\" + matches[3];\n    var separator = \",\";\n    var values;\n    // divide comma(,)\n    var obj = toPropertyObject(text);\n    if (obj instanceof PropertyObject) {\n        separator = obj.getOption(\"separator\");\n        values = obj.value;\n        prefix += obj.getOption(\"prefix\");\n        suffix = obj.getOption(\"suffix\") + suffix;\n    }\n    else {\n        values = [text];\n    }\n    var result = new PropertyObject(values, {\n        separator: separator,\n        model: model,\n        prefix: prefix,\n        suffix: suffix\n    });\n    if (COLOR_MODELS.indexOf(model) !== -1) {\n        return toColorObject(result);\n    }\n    else {\n        return result;\n    }\n}\nfunction arrayToPropertyObject(arr, separator) {\n    return new PropertyObject(arr, {\n        type: \"array\",\n        separator: separator\n    });\n}\n/**\n* convert text with parentheses to PropertyObject[type=color].\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Property\n* @function stringToColorObject\n* @param {String|PropertyObject} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\nstringToColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nfunction stringToColorObject(value) {\n    var colorArray;\n    if (value.charAt(0) === \"#\") {\n        if (value.length === 4) {\n            colorArray = hexToRGB(hex3to6(value));\n        }\n        else {\n            colorArray = hexToRGB(value);\n        }\n        return arrayToColorObject(colorArray);\n    }\n    else if (value.indexOf(\"(\") !== -1) {\n        // in bracket.\n        return stringToBracketObject(value);\n    }\n    else {\n        throw new Error(\"Invalid Format : Not a Color - \" + value);\n    }\n}\n/**\n* convert CSS Value to PropertyObject\n* @memberof Property\n* @function toPropertyObject\n* @param {String} value it's text contains the array.\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @see referenced regular expression {@link http://stackoverflow.com/questions/20215440/parse-css-gradient-rule-with-javascript-regex}\n* @example\ntoPropertyObject(\"1px solid #000\");\n// => PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)])\n*/\nfunction toPropertyObject(value) {\n    if (!isString(value)) {\n        if (Array.isArray(value)) {\n            return arrayToPropertyObject(value, \",\");\n        }\n        return value;\n    }\n    var values = splitComma(value);\n    if (values.length > 1) {\n        return arrayToPropertyObject(values.map(function (v) { return toPropertyObject(v); }), \",\");\n    }\n    values = splitSpace(value);\n    if (values.length > 1) {\n        return arrayToPropertyObject(values.map(function (v) { return toPropertyObject(v); }), \" \");\n    }\n    values = /^(['\"])([^'\"]*)(['\"])$/g.exec(value);\n    if (values && values[1] === values[3]) {\n        // Quotes\n        return new PropertyObject([toPropertyObject(values[2])], {\n            prefix: values[1],\n            suffix: values[1]\n        });\n    }\n    else if (value.indexOf(\"(\") !== -1) {\n        // color\n        return stringToBracketObject(value);\n    }\n    else if (value.charAt(0) === \"#\") {\n        return stringToColorObject(value);\n    }\n    return value;\n}\nfunction toObject(object, result) {\n    if (result === void 0) { result = {}; }\n    var model = object.getOption(\"model\");\n    if (model) {\n        object.setOptions({\n            model: \"\",\n            suffix: \"\",\n            prefix: \"\"\n        });\n        var value = object.size() > 1 ? object : object.get(0);\n        result[model] = value;\n    }\n    else {\n        object.forEach(function (obj) { return toObject(obj, result); });\n    }\n    return result;\n}\n\nfunction toInnerProperties(obj) {\n    if (!obj) {\n        return \"\";\n    }\n    var arrObj = [];\n    for (var name in obj) {\n        arrObj.push(name + \"(\" + obj[name] + \")\");\n    }\n    return arrObj.join(\" \");\n}\nfunction isPropertyObject(value) {\n    return value instanceof PropertyObject;\n}\n/* eslint-disable */\nfunction clone(target, toValue) {\n    if (toValue === void 0) { toValue = false; }\n    return merge({}, target, toValue);\n}\nfunction merge(to, from, toValue) {\n    if (toValue === void 0) { toValue = false; }\n    for (var name in from) {\n        var value = from[name];\n        var type = getType(value);\n        if (type === \"property\") {\n            to[name] = toValue ? value.toValue() : value.clone();\n        }\n        else if (type === \"array\") {\n            to[name] = value.slice();\n        }\n        else if (type === \"object\") {\n            if (isObject(to[name]) && !(to[name] instanceof PropertyObject)) {\n                merge(to[name], value, toValue);\n            }\n            else {\n                to[name] = clone(value, toValue);\n            }\n        }\n        else {\n            to[name] = from[name];\n        }\n    }\n    return to;\n}\n/* eslint-enable */\n/**\n* Animation's Frame\n* @class Scene.Frame\n* @param {Object} properties - properties\n* @example\nconst frame = new Scene.Frame({\n    display: \"none\"\n    transform: {\n        translate: \"50px\",\n        scale: \"5, 5\",\n    }\n});\n */\nvar Frame = /*#__PURE__*/ (function () {\n    function Frame(properties) {\n        if (properties === void 0) { properties = {}; }\n        this.properties = {};\n        this.set(properties);\n    }\n    /**\n      * get property value\n      * @method Scene.Frame#get\n      * @param {...Number|String|Scene.PropertyObject} args - property name or value\n      * @example\n      frame.get(\"display\") // => \"none\", \"block\", ....\n      frame.get(\"transform\", \"translate\") // => \"10px,10px\"\n      */\n    Frame.prototype.get = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var value = this.raw.apply(this, args);\n        var type = getType(value);\n        if (type === \"property\") {\n            return value.toValue();\n        }\n        else if (type === \"object\") {\n            return clone(value, true);\n        }\n        else {\n            return value;\n        }\n    };\n    Frame.prototype.raw = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var properties = this.properties;\n        var params = args[0] in ALIAS ? ALIAS[args[0]] : args;\n        var length = params.length;\n        for (var i = 0; i < length; ++i) {\n            if (!isObject(properties)) {\n                return undefined;\n            }\n            properties = properties[params[i]];\n        }\n        return properties;\n    };\n    /**\n      * remove property value\n      * @method Scene.Frame#remove\n      * @param {...String} args - property name\n      * @return {Scene.Frame} An instance itself\n      * @example\n      frame.remove(\"display\")\n      */\n    Frame.prototype.remove = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var properties = this.properties;\n        var params = args[0] in ALIAS ? ALIAS[args[0]] : args;\n        var length = params.length;\n        if (!length) {\n            return this;\n        }\n        for (var i = 0; i < length - 1; ++i) {\n            if (!isObject(properties)) {\n                return this;\n            }\n            properties = properties[params[i]];\n        }\n        delete properties[params[length - 1]];\n        return this;\n    };\n    /**\n      * set property\n      * @method Scene.Frame#set\n      * @param {...Number|String|Scene.PropertyObject} args - property names or values\n      * @return {Scene.Frame} An instance itself\n      * @example\n  // one parameter\n  frame.set({\n      display: \"none\",\n      transform: {\n          translate: \"10px, 10px\",\n          scale: \"1\",\n      },\n      filter: {\n          brightness: \"50%\",\n          grayscale: \"100%\"\n      }\n  });\n  \n  // two parameters\n  frame.set(\"transform\", {\n      translate: \"10px, 10px\",\n      scale: \"1\",\n  });\n  \n  // three parameters\n  frame.set(\"transform\", \"translate\", \"50px\");\n      */\n    Frame.prototype.set = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var length = args.length;\n        var params = args.slice(0, -1);\n        var value = args[length - 1];\n        if (params[0] in ALIAS) {\n            this._set(ALIAS[params[0]], value);\n        }\n        else if (length === 2 && isArray(params[0])) {\n            this._set(params[0], value);\n        }\n        else if (isObject(value)) {\n            if (isArray(value)) {\n                this._set(params, value);\n            }\n            else if (isPropertyObject(value)) {\n                if (isRole(params)) {\n                    this.set.apply(this, params.concat([toObject(value)]));\n                }\n                else {\n                    this._set(params, value);\n                }\n            }\n            else if (value instanceof Frame) {\n                this.merge(value);\n            }\n            else {\n                for (var name in value) {\n                    this.set.apply(this, params.concat([name, value[name]]));\n                }\n            }\n        }\n        else if (isString(value)) {\n            if (isRole(params)) {\n                var obj = toPropertyObject(value);\n                if (isObject(obj)) {\n                    this.set.apply(this, params.concat([obj]));\n                }\n                return this;\n            }\n            else {\n                var styles = splitStyle(value);\n                styles.forEach(function (style) {\n                    _this.set.apply(_this, params.concat([style]));\n                });\n                if (styles.length) {\n                    return this;\n                }\n            }\n            this._set(params, value);\n        }\n        else {\n            this._set(params, value);\n        }\n        return this;\n    };\n    /**\n      * check that has property.\n      * @method Scene.Frame#has\n      * @param {...String} args - property name\n      * @example\n      frame.has(\"property\", \"display\") // => true or false\n      */\n    Frame.prototype.has = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var properties = this.properties;\n        var params = args[0] in ALIAS ? ALIAS[args[0]] : args;\n        var length = params.length;\n        if (!length) {\n            return false;\n        }\n        for (var i = 0; i < length; ++i) {\n            if (!isObject(properties) || !(params[i] in properties)) {\n                return false;\n            }\n            properties = properties[params[i]];\n        }\n        return true;\n    };\n    /**\n      * clone frame.\n      * @method Scene.Frame#clone\n      * @return {Scene.Frame} An instance of clone\n      * @example\n      frame.clone();\n      */\n    Frame.prototype.clone = function () {\n        var frame = new Frame();\n        frame.merge(this);\n        return frame;\n    };\n    /**\n      * merge one frame to other frame.\n      * @method Scene.Frame#merge\n      * @param {Scene.Frame} frame - target frame.\n      * @return {Scene.Frame} An instance itself\n      * @example\n      frame.merge(frame2);\n      */\n    Frame.prototype.merge = function (frame) {\n        var properties = this.properties;\n        var frameProperties = frame.properties;\n        if (!frameProperties) {\n            return this;\n        }\n        merge(properties, frameProperties);\n        return this;\n    };\n    Frame.prototype.toObject = function () {\n        return clone(this.properties, true);\n    };\n    /**\n      * Specifies an css object that coverted the frame.\n      * @method Scene.Frame#toCSSObject\n      * @return {object} cssObject\n      */\n    Frame.prototype.toCSSObject = function () {\n        var properties = this.toObject();\n        var cssObject = {};\n        for (var name in properties) {\n            if (isRole([name], true)) {\n                continue;\n            }\n            var value = properties[name];\n            if (name === timingFunction) {\n                cssObject[timingFunction.replace(\"animation\", ANIMATION)] =\n                    (isString(value) ? value : value.easingName) || \"initial\";\n                continue;\n            }\n            cssObject[name] = value;\n        }\n        var transform = toInnerProperties(properties.transform);\n        var filter = toInnerProperties(properties.filter);\n        TRANSFORM && transform && (cssObject[TRANSFORM] = transform);\n        FILTER && filter && (cssObject[FILTER] = filter);\n        return cssObject;\n    };\n    /**\n      * Specifies an css text that coverted the frame.\n      * @method Scene.Frame#toCSS\n      * @return {string} cssText\n      */\n    Frame.prototype.toCSS = function () {\n        var cssObject = this.toCSSObject();\n        var cssArray = [];\n        for (var name in cssObject) {\n            cssArray.push(name + \":\" + cssObject[name] + \";\");\n        }\n        return cssArray.join(\"\");\n    };\n    Frame.prototype._set = function (args, value) {\n        var properties = this.properties;\n        var length = args.length;\n        for (var i = 0; i < length - 1; ++i) {\n            var name = args[i];\n            !(name in properties) && (properties[name] = {});\n            properties = properties[name];\n        }\n        if (!length) {\n            return;\n        }\n        properties[args[length - 1]] = isString(value) ? toPropertyObject(value) : value;\n    };\n    return Frame;\n}());\n\nfunction getNames(names, stack) {\n    var arr = [];\n    for (var name in names) {\n        stack.push(name);\n        if (isObject(names[name])) {\n            arr = arr.concat(getNames(names[name], stack));\n        }\n        else {\n            arr.push(stack.slice());\n        }\n        stack.pop();\n    }\n    return arr;\n}\nfunction updateFrame(names, properties) {\n    for (var name in properties) {\n        var value = properties[name];\n        if (!isObject(value) || isArray(value) || value instanceof PropertyObject) {\n            names[name] = true;\n            continue;\n        }\n        if (!isObject(names[name])) {\n            names[name] = {};\n        }\n        updateFrame(names[name], properties[name]);\n    }\n}\n/**\n* a list of objects in chronological order.\n* @memberof Scene\n*/\nvar Keyframes = /*#__PURE__*/ (function () {\n    /**\n       */\n    function Keyframes() {\n        this.times = [];\n        this.items = {};\n        this.names = {};\n    }\n    /**\n      * A list of names\n      * @return {string[][]} names\n      * @example\n  keyframes.getNames(); // [[\"a\"], [\"transform\", \"translate\"], [\"transform\", \"scale\"]]\n      */\n    Keyframes.prototype.getNames = function () {\n        var names = this.names;\n        return getNames(names, []);\n    };\n    /**\n      * Check if keyframes has propery's name\n      * @param {...string[]} name - property's time\n      * @return {Boolean} true: if has property, false: not\n      * @example\n  keyframes.hasName(\"transform\", \"translate\"); // true or not\n      */\n    Keyframes.prototype.hasName = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return isInProperties(this.names, args, true);\n    };\n    /**\n       * update property names used in frames.\n       * @return {Scene.Keyframes} An instance itself\n       */\n    Keyframes.prototype.update = function () {\n        var items = this.items;\n        for (var time in items) {\n            this.updateFrame(items[time]);\n        }\n        return this;\n    };\n    /**\n       * executes a provided function once for each scene item.\n       * @param {Function} callback Function to execute for each element, taking three arguments\n       * @param {Scene.Frame} [callback.item] The value of the item being processed in the keyframes.\n       * @param {string} [callback.time] The time of the item being processed in the keyframes.\n       * @param {object} [callback.items] The object that forEach() is being applied to.\n       * @return {Scene.Keyframes} An instance itself\n       */\n    Keyframes.prototype.forEach = function (callback) {\n        var times = this.times;\n        var items = this.items;\n        times.forEach(function (time) {\n            callback(items[time], time, items);\n        });\n    };\n    /**\n      * update property names used in frame.\n      * @param {Scene.Frame} [frame] - frame of that time.\n      * @return {Scene.Keyframes} An instance itself\n      * @example\n  keyframes.updateFrame(frame);\n      */\n    Keyframes.prototype.updateFrame = function (frame) {\n        if (!frame) {\n            return this;\n        }\n        var properties = frame.properties;\n        var names = this.names;\n        updateFrame(names, properties);\n        return this;\n    };\n    /**\n       * Get how long an animation should take to complete one cycle.\n       * @return {number} duration\n       */\n    Keyframes.prototype.getDuration = function () {\n        var times = this.times;\n        return times.length === 0 ? 0 : times[times.length - 1];\n    };\n    /**\n       * Set how long an animation should take to complete one cycle.\n       * @param {number} duration - duration\n       * @return {Scene.Keyframes} An instance itself.\n       */\n    Keyframes.prototype.setDuration = function (duration, originalDuration) {\n        if (originalDuration === void 0) { originalDuration = this.getDuration(); }\n        var ratio = duration / originalDuration;\n        var _a = this, times = _a.times, items = _a.items;\n        var obj = {};\n        this.times = times.map(function (time) {\n            var time2 = toFixed(time * ratio);\n            obj[time2] = items[time];\n            return time2;\n        });\n        this.items = obj;\n    };\n    /**\n       * Set how much time you want to push ahead.\n       * @param {number} time - time\n       * @return {Scene.Keyframes} An instance itself.\n       */\n    Keyframes.prototype.unshift = function (time) {\n        var _a = this, times = _a.times, items = _a.items;\n        var obj = {};\n        this.times = times.map(function (t) {\n            var time2 = toFixed(time + t);\n            obj[time2] = items[t];\n            return time2;\n        });\n        this.items = obj;\n        return this;\n    };\n    /**\n      * get size of list\n      * @return {Number} length of list\n      */\n    Keyframes.prototype.size = function () {\n        return this.times.length;\n    };\n    /**\n      * add object in list\n      * @param {Number} time - frame's time\n      * @param {Object} object - target\n      * @return {Scene.Keyframes} An instance itself\n      */\n    Keyframes.prototype.add = function (time, object) {\n        this.items[time] = object;\n        this.addTime(time);\n        return this;\n    };\n    /**\n      * Check if keyframes has object at that time.\n      * @param {Number} time - object's time\n      * @return {Boolean} true: if has time, false: not\n      */\n    Keyframes.prototype.has = function (time) {\n        return time in this.items;\n    };\n    /**\n      * get object at that time.\n      * @param {Number} time - object's time\n      * @return {Object} object at that time\n      */\n    Keyframes.prototype.get = function (time) {\n        return this.items[time];\n    };\n    /**\n      * remove object at that time.\n      * @param {Number} time - object's time\n      * @return {Keyframes} An instance itself\n      */\n    Keyframes.prototype.remove = function (time) {\n        var items = this.items;\n        delete items[time];\n        this.removeTime(time);\n        return this;\n    };\n    Keyframes.prototype.addTime = function (time) {\n        var times = this.times;\n        var length = times.length;\n        var pushIndex = length;\n        for (var i = 0; i < length; ++i) {\n            // if time is smaller than times[i], add time to index\n            if (time === times[i]) {\n                return this;\n            }\n            else if (time < times[i]) {\n                pushIndex = i;\n                break;\n            }\n        }\n        this.times.splice(pushIndex, 0, time);\n        return this;\n    };\n    Keyframes.prototype.removeTime = function (time) {\n        var index = this.times.indexOf(time);\n        if (index > -1) {\n            this.times.splice(index, 1);\n        }\n        return this;\n    };\n    return Keyframes;\n}());\n\n/**\n* @namespace\n* @name Dot\n*/\n/**\n* The dot product of Arrays\n* @memberof Dot\n* @function dotArray\n* @param {Array} a1 value1\n* @param {Array} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {Array|Object} Array.\n* @example\ndotArray([0, 0, 0, 1],[50, 50, 50, 1],0.5, 0.5);\n// => [25, 25, 25, 1]\n*/\nfunction dotArray(a1, a2, b1, b2) {\n    if (b2 === 0) {\n        return a2;\n    }\n    if (!isArray(a2)) {\n        return a1;\n    }\n    var length = a2.length;\n    return a1.map(function (v1, i) {\n        if (i >= length) {\n            return v1;\n        }\n        else {\n            return dot(v1, a2[i], b1, b2);\n        }\n    });\n}\n/**\n* The dot product of PropertyObject(type=color)\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Dot\n* @function dotColor\n* @param {PropertyObject} a1 value1\n* @param {PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {PropertyObject} PropertyObject(type=color).\n* @example\nvar colorObject = ......; //PropertyObject(type=color, model=\"rgba\", value=[254, 254, 254, 1]);\ndotColor(\"#000\",  colorObject, 0.5, 0.5);\n// \"#000\" => PropertyObject(type=color, model=\"rgba\", value=[0, 0, 0, 1]);\n// return => PropertyObject(type=color, model=\"rgba\", value=[127, 127, 127, 1]);\n*/\nfunction dotColor(color1, color2, b1, b2) {\n    if (b2 === 0) {\n        return color2;\n    }\n    // convert array to PropertyObject(type=color)\n    var value1 = color1.value;\n    var value2 = color2.value;\n    // If the model name is not same, the inner product is impossible.\n    var model1 = color1.getOption(\"model\");\n    var model2 = color2.getOption(\"model\");\n    if (model1 !== model2) {\n        // It is recognized as a string.\n        return dot(color1.toValue(), color2.toValue(), b1, b2);\n    }\n    if (value1.length === 3) {\n        value1[3] = 1;\n    }\n    if (value2.length === 3) {\n        value2[3] = 1;\n    }\n    var v = dotArray(value1, value2, b1, b2);\n    var colorModel = model1;\n    for (var i = 0; i < 3; ++i) {\n        v[i] = parseInt(v[i], 10);\n    }\n    var object = new PropertyObject(v, {\n        type: \"color\",\n        model: colorModel,\n        prefix: colorModel + \"(\",\n        suffix: \")\"\n    });\n    return object;\n}\n/**\n* The dot product of Objects\n* @memberof Dot\n* @function dotObject\n* @param {PropertyObject} a1 value1\n* @param {PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {PropertyObject} Array with Separator.\n* @example\ndotObject(PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)]),\nPropertyObject([\"9px\", \"solid\", rgba(50, 50, 50, 1)]),\n0.5, 0.5);\n// => PropertyObject([\"5px\", \"solid\", rgba(25, 25, 25, 1)])\n*/\nfunction dotObject(a1, a2, b1, b2) {\n    var a1Type = a1.getOption(\"type\");\n    if (a1Type === \"color\") {\n        return dotColor(a1, a2, b1, b2);\n    }\n    var value1 = a1.value;\n    var value2 = a2.value;\n    var arr = dotArray(value1, value2, b1, b2);\n    return new PropertyObject(arr, {\n        type: a1Type,\n        separator: a1.getOption(\"separator\") || a2.getOption(\"separator\"),\n        prefix: a1.getOption(\"prefix\") || a2.getOption(\"prefix\"),\n        suffix: a1.getOption(\"suffix\") || a2.getOption(\"suffix\"),\n        model: a1.getOption(\"model\") || a2.getOption(\"model\")\n    });\n}\n/**\n* The dot product of a1 and a2 for the b1 and b2.\n* @memberof Dot\n* @function dot\n* @param {String|Number|PropertyObject} a1 value1\n* @param {String|Number|PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @example\ndot(1, 3, 0.3, 0.7);\n// => 1.6\n*/\nfunction dot(a1, a2, b1, b2) {\n    if (b2 === 0) {\n        return a2;\n    }\n    else if (b1 === 0 || b1 + b2 === 0) {\n        // prevent division by zero.\n        return a1;\n    }\n    // dot Object\n    var type1 = getType(a1);\n    var type2 = getType(a2);\n    if (type1 === type2) {\n        if (type1 === \"property\") {\n            return dotObject(a1, a2, b1, b2);\n        }\n        else if (type1 === \"array\") {\n            return dotArray(a1, a2, b1, b2);\n        }\n        else if (type1 !== \"value\") {\n            return a1;\n        }\n    }\n    else {\n        return a1;\n    }\n    // split number and unit of the value.\n    var r1 = b1 / (b1 + b2);\n    var r2 = 1 - r1;\n    var v1 = splitUnit(\"\" + a1);\n    var v2 = splitUnit(\"\" + a2);\n    var v;\n    // 숫자가 아닐경우 첫번째 값을 반환 b2가 0일경우 두번째 값을 반환\n    if (isNaN(v1.value) || isNaN(v2.value)) {\n        return a1;\n    }\n    else {\n        v = v1.value * r2 + v2.value * r1;\n    }\n    var prefix = v1.prefix || v2.prefix;\n    var unit = v1.unit || v2.unit;\n    if (!prefix && !unit) {\n        return v;\n    }\n    return prefix + v + unit;\n}\nfunction dotValue(time, prevTime, nextTime, prevValue, nextValue, easing) {\n    if (time === prevTime) {\n        return prevValue;\n    }\n    else if (time === nextTime) {\n        return nextValue;\n    }\n    else if (!easing) {\n        return dot(prevValue, nextValue, time - prevTime, nextTime - time);\n    }\n    var ratio = easing((time - prevTime) / (nextTime - prevTime));\n    var value = dot(prevValue, nextValue, ratio, 1 - ratio);\n    return value;\n}\n\nfunction hasClass(element, className) {\n    if (element.classList) {\n        return element.classList.contains(className);\n    }\n    return !!element.className.match(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n}\nfunction addClass(element, className) {\n    if (element.classList) {\n        element.classList.add(className);\n    }\n    else {\n        element.className += \" \" + className;\n    }\n}\nfunction removeClass(element, className) {\n    if (element.classList) {\n        element.classList.remove(className);\n    }\n    else {\n        var reg = new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\");\n        element.className = element.className.replace(reg, \" \");\n    }\n}\nfunction fromCSS(elements, properties) {\n    if (!elements || !properties || !properties.length) {\n        return {};\n    }\n    var element;\n    if (elements instanceof Element) {\n        element = elements;\n    }\n    else if (elements.length) {\n        element = elements[0];\n    }\n    else {\n        return {};\n    }\n    var cssObject = {};\n    var styles = window.getComputedStyle(element);\n    var length = properties.length;\n    for (var i = 0; i < length; ++i) {\n        cssObject[properties[i]] = styles[properties[i]];\n    }\n    return cssObject;\n}\n\nfunction toId(text) {\n    return text.match(/[0-9a-zA-Z]+/g).join(\"\");\n}\nfunction makeId(selector) {\n    for (;;) {\n        var id = \"\" + Math.floor(Math.random() * 100000);\n        if (!selector) {\n            return id;\n        }\n        var checkElement = document.querySelector(\"[data-scene-id=\\\"\" + id + \"\\\"]\");\n        if (!checkElement) {\n            return id;\n        }\n    }\n}\nfunction makeAnimationProperties(properties) {\n    var cssArray = [];\n    for (var name in properties) {\n        cssArray.push(ANIMATION + \"-\" + decamelize(name) + \" : \" + properties[name] + \";\");\n    }\n    return cssArray.join(\"\");\n}\n/**\n* manage Frame Keyframes and play keyframes.\n* @memberof Scene\n* @extends Scene.Animator\n* @example\nconst item = new Scene.SceneItem({\n    0: {\n        display: \"none\",\n    },\n    1: {\n        display: \"block\",\n        opacity: 0,\n    },\n    2: {\n        opacity: 1,\n    }\n});\n*/\nvar SceneItem = /*#__PURE__*/ (function (_super) {\n    __extends(SceneItem, _super);\n    /**\n      * @param {Object} [properties] - properties\n      * @param {AnimatorOptions} [options] - options\n      * @example\n      const item = new Scene.SceneItem({\n          0: {\n              display: \"none\",\n          },\n          1: {\n              display: \"block\",\n              opacity: 0,\n          },\n          2: {\n              opacity: 1,\n          }\n      });\n       */\n    function SceneItem(properties, options) {\n        var _this = _super.call(this) || this;\n        _this.keyframes = new Keyframes();\n        _this.elements = [];\n        _this.load(properties, options);\n        return _this;\n    }\n    SceneItem.prototype.getDuration = function () {\n        return Math.max(this.state.duration, this.keyframes.getDuration());\n    };\n    SceneItem.prototype.setDuration = function (duration) {\n        if (duration === 0) {\n            return this;\n        }\n        var originalDuration = this.getDuration();\n        if (originalDuration > 0) {\n            this.keyframes.setDuration(duration, originalDuration);\n        }\n        _super.prototype.setDuration.call(this, toFixed(duration));\n        return this;\n    };\n    /**\n      * set the unique indicator of the item.\n      * @method Scene.SceneItem#setId\n      * @param {String} [id] - the indicator of the item.\n      * @return {Scene.SceneItem} An instance itself\n      * @example\n  const item = new SceneItem();\n  \n  item.setId(\"item\");\n  console.log(item.getId()); // item\n      */\n    SceneItem.prototype.setId = function (id) {\n        var elements = this.elements;\n        var length = elements.length;\n        this.setState({ id: id || makeId(!!length) });\n        var sceneId = toId(this.getId());\n        this.options.selector || (this.options.selector = \"[data-scene-id=\\\"\" + sceneId + \"\\\"]\");\n        if (!length) {\n            return this;\n        }\n        for (var i = 0; i < length; ++i) {\n            elements[i].setAttribute(\"data-scene-id\", sceneId);\n        }\n        return this;\n    };\n    /**\n      * Specifies the unique indicator of the item.\n      * @method Scene.SceneItem#getId\n      * @return {String} the indicator of the item.\n      * @example\n  const item = scene.newItem(\"item\");\n  console.log(item.getId()); // item\n      */\n    SceneItem.prototype.getId = function () {\n        return this.state.id;\n    };\n    /**\n      * Set properties to the sceneItem at that time\n      * @method Scene.SceneItem#set\n      * @param {Number} time - time\n      * @param {...String|Object} [properties] - property names or values\n      * @return {Scene.SceneItem} An instance itself\n      * @example\n  item.set(0, \"a\", \"b\") // item.getFrame(0).set(\"a\", \"b\")\n  console.log(item.get(0, \"a\")); // \"b\"\n      */\n    SceneItem.prototype.set = function (time) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (isObject(time)) {\n            this.load(time);\n            return this;\n        }\n        else if (args[0]) {\n            if (args[0] instanceof SceneItem) {\n                var item = args[0];\n                var delay = item.getDelay();\n                var realTime_1 = this.getUnitTime(time) + delay;\n                var _a = item.getAllTimes(!!delay || !this.hasFrame(time)), keys = _a.keys, values_1 = _a.values, frames_1 = _a.frames;\n                var easing = this.getEasingName() !== item.getEasingName() ? item.getEasing() : 0;\n                keys.forEach(function (t) {\n                    _this.set(realTime_1 + t, frames_1[values_1[t]]);\n                });\n                if (easing) {\n                    this.set(realTime_1 + keys[0], \"easing\", easing);\n                    this.set(realTime_1 + keys[keys.length - 1], \"easing\", \"initial\");\n                }\n                return this;\n            }\n            else if (args.length === 1 && isArray(args[0])) {\n                args[0].forEach(function (item) {\n                    _this.set(time, item);\n                });\n                return this;\n            }\n        }\n        var frame = this.newFrame(time);\n        frame.set.apply(frame, args);\n        this.updateFrame(frame);\n        return this;\n    };\n    /**\n      * Get properties of the sceneItem at that time\n      * @param {Number} time - time\n      * @param {...String|Object} args property's name or properties\n      * @return {Number|String|Scene.PropertyObejct} property value\n      * @example\n  item.get(0, \"a\"); // item.getFrame(0).get(\"a\");\n  item.get(0, \"transform\", \"translate\"); // item.getFrame(0).get(\"transform\", \"translate\");\n      */\n    SceneItem.prototype.get = function (time) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var frame = this.getFrame(time);\n        return frame && frame.get.apply(frame, args);\n    };\n    /**\n      * remove properties to the sceneItem at that time\n      * @param {Number} time - time\n      * @param {...String|Object} [properties] - property names or values\n      * @return {Scene.SceneItem} An instance itself\n      * @example\n  item.remove(0, \"a\");\n      */\n    SceneItem.prototype.remove = function (time) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var frame = this.getFrame(time);\n        frame && frame.remove.apply(frame, args);\n        this.update();\n        return this;\n    };\n    /**\n      * Append the item or object at the last time.\n      * @param {SceneItem | object} item - the scene item or item object\n      * @return {Scene.SceneItem} An instance itself\n      * @example\n  item.append(new SceneItem({\n      0: {\n          opacity: 0,\n      },\n      1: {\n          opacity: 1,\n      }\n  }));\n  item.append({\n      0: {\n          opacity: 0,\n      },\n      1: {\n          opacity: 1,\n      }\n  });\n  item.set(item.getDuration(), {\n      0: {\n          opacity: 0,\n      },\n      1: {\n          opacity: 1,\n      }\n  });\n      */\n    SceneItem.prototype.append = function (item) {\n        this.set(this.getDuration(), item);\n        return this;\n    };\n    /**\n      * Push the front frames for the time and prepend the scene item or item object.\n      * @param {SceneItem | object} item - the scene item or item object\n      * @return {Scene.SceneItem} An instance itself\n      */\n    SceneItem.prototype.prepend = function (item) {\n        if (item instanceof SceneItem) {\n            var delay = item.getDelay();\n            var duration = item.getIterationCount() === \"infinite\" ? item.getDuration() : item.getActiveDuration();\n            var unshiftTime = duration + delay;\n            var firstFrame = this.keyframes.get(0);\n            if (firstFrame) {\n                this.keyframes.remove(0);\n            }\n            this.keyframes.unshift(unshiftTime);\n            this.set(0, item);\n            this.set(unshiftTime + THRESHOLD, firstFrame);\n        }\n        else {\n            this.prepend(new SceneItem(item));\n        }\n        return this;\n    };\n    /**\n      * Specifies an element to synchronize items' keyframes.\n      * @method Scene.SceneItem#setSelector\n      * @param {string} selectors - Selectors to find elements in items.\n      * @return {Scene.SceneItem} An instance itself\n      * @example\n  item.setSelector(\"#id.class\");\n      */\n    SceneItem.prototype.setSelector = function (selector) {\n        this.options.selector = selector === true ? this.state.id :\n            (selector || \"[data-scene-id=\\\"\" + this.state.id + \"\\\"]\");\n        this.setElement(document.querySelectorAll(this.options.selector));\n        return this;\n    };\n    /**\n      * Specifies an element to synchronize item's keyframes.\n      * @method Scene.SceneItem#setElement\n      * @param {Element|Array|string} elements - elements to synchronize item's keyframes.\n      * @return {Scene.SceneItem} An instance itself\n      * @example\n  item.setElement(document.querySelector(\"#id.class\"));\n  item.setElement(document.querySelectorAll(\".class\"));\n      */\n    SceneItem.prototype.setElement = function (elements) {\n        if (!elements) {\n            return this;\n        }\n        this.elements = (elements instanceof Element) ? [elements] : elements;\n        this.setId();\n        return this;\n    };\n    /**\n      * add css styles of items's element to the frame at that time.\n      * @method Scene.SceneItem#setCSS\n      * @param {Array} properties - elements to synchronize item's keyframes.\n      * @return {Scene.SceneItem} An instance itself\n      * @example\n  item.setElement(document.querySelector(\"#id.class\"));\n  item.setCSS(0, [\"opacity\"]);\n  item.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n      */\n    SceneItem.prototype.setCSS = function (time, properties) {\n        this.set(time, fromCSS(this.elements, properties));\n        return this;\n    };\n    SceneItem.prototype.animate = function (time, parentEasing) {\n        _super.prototype.setTime.call(this, time, true);\n        return this._animate(parentEasing);\n    };\n    SceneItem.prototype.setTime = function (time, isNumber, parentEasing) {\n        _super.prototype.setTime.call(this, time, isNumber);\n        this._animate(parentEasing);\n        return this;\n    };\n    /**\n      * update property names used in frames.\n      * @method Scene.SceneItem#update\n      * @return {Scene.SceneItem} An instance itself\n      * @example\n  item.update();\n      */\n    SceneItem.prototype.update = function () {\n        this.keyframes.update();\n        return this;\n    };\n    /**\n      * update property names used in frame.\n      * @method Scene.SceneItem#updateFrame\n      * @param {Scene.Frame} [frame] - frame of that time.\n      * @return {Scene.SceneItem} An instance itself\n      * @example\n  item.updateFrame(time, this.get(time));\n      */\n    SceneItem.prototype.updateFrame = function (frame) {\n        this.keyframes.updateFrame(frame);\n        return this;\n    };\n    /**\n      * Create and add a frame to the sceneItem at that time\n      * @method Scene.SceneItem#newFrame\n      * @param {Number} time - frame's time\n      * @return {Scene.Frame} Created frame.\n      * @example\n  item.newFrame(time);\n      */\n    SceneItem.prototype.newFrame = function (time) {\n        var frame = this.getFrame(time);\n        if (frame) {\n            return frame;\n        }\n        frame = new Frame();\n        this.setFrame(time, frame);\n        return frame;\n    };\n    /**\n      * Add a frame to the sceneItem at that time\n      * @method Scene.SceneItem#setFrame\n      * @param {Number} time - frame's time\n      * @return {Scene.SceneItem} An instance itself\n      * @example\n  item.setFrame(time, frame);\n      */\n    SceneItem.prototype.setFrame = function (time, frame) {\n        this.keyframes.add(this.getUnitTime(time), frame);\n        this.keyframes.update();\n        return this;\n    };\n    /**\n      * get sceneItem's frame at that time\n      * @method Scene.SceneItem#getFrame\n      * @param {Number} time - frame's time\n      * @return {Scene.Frame} sceneItem's frame at that time\n      * @example\n  const frame = item.getFrame(time);\n      */\n    SceneItem.prototype.getFrame = function (time) {\n        return this.keyframes.get(this.getUnitTime(time));\n    };\n    /**\n      * check if the item has a frame at that time\n      * @method Scene.SceneItem#hasFrame\n      * @param {Number} time - frame's time\n      * @return {Boolean} true: the item has a frame // false: not\n      * @example\n  if (item.hasFrame(10)) {\n      // has\n  } else {\n      // not\n  }\n      */\n    SceneItem.prototype.hasFrame = function (time) {\n        return this.keyframes.has(this.getUnitTime(time));\n    };\n    /**\n      * remove sceneItem's frame at that time\n      * @method Scene.SceneItem#removeFrame\n      * @param {Number} time - frame's time\n      * @return {Scene.SceneItem} An instance itself\n      * @example\n  item.removeFrame(time);\n      */\n    SceneItem.prototype.removeFrame = function (time) {\n        var keyframes = this.keyframes;\n        keyframes.remove(time);\n        keyframes.update();\n        return this;\n    };\n    /**\n      * Copy frame of the previous time at the next time.\n      * @method Scene.SceneItem#copyFrame\n      * @param {number|string|object} fromTime - the previous time\n      * @param {number} toTime - the next time\n      * @return {Scene.SceneItem} An instance itself\n      * @example\n  // getFrame(0) equal getFrame(1)\n  item.copyFrame(0, 1);\n      */\n    SceneItem.prototype.copyFrame = function (fromTime, toTime) {\n        if (isObject(fromTime)) {\n            for (var time in fromTime) {\n                this.copyFrame(time, fromTime[time]);\n            }\n            return this;\n        }\n        var frame = this.getFrame(fromTime);\n        if (!frame) {\n            return this;\n        }\n        var copyFrame = frame.clone();\n        this.setFrame(toTime, copyFrame);\n        return this;\n    };\n    /**\n      * merge frame of the previous time at the next time.\n      * @method Scene.SceneItem#mergeFrame\n      * @param {number|string|object} fromTime - the previous time\n      * @param {number|string} toTime - the next time\n      * @return {Scene.SceneItem} An instance itself\n      * @example\n  // getFrame(1) contains getFrame(0)\n  item.merge(0, 1);\n      */\n    SceneItem.prototype.mergeFrame = function (fromTime, toTime) {\n        if (isObject(fromTime)) {\n            for (var time in fromTime) {\n                this.mergeFrame(time, fromTime[time]);\n            }\n            return this;\n        }\n        var frame = this.getFrame(fromTime);\n        if (!frame) {\n            return this;\n        }\n        var toFrame = this.newFrame(toTime);\n        toFrame.merge(frame);\n        return this;\n    };\n    /**\n      * Get frame of the current time\n      * @method Scene.SceneItem#getNowFrame\n      * @param {Number} time - the current time\n      * @param {function} easing - the speed curve of an animation\n      * @return {Scene.Frame} frame of the current time\n      * @example\n  let item = new Scene.SceneItem({\n      0: {\n          display: \"none\",\n      },\n      1: {\n          display: \"block\",\n          opacity: 0,\n      },\n      2: {\n          opacity: 1,\n      }\n  });\n  // opacity: 0.7; display:\"block\";\n  const frame = item.getNowFrame(1.7);\n      */\n    SceneItem.prototype.getNowFrame = function (time, easing) {\n        var _this = this;\n        var frame = new Frame();\n        var names = this.keyframes.getNames();\n        var _a = this._getNearTimeIndex(time), left = _a.left, right = _a.right;\n        var realEasing = this._getEasing(time, left, right, this.state.easing || easing);\n        names.forEach(function (properties) {\n            var value = _this._getNowValue(time, left, right, properties, realEasing);\n            if (isUndefined(value)) {\n                return;\n            }\n            frame.set(properties, value);\n        });\n        return frame;\n    };\n    SceneItem.prototype.load = function (properties, options) {\n        if (properties === void 0) { properties = {}; }\n        if (options === void 0) { options = properties.options; }\n        if (isArray(properties)) {\n            var length = properties.length;\n            for (var i = 0; i < length; ++i) {\n                var time = length === 1 ? 0 : this.getUnitTime(i / (length - 1) * 100 + \"%\");\n                this.set(time, properties[i]);\n            }\n        }\n        else if (properties.keyframes) {\n            this.set(properties.keyframes);\n        }\n        else {\n            for (var time in properties) {\n                if (time === \"options\" || time === \"keyframes\") {\n                    continue;\n                }\n                var value = properties[time];\n                var realTime = this.getUnitTime(time);\n                if (typeof value === \"number\") {\n                    this.mergeFrame(value, realTime);\n                    continue;\n                }\n                this.set(realTime, value);\n            }\n        }\n        options && this.setOptions(options);\n        return this;\n    };\n    /**\n       * clone SceneItem.\n       * @method Scene.SceneItem#clone\n       * @param {AnimatorOptions} [options] animator options\n       * @return {Scene.SceneItem} An instance of clone\n       * @example\n       * item.clone();\n       */\n    SceneItem.prototype.clone = function (options) {\n        if (options === void 0) { options = {}; }\n        var item = new SceneItem();\n        item.setOptions(this.state);\n        item.setOptions(options);\n        this.keyframes.forEach(function (frame, time) { return item.setFrame(time, frame.clone()); });\n        return item;\n    };\n    SceneItem.prototype.setOptions = function (options) {\n        if (options === void 0) { options = {}; }\n        _super.prototype.setOptions.call(this, options);\n        var id = options.id, selector = options.selector, duration = options.duration, elements = options.elements;\n        duration && this.setDuration(duration);\n        id && this.setId(id);\n        if (elements) {\n            this.setElement(elements);\n        }\n        else if (selector) {\n            this.setSelector(selector === true ? this.state.id : selector);\n        }\n        return this;\n    };\n    SceneItem.prototype.getAllTimes = function (isStartZero, options) {\n        if (isStartZero === void 0) { isStartZero = true; }\n        if (options === void 0) { options = {}; }\n        var times = this.keyframes.times.slice();\n        var length = times.length;\n        var keys = [];\n        var values = {};\n        if (!length) {\n            return { keys: [], values: {}, frames: {} };\n        }\n        var frames = {};\n        var duration = this.getDuration();\n        var direction = options.direction || this.state.direction;\n        var isShuffle = direction === \"alternate\" || direction === \"alternate-reverse\";\n        (!this.getFrame(0)) && times.unshift(0);\n        (!this.getFrame(duration)) && times.push(duration);\n        length = times.length;\n        var iterationCount = options.iterationCount || this.state.iterationCount;\n        iterationCount = iterationCount !== \"infinite\" ? iterationCount : 1;\n        var totalDuration = iterationCount * duration;\n        for (var i = 0; i < iterationCount; ++i) {\n            var isReverse = isDirectionReverse(i, direction);\n            var start = i * duration;\n            for (var j = 0; j < length; ++j) {\n                if (isShuffle && i !== 0 && j === 0) {\n                    // pass duplicate\n                    continue;\n                }\n                // isStartZero is keytimes[0] is 0 (i === 0 & j === 0)\n                var threshold = j === 0 && (i === 0 ? !isStartZero : !isShuffle) ? THRESHOLD : 0;\n                var keyvalue = toFixed(isReverse ? times[length - 1 - j] : times[j]);\n                var time = toFixed(isReverse ? duration - keyvalue : keyvalue);\n                var keytime = toFixed(start + time + threshold);\n                if (totalDuration < keytime) {\n                    break;\n                }\n                keys.push(keytime);\n                values[keytime] = keyvalue;\n                if (!frames[keyvalue]) {\n                    var frame = this.getFrame(keyvalue);\n                    if (!frame) {\n                        frames[keyvalue] = this.getNowFrame(keyvalue);\n                        continue;\n                    }\n                    if (j === 0 || j === length - 1 || frame.has(\"transform\") || frame.has(\"filter\")) {\n                        frames[keyvalue] = this.getNowFrame(keyvalue);\n                    }\n                    else {\n                        frames[keyvalue] = frame;\n                    }\n                }\n            }\n        }\n        if (keys[keys.length - 1] < totalDuration) {\n            // last time === totalDuration\n            var isReverse = isDirectionReverse(iterationCount, direction);\n            var keyvalue = toFixed(duration * (isReverse ? 1 - iterationCount % 1 : iterationCount % 1));\n            keys.push(totalDuration);\n            values[totalDuration] = keyvalue;\n            !frames[keyvalue] && (frames[keyvalue] = this.getNowFrame(keyvalue));\n        }\n        return { keys: keys, values: values, frames: frames };\n    };\n    /**\n      * Specifies an css text that coverted the keyframes of the item.\n      * @param {Array} [duration=this.getDuration()] - elements to synchronize item's keyframes.\n      * @param {Array} [options={}] - parent options to unify options of items.\n      * @example\n  item.setCSS(0, [\"opacity\"]);\n  item.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n      */\n    SceneItem.prototype.toCSS = function (duration, options) {\n        if (duration === void 0) { duration = this.getDuration(); }\n        if (options === void 0) { options = {}; }\n        var state = this.state;\n        var selector = state.selector || this.options.selector;\n        if (!selector) {\n            return \"\";\n        }\n        var id = this._getId();\n        var isZeroDuration = duration === 0;\n        var playSpeed = (options.playSpeed || 1);\n        var delay = ((typeof options.delay === \"undefined\" ? state.delay : options.delay) || 0) / playSpeed;\n        var easingName = (!isZeroDuration && options.easing && options.easingName) || state.easingName;\n        var count = (!isZeroDuration && options.iterationCount) || state.iterationCount;\n        var fillMode = (options.fillMode !== \"forwards\" && options.fillMode) || state.fillMode;\n        var direction = (options.direction !== \"normal\" && options.direction) || state.direction;\n        var cssText = makeAnimationProperties({\n            fillMode: fillMode,\n            direction: direction,\n            delay: delay + \"s\",\n            name: PREFIX + \"KEYFRAMES_\" + toId(id),\n            duration: duration / playSpeed + \"s\",\n            timingFunction: easingName,\n            iterationCount: count\n        });\n        var css = selector + \".\" + START_ANIMATION + \" {\\n\\t\\t\\t\" + cssText + \"\\n\\t\\t}\\n\\t\\t\" + this._toKeyframes(duration, options);\n        return css;\n    };\n    SceneItem.prototype.exportCSS = function (duration, options) {\n        if (duration === void 0) { duration = this.getDuration(); }\n        if (options === void 0) { options = {}; }\n        if (!this.elements.length) {\n            return;\n        }\n        var id = this._getId();\n        var styleElement = document.querySelector(\"#\" + PREFIX + id);\n        var css = this.toCSS(duration, options);\n        if (styleElement) {\n            styleElement.innerText = css;\n        }\n        else {\n            document.body.insertAdjacentHTML(\"beforeend\", \"<style id=\\\"\" + PREFIX + \"STYLE_\" + id + \"\\\">\" + css + \"</style>\");\n        }\n    };\n    /**\n      * Play using the css animation and keyframes.\n      * @param {boolean} [exportCSS=true] Check if you want to export css.\n      * @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n      * @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n      * @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n      * @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n      * @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n      * @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n      * @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n      * @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n      * @example\n  item.playCSS();\n  item.playCSS(false, {\n      direction: \"reverse\",\n      fillMode: \"forwards\",\n  });\n      */\n    SceneItem.prototype.playCSS = function (exportCSS, properties) {\n        var _this = this;\n        if (exportCSS === void 0) { exportCSS = true; }\n        if (properties === void 0) { properties = {}; }\n        if (!ANIMATION || this.getPlayState() === \"running\") {\n            return this;\n        }\n        var elements = this.elements;\n        var length = elements.length;\n        if (!length) {\n            return this;\n        }\n        if (this.isEnded()) {\n            this.setTime(0);\n        }\n        exportCSS && this.exportCSS();\n        var cssText = makeAnimationProperties(properties);\n        for (var i = 0; i < length; ++i) {\n            var element = elements[i];\n            element.style.cssText += cssText;\n            if (hasClass(element, START_ANIMATION)) {\n                removeClass(element, START_ANIMATION);\n                (function (el) {\n                    requestAnimationFrame(function () {\n                        requestAnimationFrame(function () {\n                            addClass(el, START_ANIMATION);\n                        });\n                    });\n                })(element);\n            }\n            else {\n                addClass(element, START_ANIMATION);\n            }\n        }\n        this.setState({ playCSS: true });\n        this.setPlayState(\"running\");\n        this.trigger(\"play\");\n        var duration = this.getDuration();\n        var animatedElement = elements[0];\n        var animationend = function () {\n            _this.end();\n            if (!animatedElement) {\n                return;\n            }\n            animatedElement.removeEventListener(\"animationend\", animationend);\n            animatedElement.removeEventListener(\"animationiteration\", animationiteration);\n        };\n        var animationiteration = function (_a) {\n            var elapsedTime = _a.elapsedTime;\n            var currentTime = elapsedTime;\n            var iterationCount = currentTime / duration;\n            _this.state.currentTime = currentTime;\n            _this.setCurrentIterationCount(iterationCount);\n        };\n        animatedElement.addEventListener(\"animationend\", animationend);\n        animatedElement.addEventListener(\"animationiteration\", animationiteration);\n        return this;\n    };\n    SceneItem.prototype._getId = function () {\n        return this.state.id || this.setId().getId();\n    };\n    SceneItem.prototype._getEasing = function (time, left, right, easing) {\n        if (this.keyframes.hasName(timingFunction)) {\n            var nowEasing = this._getNowValue(time, left, right, [timingFunction], 0, true);\n            return typeof nowEasing === \"function\" ? nowEasing : easing;\n        }\n        return easing;\n    };\n    SceneItem.prototype._toKeyframes = function (duration, options) {\n        if (duration === void 0) { duration = this.getDuration(); }\n        if (options === void 0) { options = {}; }\n        var id = this._getId();\n        var state = this.state;\n        var playSpeed = state.playSpeed;\n        var isParent = typeof options.iterationCount !== \"undefined\";\n        var iterationCount = state.iterationCount;\n        var delay = isParent ? state.delay : 0;\n        var direction = isParent ? state.direction : \"normal\";\n        var _a = this.getAllTimes(true, {\n            duration: duration,\n            delay: delay,\n            direction: direction,\n            iterationCount: isParent && iterationCount !== \"infinite\" ? iterationCount : 1,\n            isCSS: true\n        }), keys = _a.keys, values = _a.values, frames = _a.frames;\n        var length = keys.length;\n        var css = {};\n        var keyframes = [];\n        for (var time in frames) {\n            css[time] = frames[time].toCSS();\n        }\n        if (!keys.length) {\n            return \"\";\n        }\n        if (delay) {\n            keyframes.push(\"0%{\" + frames[0] + \"}\");\n            if (direction === \"reverse\" || direction === \"alternate-reverse\") {\n                keyframes.push(delay / playSpeed / duration * 100 - 0.00001 + \"%{\" + css[0] + \"}\");\n            }\n        }\n        keys.forEach(function (time) {\n            keyframes.push((delay + time) / playSpeed / duration * 100 + \"%{\" + css[values[time]] + \"}\");\n        });\n        var lastTime = keys[length - 1];\n        if ((delay + lastTime) / playSpeed < duration) {\n            // not 100%\n            keyframes.push(\"100%{\" + css[values[lastTime]]);\n        }\n        return \"@\" + KEYFRAMES + \" \" + PREFIX + \"KEYFRAMES_\" + toId(id) + \"{\\n\\t\\t\\t\" + keyframes.join(\"\\n\") + \"\\n\\t\\t}\";\n    };\n    SceneItem.prototype._getNowValue = function (time, left, right, properties, easing, usePrevValue) {\n        if (easing === void 0) { easing = this.state.easing; }\n        if (usePrevValue === void 0) { usePrevValue = isFixed(properties); }\n        var keyframes = this.keyframes;\n        var times = keyframes.times;\n        var length = times.length;\n        var prevTime;\n        var nextTime;\n        var prevFrame;\n        var nextFrame;\n        for (var i = left; i >= 0; --i) {\n            var frame = keyframes.get(times[i]);\n            if (frame.has.apply(frame, properties)) {\n                prevTime = times[i];\n                prevFrame = frame;\n                break;\n            }\n        }\n        var prevValue = prevFrame && prevFrame.raw.apply(prevFrame, properties);\n        if (usePrevValue) {\n            return prevValue;\n        }\n        for (var i = right; i < length; ++i) {\n            var frame = keyframes.get(times[i]);\n            if (frame.has.apply(frame, properties)) {\n                nextTime = times[i];\n                nextFrame = frame;\n                break;\n            }\n        }\n        var nextValue = nextFrame && nextFrame.raw.apply(nextFrame, properties);\n        if (!prevFrame || isUndefined(prevValue)) {\n            return nextValue;\n        }\n        if (!nextFrame || isUndefined(nextValue) || prevValue === nextValue) {\n            return prevValue;\n        }\n        if (prevTime < 0) {\n            prevTime = 0;\n        }\n        return dotValue(time, prevTime, nextTime, prevValue, nextValue, easing);\n    };\n    SceneItem.prototype._getNearTimeIndex = function (time) {\n        var keyframes = this.keyframes;\n        var times = keyframes.times;\n        var length = times.length;\n        for (var i = 0; i < length; ++i) {\n            if (times[i] === time) {\n                return { left: i, right: i };\n            }\n            else if (times[i] > time) {\n                return { left: i === 0 ? 0 : i - 1, right: i };\n            }\n        }\n        return { left: length - 1, right: length - 1 };\n    };\n    SceneItem.prototype._animate = function (parentEasing) {\n        var iterationTime = this.getIterationTime();\n        var easing = this.getEasing() || parentEasing;\n        var frame = this.getNowFrame(iterationTime, easing);\n        var currentTime = this.getTime();\n        /**\n             * This event is fired when timeupdate and animate.\n             * @event Scene.SceneItem#animate\n             * @param {Number} param.currentTime The total time that the animator is running.\n             * @param {Number} param.time The iteration time during duration that the animator is running.\n             * @param {Scene.Frame} param.frame frame of that time.\n             */\n        this.trigger(\"animate\", {\n            frame: frame,\n            currentTime: currentTime,\n            time: iterationTime\n        });\n        var elements = this.elements;\n        var length = elements.length;\n        if (!length) {\n            return frame;\n        }\n        var attributes = frame.get(\"attribute\");\n        if (attributes) {\n            for (var name in attributes) {\n                for (var i = 0; i < length; ++i) {\n                    elements[i].setAttribute(name, attributes[name]);\n                }\n            }\n        }\n        var cssText = frame.toCSS();\n        if (this.state.cssText !== cssText) {\n            this.state.cssText = cssText;\n            for (var i = 0; i < length; ++i) {\n                elements[i].style.cssText += cssText;\n            }\n            return frame;\n        }\n    };\n    return SceneItem;\n}(Animator));\n\n/**\n* manage sceneItems and play Scene.\n* @extends Scene.Animator\n*/\nvar Scene = /*#__PURE__*/ (function (_super) {\n    __extends(Scene, _super);\n    /**\n      * @param {Object} [properties] - properties\n      * @param {AnimatorOptions} [options] - options\n      * @example\n      const scene = new Scene({\n          item1: {\n              0: {\n                  display: \"none\",\n              },\n              1: {\n                  display: \"block\",\n                  opacity: 0,\n              },\n              2: {\n                  opacity: 1,\n              },\n          },\n          item2: {\n              2: {\n                  opacity: 1,\n              },\n          }\n      });\n       */\n    function Scene(properties, options) {\n        var _this = _super.call(this) || this;\n        _this.items = {};\n        _this.load(properties, options);\n        return _this;\n    }\n    Scene.prototype.setId = function (id) {\n        if (id === void 0) { id = \"scene\" + Math.floor(Math.random() * 100000); }\n        this.state.id = id;\n        return this;\n    };\n    Scene.prototype.getId = function () {\n        return this.state.id;\n    };\n    Scene.prototype.getDuration = function () {\n        var items = this.items;\n        var time = 0;\n        for (var id in items) {\n            var item = items[id];\n            time = Math.max(time, item.getTotalDuration() / item.getPlaySpeed());\n        }\n        return time;\n    };\n    Scene.prototype.setDuration = function (duration) {\n        var items = this.items;\n        var sceneDuration = this.getDuration();\n        if (duration === 0 || !isFinite(sceneDuration)) {\n            return this;\n        }\n        if (sceneDuration === 0) {\n            for (var id in items) {\n                var item = items[id];\n                item.setDuration(duration);\n            }\n        }\n        else {\n            var ratio = duration / sceneDuration;\n            for (var id in items) {\n                var item = items[id];\n                item.setDelay(item.getDelay() * ratio);\n                item.setDuration(item.getDuration() * ratio);\n            }\n        }\n        return this;\n    };\n    /**\n      * get item in scene by name\n      * @method Scene#getItem\n      * @param {string} name - item's name\n      * @return {Scene.SceneItem} item\n      * @example\n  const item = scene.getItem(\"item1\")\n      */\n    Scene.prototype.getItem = function (name) {\n        return this.items[name];\n    };\n    /**\n      * create item in scene\n      * @method Scene#newItem\n      * @param {String} name - name of item to create\n      * @param {StateOptions} options - The option object of SceneItem\n      * @return {Sceme.SceneItem} Newly created item\n      * @example\n  const item = scene.newItem(\"item1\")\n      */\n    Scene.prototype.newItem = function (name, options) {\n        if (options === void 0) { options = {}; }\n        if (has(this.items, name)) {\n            return this.items[name];\n        }\n        var item = new SceneItem();\n        this.setItem(name, item);\n        item.setOptions(options);\n        return item;\n    };\n    /**\n      * add a sceneItem to the scene\n      * @param {String} name - name of item to create\n      * @param {Scene.SceneItem} item - sceneItem\n      * @example\n  const item = scene.newItem(\"item1\")\n      */\n    Scene.prototype.setItem = function (name, item) {\n        if (item instanceof Animator) {\n            item.setId(name);\n        }\n        this.items[name] = item;\n        return this;\n    };\n    Scene.prototype.animate = function (time, parentEasing) {\n        _super.prototype.setTime.call(this, time, true);\n        return this._animate(parentEasing);\n    };\n    Scene.prototype.setTime = function (time, isNumber, parentEasing) {\n        _super.prototype.setTime.call(this, time, isNumber);\n        this._animate(parentEasing);\n        return this;\n    };\n    /**\n       * executes a provided function once for each scene item.\n       * @param {Function} func Function to execute for each element, taking three arguments\n       * @param {Scene | Scene.SceneItem} [func.item] The value of the item being processed in the scene.\n       * @param {string} [func.name] The name of the item being processed in the scene.\n       * @param {object} [func.items] The object that forEach() is being applied to.\n       * @return {Scene} An instance itself\n       */\n    Scene.prototype.forEach = function (func) {\n        var items = this.items;\n        for (var name in items) {\n            func(items[name], name, items);\n        }\n        return this;\n    };\n    /**\n       * Export the CSS of the items to the style.\n       * @return {Scene} An instance itself\n       */\n    Scene.prototype.exportCSS = function (duration, state) {\n        if (duration === void 0) { duration = this.getDuration(); }\n        var items = this.items;\n        var totalDuration = duration;\n        if (!totalDuration || !isFinite(totalDuration)) {\n            totalDuration = 0;\n        }\n        for (var id in items) {\n            var item = items[id];\n            item.exportCSS(totalDuration, this.state);\n        }\n        return this;\n    };\n    Scene.prototype.append = function (item) {\n        item.setDelay(item.getDelay() + this.getDuration());\n        this.setItem(item.getId() || item.setId().getId(), item);\n    };\n    /**\n      * Play using the css animation and keyframes.\n      * @param {boolean} [exportCSS=true] Check if you want to export css.\n      * @param {Object} [properties={}] The shorthand properties for six of the animation properties.\n      * @param {Object} [properties.duration] The duration property defines how long an animation should take to complete one cycle.\n      * @param {Object} [properties.fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n      * @param {Object} [properties.iterationCount] The iterationCount property specifies the number of times an animation should be played.\n      * @param {String} [properties.easing] The easing(timing-function) specifies the speed curve of an animation.\n      * @param {Object} [properties.delay] The delay property specifies a delay for the start of an animation.\n      * @param {Object} [properties.direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n      * @return {Scene} An instance itself\n      * @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n      * @example\n  scene.playCSS();\n  scene.playCSS(false, {\n      direction: \"reverse\",\n      fillMode: \"forwards\",\n  });\n      */\n    Scene.prototype.playCSS = function (exportCSS, properties) {\n        var _this = this;\n        if (exportCSS === void 0) { exportCSS = true; }\n        if (properties === void 0) { properties = {}; }\n        if (!ANIMATION || this.getPlayState() === \"running\") {\n            return this;\n        }\n        exportCSS && this.exportCSS();\n        var items = this.items;\n        var animationItem;\n        for (var id in items) {\n            var item = items[id];\n            item.playCSS(false, properties);\n            if (item.getState(\"playCSS\")) {\n                animationItem = item;\n            }\n        }\n        if (!animationItem) {\n            return this;\n        }\n        var animationiteration = function (_a) {\n            var currentTime = _a.currentTime, iterationCount = _a.iterationCount;\n            _this.state.currentTime = currentTime;\n            _this.setCurrentIterationCount(iterationCount);\n        };\n        var animationend = function () {\n            _this.end();\n            _this.setState({ playCSS: false });\n            animationItem.off(\"ended\", animationend);\n            animationItem.off(\"iteration\", animationiteration);\n        };\n        animationItem.on(\"ended\", animationend);\n        animationItem.on(\"iteration\", animationiteration);\n        this.setState({ playCSS: true });\n        this.setPlayState(\"running\");\n        this.trigger(\"play\");\n        return this;\n    };\n    Scene.prototype.load = function (properties, options) {\n        if (properties === void 0) { properties = {}; }\n        if (options === void 0) { options = properties.options; }\n        if (!properties) {\n            return this;\n        }\n        var isSelector = options && options.selector;\n        for (var name in properties) {\n            if (name === \"options\") {\n                continue;\n            }\n            var object = properties[name];\n            var item = void 0;\n            if (object instanceof Scene || object instanceof SceneItem) {\n                this.setItem(name, object);\n                item = object;\n            }\n            else {\n                item = this.newItem(name);\n                item.load(object);\n            }\n            isSelector && item.setSelector(name);\n        }\n        this.setOptions(options);\n    };\n    Scene.prototype.setSelector = function (_) {\n        var isSelector = this.options.selector;\n        this.forEach(function (item, name) {\n            item.setSelector(isSelector ? name : false);\n        });\n    };\n    Scene.prototype._animate = function (parentEasing) {\n        var iterationTime = this.getIterationTime();\n        var items = this.items;\n        var easing = this.getEasing() || parentEasing;\n        var frames = {};\n        for (var id in items) {\n            var item = items[id];\n            frames[id] = item.animate(Math.max(iterationTime * item.getPlaySpeed() - item.getDelay(), 0), easing);\n        }\n        /**\n             * This event is fired when timeupdate and animate.\n             * @param {Number} param.currentTime The total time that the animator is running.\n             * @param {Number} param.time The iteration time during duration that the animator is running.\n             * @param {Frame} param.frames frame of that time.\n             */\n        this.trigger(\"animate\", {\n            currentTime: this.getTime(),\n            time: iterationTime,\n            frames: frames\n        });\n        return frames;\n    };\n    return Scene;\n}(Animator));\n\n/**\n * @namespace presets\n */\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @func set\n * @param {string | string[]} property - property to set effect\n * @param {any[]} values - values of 100%\n * @param {AnimatorOptions} [options]\n * @example\n// import {set, blink} from \"scenejs\";\n// set(\"opacity\", [0, 1, 0], {duration: 2});\nScene.set(\"opacity\", [0, 1, 0], {duration: 2});\n\n// Same\nScene.blink({duration: 2});\n\n// Same\nnew SceneItem({\n    \"0%\": {\n        opacity: 0,\n    },\n    \"50%\": {\n        opacity: 1,\n    }\n    \"100%\": {\n        opacity: 0,\n    }\n}, {\n    duration: 2,\n});\n */\nfunction set(property, values, options) {\n    var item = new SceneItem({}, options);\n    var length = values.length;\n    for (var i = 0; i < length; ++i) {\n        item.set(i / (length - 1) * 100 + \"%\", property, values[i]);\n    }\n    return item;\n}\n/**\n * Make a zoom in effect.\n * @memberof presets\n * @func zoomIn\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start zoom\n * @param {number}[options.to = 1] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {set, zoomIn} from \"scenejs\";\n// zoomIn({duration: 2});\nScene.zoomIn({duration: 2});\n// Same\nnew SceneItem({\n    \"0%\": {\n        \"transform\": \"scale(0)\",\n    },\n    \"100%\": {\n        \"transform\": \"scale(1)\",\n    }\n}, {\n    duration: 2,\n});\n */\nfunction zoomIn(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.to, to = _c === void 0 ? 1 : _c;\n    return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n/**\n * Make a zoom out effect.\n * @memberof presets\n * @func zoomOut\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 1] start zoom\n * @param {number}[options.to = 0] end zoom\n * @param {number} options.duration animation's duration\n * @example\n// import {zoomOut} from \"scenejs\";\n// zoomOut({duration: 2});\nScene.zoomOut({duration: 2});\n// Same\nnew SceneItem({\n    \"0%\": {\n        \"transform\": \"scale(1)\",\n    },\n    \"100%\": {\n        \"transform\": \"scale(0)\",\n    }\n}, {\n    duration: 2,\n});\n */\nfunction zoomOut(_a) {\n    var _b = _a.from, from = _b === void 0 ? 1 : _b, _c = _a.to, to = _c === void 0 ? 0 : _c;\n    return set([\"transform\", \"scale\"], [from, to], arguments[0]);\n}\n/**\n * Make a wipe in effect.\n * @memberof presets\n * @func wipeIn\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"-100%\"] start position\n * @param {number|string}[options.to = \"0%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeIn} from \"scenejs\";\n// wipeIn({property: \"left\", duration: 2});\nScene.wipeIn({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n    \"0%\": {\n        \"left\": \"-100%\",\n    },\n    \"100%\": {\n        \"left\": \"0%\",\n    }\n}, {\n    duration: 2,\n});\n */\nfunction wipeIn(_a) {\n    var _b = _a.from, from = _b === void 0 ? \"-100%\" : _b, _c = _a.to, to = _c === void 0 ? \"0%\" : _c, _d = _a.property, property = _d === void 0 ? \"left\" : _d;\n    return set(property, [from, to], arguments[0]);\n}\n/**\n * Make a wipe out effect.\n * @memberof presets\n * @func wipeOut\n * @param {AnimatorOptions} options\n * @param {string|string[]} [options.property = \"left\"] position property\n * @param {number|string} [options.from = \"0%\"] start position\n * @param {number|string}[options.to = \"100%\"] end position\n * @param {number} options.duration animation's duration\n * @example\n// import {wipeOut} from \"scenejs\";\n// wipeOut({property: \"left\", duration: 2});\nScene.wipeOut({property: \"left\", duration: 2});\n// Same\nnew SceneItem({\n    \"0%\": {\n        \"left\": \"0%\",\n    },\n    \"100%\": {\n        \"left\": \"100%\",\n    }\n}, {\n    duration: 2,\n});\n */\nfunction wipeOut(_a) {\n    var _b = _a.from, from = _b === void 0 ? \"0%\" : _b, _c = _a.to, to = _c === void 0 ? \"100%\" : _c, _d = _a.property, property = _d === void 0 ? \"left\" : _d;\n    return set(property, [from, to], arguments[0]);\n}\n/**\n * Use the property to create an effect.\n * @memberof presets\n * @func transition\n * @param {Scene.SceneItem} item1 - Item that end effect\n * @param {Scene.SceneItem} item2 - Item that start effect\n * @param {AnimatorOptions} options\n * @param {object} options.from The starting properties of item1 and end properties of item2\n * @param {object} options.to The starting properties of item2 and end properties of item1\n * @param {number} options.duration animation's duration\n * @param {number} [options.time] start time of item1 <br/> <strong>default: item1.getDuration() - duration</strong>\n * @example\n// import {transition} from \"scenejs\";\ntransition(item1, item2, {\n    from: {\n        opacity: 1,\n    },\n    to: {\n        opacity: 0,\n    },\n    duration: 0.1,\n});\n\n// Same\nitem1.set({\n    [item1.getDuration() - 0.1]: {\n        opacity: 1,\n    },\n    [item1.getDuration()]: {\n        opacity: 0,\n    }\n});\nitem2.set({\n    0: {\n        opacity: 0,\n    },\n    0.1: {\n        opacity: 1,\n    }\n});\n */\nfunction transition(item1, item2, _a) {\n    var from = _a.from, to = _a.to, _b = _a.duration, duration = _b === void 0 ? item1.getDuration() : _b, _c = _a.time, time = _c === void 0 ? Math.max(item1.getDuration() - duration, 0) : _c;\n    var _d, _e;\n    item1.set((_d = {},\n        _d[time] = from,\n        _d[time + duration] = to,\n        _d));\n    item2.set((_e = {\n            0: to\n        },\n        _e[duration] = from,\n        _e));\n}\n/**\n * Make a fade in effect.\n * @memberof presets\n * @func fadeIn\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeIn} from \"scenejs\";\n// fadeIn({duration: 2});\nScene.fadeIn({duration: 2});\n// Same\nnew SceneItem({\n    \"0%\": {\n        opacity: 0,\n    },\n    \"100%\": {\n        opacity: 1,\n    }\n}, {\n    duration: 2,\n});\n */\nfunction fadeIn(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.to, to = _c === void 0 ? 1 : _c;\n    return set(\"opacity\", [from, to], arguments[0]);\n}\n/**\n * Make a fade out effect.\n * @memberof presets\n * @func fadeOut\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 1] start opacity\n * @param {number}[options.to = 0] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {fadeOut} from \"scenejs\";\n// fadeOut({duration: 2});\nScene.fadeOut({duration: 2});\n// Same\nnew SceneItem({\n    \"0%\": {\n        opacity: 1,\n    },\n    \"100%\": {\n        opacity: 0,\n    }\n}, {\n    duration: 2,\n});\n */\nfunction fadeOut(_a) {\n    var _b = _a.from, from = _b === void 0 ? 1 : _b, _c = _a.to, to = _c === void 0 ? 0 : _c;\n    return set(\"opacity\", [from, to], arguments[0]);\n}\n/**\n * Make a blinking effect.\n * @memberof presets\n * @func blink\n * @param {AnimatorOptions} options\n * @param {number} [options.from = 0] start opacity\n * @param {number}[options.to = 1] end opacity\n * @param {number} options.duration animation's duration\n * @example\n// import {blink} from \"scenejs\";\n// blink({duration: 2});\nScene.blink({duration: 2});\n// Same\nnew SceneItem({\n    \"0%\": {\n        opacity: 0,\n    },\n    \"50%\": {\n        opacity: 1,\n    },\n    \"100%\": {\n        opacity: 0,\n    }\n}, {\n    duration: 2,\n});\n */\nfunction blink(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.to, to = _c === void 0 ? 1 : _c;\n    return set(\"opacity\", [from, to, from], arguments[0]);\n}\n\n/**\n* version info\n* @name Scene.VERSION\n* @memberof Scene\n* @static\n* @type {string}\n* @example\n* Scene.VERSION // 1.0.0-beta8\n*/\nvar VERSION = \"1.0.0-beta8\";\n\nexport default Scene;\nexport { VERSION, SceneItem, Frame, Animator, Keyframes, PropertyObject, bezier, EASE_IN_OUT, EASE_IN, EASE_OUT, EASE, LINEAR, steps, STEP_START, STEP_END, set, transition, wipeIn, wipeOut, fadeIn, fadeOut, blink, zoomIn, zoomOut, OPTIONS, EVENTS, setRole, setAlias };\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { SceneItem, EASE_IN_OUT, Scene } from './react-scenejs';\nimport './raindrop.css';\n\nclass App extends React.Component<{}, { time: string | number }> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      time: 0,\n    };\n  }\n  public render() {\n    const time = this.state.time;\n    const keyframes = {\n      0: { 'border-width': '150px', 'opacity': 1, 'transform': 'scale(0)' },\n      1: { 'border-width': '0px', 'opacity': 0.3, 'transform': 'scale(0.7)' }\n    };\n    return <div className='wrapper'>\n      <Scene easing={EASE_IN_OUT} keyframes={{\n        raindrop1: { keyframes, options: { delay: 0 } },\n        raindrop2: { keyframes, options: { delay: 0.4 } },\n        raindrop3: { keyframes, options: { delay: 0.8 } },\n      }} iterationCount='infinite' css autoplay>\n        <div className='container'>\n          <div className='raindrop' data-scene-id='raindrop1'></div>\n          <div className='raindrop' data-scene-id='raindrop2'></div>\n          <div className='raindrop' data-scene-id='raindrop3'></div>\n        </div>\n      </Scene>\n      <br />\n      <input type='range' value={time} onInput={(e) => {\n        this.setState({ time: (e.target as HTMLInputElement).value });\n      }} />\n      <br />\n      <Scene easing={EASE_IN_OUT} time={`${time}%`} keyframes={{\n        raindrop1: { keyframes, options: { delay: 0 } },\n        raindrop2: { keyframes, options: { delay: 0.4 } },\n        raindrop3: { keyframes, options: { delay: 0.8 } },\n      }}>\n        <div className='container'>\n          <div className='raindrop' data-scene-id='raindrop1'></div>\n          <div className='raindrop' data-scene-id='raindrop2'></div>\n          <div className='raindrop' data-scene-id='raindrop3'></div>\n        </div>\n      </Scene>\n      <div className='container'>\n        <SceneItem\n          time={`${time}%`}\n          duration={1}\n          from={{ 'border-width': '150px', 'opacity': 1, 'transform': 'scale(0)' }}\n          to={{ 'border-width': '0px', 'opacity': 0, 'transform': 'scale(1)' }}\n          iterationCount='infinite'>\n          <div className='raindrop'></div>\n        </SceneItem>\n      </div>\n    </div >;\n  }\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!./raindrop.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./raindrop.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./raindrop.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import NativeScene, { SceneItem } from 'scenejs';\nimport { findDOMNode } from 'react-dom';\nimport { SceneInterface } from './SceneInterface';\n\n\nexport class Scene extends SceneInterface {\n  protected item: NativeScene = new NativeScene({}, {});\n  constructor(props: any) {\n    super(props);\n  }\n  public render() {\n    return this.props.children;\n  }\n  public componentDidMount() {\n    const element = findDOMNode(this) as HTMLElement;\n    if (this.props.keyframes) {\n      const keyframes = this.props.keyframes;\n\n      this.item.load(this.props.keyframes);\n    }\n\n    this.item.forEach((item: SceneItem) => {\n      const id = item.getId();\n\n      item.setElement(element.querySelector(`[data-scene-id=\"${id}\"]`) as HTMLElement);\n      item.setId(id);\n    });\n    this.init();\n  }\n}\n","import { StateInterface } from 'scenejs/declaration/Animator';\nimport { ObjectInterface } from 'scenejs/declaration/consts';\nimport { Component } from 'react';\nimport Scene, {OPTIONS, EVENTS, SceneItem} from 'scenejs';\n\ntype Callback = (...args: any[]) => any;\n\nexport interface EventTypes {\n  onPlay?: Callback;\n  onPaused?: Callback;\n  onEnded?: Callback;\n  onTimeUpdate?: Callback;\n  onIteration?: Callback;\n  onAnimate?: Callback;\n}\nexport interface PropTypes extends StateInterface, EventTypes {\n  keyframes?: ObjectInterface<any>;\n  from?: ObjectInterface<any>;\n  to?: ObjectInterface<any>;\n  css?: boolean;\n  time?: string | number;\n  autoplay?: boolean;\n}\n\n\nexport class SceneInterface extends Component<PropTypes, {}> {\n  public static defaultProps: PropTypes = {\n    duration: 0,\n    fillMode: 'forwards',\n    direction: 'normal',\n    playSpeed: 1,\n    iterationCount: 1,\n    delay: 0,\n    easing: 0,\n    time: -1,\n    css: false,\n    autoplay: false,\n    onPlay: () => undefined,\n    onPaused: () => undefined,\n    onEnded: () => undefined,\n    onTimeUpdate: () => undefined,\n    onIteration: () => undefined,\n    onAnimate: () => undefined,\n  };\n  protected item: Scene | SceneItem;\n  protected events: ObjectInterface<any> = {\n    play: (e: any) => this.props.onPlay(e),\n    paused: (e: any) => this.props.onPaused(e),\n    ended: (e: any) => this.props.onEnded(e),\n    timeupdate: (e: any) => this.props.onTimeUpdate(e),\n    iteration: (e: any) => this.props.onIteration(e),\n    animate: (e: any) => this.props.onAnimate(e),\n  };\n  public render() {\n    return this.props.children;\n  }\n  public componentDidUpdate() {\n    if (this.props.time !== -1 && (this.props.autoplay === false || this.item.getPlayState() === 'paused')) {\n      this.item.setTime(this.props.time);\n    }\n  }\n  public componentWillUnmount() {\n    this.item.off();\n  }\n  public setTime(time: number | string) {\n    this.item.setTime(time);\n  }\n  public getTime() {\n    return this.item.getTime();\n  }\n  public play() {\n    this.props.css !== false ? this.item.playCSS() : this.item.play();\n  }\n  public pause() {\n    this.item.pause();\n  }\n  public getItem() {\n    return this.item;\n  }\n  public getDuration() {\n    return this.item.getDuration();\n  }\n  protected init() {\n    const item = this.item;\n    const events = this.events;\n    const sceneOptions: StateInterface = {};\n\n    OPTIONS.forEach((name) => {\n      sceneOptions[name] = this.props[name];\n    });\n    item.setOptions(sceneOptions);\n    EVENTS.forEach((name) => {\n      this.item.on(name, events[name]);\n    });\n    if (this.props.autoplay !== false) {\n      this.play();\n    } else if (this.props.time !== -1) {\n      this.setTime(this.props.time);\n    }\n  }\n}\n","import { SceneItem as NativeSceneItem } from 'scenejs';\nimport { findDOMNode } from 'react-dom';\nimport { SceneInterface } from './SceneInterface';\n\n\nexport class SceneItem extends SceneInterface {\n  protected item: NativeSceneItem = new NativeSceneItem();\n  constructor(props: any) {\n    super(props);\n  }\n  public render() {\n    return this.props.children;\n  }\n  public componentDidMount() {\n    this.item.setElement(findDOMNode(this) as HTMLElement);\n\n    if (this.props.keyframes) {\n      this.item.set(this.props.keyframes);\n    } else {\n      this.item.set('0%', this.props.from);\n      this.item.set('100%', this.props.to);\n    }\n    this.init();\n  }\n}\n","export { EASE, EASE_IN, EASE_IN_OUT, bezier, steps, STEP_START, STEP_END } from 'scenejs';\nexport { SceneItem } from './SceneItem';\nexport { Scene } from './Scene';\n","module.exports = React;","module.exports = ReactDOM;"],"sourceRoot":""}