{"version":3,"file":"scene.cjs.js","sources":["../src/easing.ts","../src/consts.ts","../src/EventTrigger.ts","../src/PropertyObject.ts","../src/utils/property.ts","../src/utils.ts","../src/Animator.ts","../src/Frame.ts","../src/utils/dot.ts","../src/SceneItem.ts","../src/Scene.ts","../src/presets.ts","../src/index.umd.ts"],"sourcesContent":["import { EasingFunction } from \"./types\";\n\nfunction cubic(y1: number, y2: number, t: number) {\n  const t2 = 1 - t;\n\n  // Bezier Curve Formula\n  return t * t * t + 3 * t * t * t2 * y2 + 3 * t * t2 * t2 * y1;\n}\nfunction solveFromX(x1: number, x2: number, x: number) {\n  // x  0 ~ 1\n  // t 0 ~ 1\n  let t = x;\n  let solveX = x;\n  let dx = 1;\n\n  while (Math.abs(dx) > 1 / 1000) {\n    // 예상 t초에 의한 _x값\n    solveX = cubic(x1, x2, t);\n    dx = solveX - x;\n    // 차이가 미세하면 그 값을 t로 지정\n    if (Math.abs(dx) < 1 / 1000) {\n      return t;\n    }\n    t -= dx / 2;\n  }\n  return t;\n}\n/**\n * @namespace easing\n */\n/**\n* Cubic Bezier curve.\n* @memberof easing\n* @func bezier\n* @param {number} [x1] - point1's x\n* @param {number} [y1] - point1's y\n* @param {number} [x2] - point2's x\n* @param {number} [y2] - point2's y\n* @return {function} the curve function\n* @example\nimport {bezier} from \"scenejs\";\nScene.bezier(0, 0, 1, 1) // LINEAR\nScene.bezier(0.25, 0.1, 0.25, 1) // EASE\n*/\nexport function bezier(x1: number, y1: number, x2: number, y2: number) {\n  /*\n\t\tx = f(t)\n\t\tcalculate inverse function by x\n\t\tt = f-1(x)\n\t*/\n  const func: EasingFunction = (x: number) => {\n    const t = solveFromX(x1, x2, Math.max(Math.min(1, x), 0));\n\n    return cubic(y1, y2, t);\n  };\n\n  func.easingName = `cubic-bezier(${x1},${y1},${x2},${y2})`;\n  return func;\n}\n/**\n* Specifies a stepping function\n* @see {@link https://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp|CSS3 Timing Function}\n* @memberof easing\n* @func steps\n* @param {number} count - point1's x\n* @param {\"start\" | \"end\"} postion - point1's y\n* @return {function} the curve function\n* @example\nimport {steps} from \"scenejs\";\nScene.steps(1, \"start\") // Scene.STEP_START\nScene.steps(1, \"end\") // Scene.STEP_END\n*/\nexport function steps(count: number, position: \"start\" | \"end\") {\n  const func: EasingFunction = (time: number) => {\n    const level = 1 / count;\n\n    if (time >= 1) {\n      return 1;\n    }\n    return (position === \"start\" ? level : 0) + Math.floor(time / level) * level;\n  };\n\n  func.easingName = `steps(${count}, ${position})`;\n\n  return func;\n}\n\n/**\n* Equivalent to steps(1, start)\n* @memberof easing\n* @name STEP_START\n* @static\n* @type {function}\n* @example\nimport {STEP_START} from \"scenejs\";\nScene.STEP_START // steps(1, start)\n*/\nexport const STEP_START = /*#__PURE__#*/steps(1, \"start\");\n/**\n* Equivalent to steps(1, end)\n* @memberof easing\n* @name STEP_END\n* @static\n* @type {function}\n* @example\nimport {STEP_END} from \"scenejs\";\nScene.STEP_END // steps(1, end)\n*/\nexport const STEP_END = /*#__PURE__#*/steps(1, \"end\");\n/**\n* Linear Speed (0, 0, 1, 1)\n* @memberof easing\n* @name LINEAR\n* @static\n* @type {function}\n* @example\nimport {LINEAR} from \"scenejs\";\nScene.LINEAR\n*/\nexport const LINEAR = /*#__PURE__#*/bezier(0, 0, 1, 1);\n/**\n* Ease Speed (0.25, 0.1, 0.25, 1)\n* @memberof easing\n* @name EASE\n* @static\n* @type {function}\n* @example\nimport {EASE} from \"scenejs\";\nScene.EASE\n*/\nexport const EASE = /*#__PURE__#*/bezier(0.25, 0.1, 0.25, 1);\n/**\n* Ease In Speed (0.42, 0, 1, 1)\n* @memberof easing\n* @name EASE_IN\n* @static\n* @type {function}\n* @example\nimport {EASE_IN} from \"scenejs\";\nScene.EASE_IN\n*/\nexport const EASE_IN = /*#__PURE__#*/bezier(0.42, 0, 1, 1);\n/**\n* Ease Out Speed (0, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_OUT} from \"scenejs\";\nScene.EASE_OUT\n*/\nexport const EASE_OUT = /*#__PURE__#*/bezier(0, 0, 0.58, 1);\n/**\n* Ease In Out Speed (0.42, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_IN_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_IN_OUT} from \"scenejs\";\nScene.EASE_IN_OUT\n*/\nexport const EASE_IN_OUT = /*#__PURE__#*/bezier(0.42, 0, 0.58, 1);\n","import { IObject } from \"@daybrush/utils\";\nimport { RoleObject, OptionType, EventType, EasingFunction } from \"./types\";\nimport { EASE, EASE_IN, EASE_IN_OUT, LINEAR, EASE_OUT, STEP_START, STEP_END } from \"./easing\";\n\nexport const PREFIX = \"__SCENEJS_\";\nexport const DATA_SCENE_ID = \"data-scene-id\";\nexport const TIMING_FUNCTION = \"animation-timing-function\";\nexport const ROLES: RoleObject = { transform: {}, filter: {}, attribute: {}, html: true };\nexport const ALIAS: IObject<string[]> = { easing: [TIMING_FUNCTION] };\nexport const FIXED = { [TIMING_FUNCTION]: true, contents: true, html: true };\nexport const MAXIMUM = 1000000;\nexport const THRESHOLD = 0.000001;\n\nexport const DURATION = \"duration\";\nexport const FILL_MODE = \"fillMode\";\nexport const DIRECTION = \"direction\";\nexport const ITERATION_COUNT = \"iterationCount\";\nexport const DELAY = \"delay\";\nexport const EASING = \"easing\";\nexport const PLAY_SPEED = \"playSpeed\";\nexport const EASING_NAME = \"easingName\";\nexport const ITERATION_TIME = \"iterationTime\";\nexport const PAUSED = \"paused\";\nexport const ENDED = \"ended\";\nexport const TIMEUPDATE = \"timeupdate\";\nexport const ANIMATE = \"animate\";\nexport const PLAY = \"play\";\nexport const RUNNING = \"running\";\nexport const ITERATION = \"iteration\";\nexport const START_ANIMATION = \"startAnimation\";\nexport const PAUSE_ANIMATION = \"pauseAnimation\";\nexport const ALTERNATE = \"alternate\";\nexport const REVERSE = \"reverse\";\nexport const ALTERNATE_REVERSE = \"alternate-reverse\";\nexport const NORMAL = \"normal\";\nexport const INFINITE = \"infinite\";\nexport const PLAY_STATE = \"playState\";\nexport const PLAY_CSS = \"playCSS\";\nexport const PREV_TIME = \"prevTime\";\nexport const TICK_TIME = \"tickTime\";\nexport const CURRENT_TIME = \"currentTime\";\nexport const SELECTOR = \"selector\";\nexport const TRANSFORM_NAME = \"transform\";\nexport const EASINGS = {\n    \"linear\": LINEAR,\n    \"ease\": EASE,\n    \"ease-in\": EASE_IN,\n    \"ease-out\": EASE_OUT,\n    \"ease-in-out\": EASE_IN_OUT,\n    \"step-start\": STEP_START,\n    \"step-end\": STEP_END,\n};\n\n/**\n* option name list\n* @name Scene.OPTIONS\n* @memberof Scene\n* @static\n* @type {$ts:OptionType}\n* @example\n* Scene.OPTIONS // [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"]\n*/\nexport const OPTIONS: OptionType = [DURATION, FILL_MODE, DIRECTION, ITERATION_COUNT, DELAY, EASING, PLAY_SPEED];\n\n/**\n* Event name list\n* @name Scene.EVENTS\n* @memberof Scene\n* @static\n* @type {$ts:EventType}\n* @example\n* Scene.EVENTS // [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n*/\nexport const EVENTS: EventType = [PAUSED, ENDED, TIMEUPDATE, ANIMATE, PLAY, ITERATION];\n","import { isObject, isArray, toArray } from \"@daybrush/utils\";\nimport { CallbackType, EventParameter } from \"./types\";\n\n/**\n* attach and trigger event handlers.\n*/\nclass EventTrigger {\n    public events: { [name: string]: CallbackType[] };\n    /**\n      * @example\n  const et = new Scene.EventTrigger();\n  const scene = new Scene();\n\n  scene.on(\"call\", e => {\n      console.log(e.param);\n  });\n  et.on(\"call\", e => {\n      console.log(e.param);\n  });\n  scene.trigger(\"call\", {param: 1});\n  et.trigger(\"call\", {param: 1});\n       */\n    constructor() {\n        this.events = {};\n    }\n    public _on(name: string | EventParameter, callback?: CallbackType | CallbackType[], once?: boolean) {\n        const events = this.events;\n\n        if (isObject(name)) {\n            for (const n in name) {\n                this._on(n, name[n], once);\n            }\n            return;\n        }\n        if (!(name in events)) {\n            events[name] = [];\n        }\n        if (!callback) {\n            return;\n        }\n        if (isArray(callback)) {\n            callback.forEach(func => this._on(name, func, once));\n            return;\n        }\n        events[name].push(once ? function callback2(...args) {\n            callback(...args);\n            this.off(name, callback2);\n        } : callback);\n    }\n    /**\n      * Attach an event handler function for one or more events to target\n      * @param - event's name\n      * @param - function to execute when the event is triggered.\n      * @return {EventTrigger} An Instance itself.\n      * @example\n  target.on(\"animate\", function() {\n      console.log(\"animate\");\n  });\n\n  target.trigger(\"animate\");\n\n    */\n    public on(name: string | EventParameter, callback?: CallbackType | CallbackType[]) {\n        this._on(name, callback);\n        return this;\n    }\n    /**\n      * Dettach an event handler function for one or more events to target\n      * @param - event's name\n      * @param -  function to execute when the event is triggered.\n      * @return {EventTrigger} An Instance itself.\n      * @example\n  const callback = function() {\n      console.log(\"animate\");\n  };\n  target.on(\"animate\", callback);\n\n  target.off(\"animate\", callback);\n  target.off(\"animate\");\n\n      */\n    public off(name?: string, callback?: CallbackType) {\n        if (!name) {\n            this.events = {};\n        } else if (!callback) {\n            this.events[name] = [];\n        } else {\n            const callbacks = this.events[name];\n\n            if (!callbacks) {\n                return this;\n            }\n            const index = callbacks.indexOf(callback);\n\n            if (index !== -1) {\n                callbacks.splice(index, 1);\n            }\n        }\n        return this;\n    }\n    /**\n      * execute event handler\n      * @param - event's name\n      * @param - event handler's additional parameter\n      * @return {EventTrigger} An Instance itself.\n      * @example\n  target.on(\"animate\", function(a1, a2) {\n      console.log(\"animate\", a1, a2);\n  });\n\n  target.trigger(\"animate\", [1, 2]); // log => \"animate\", 1, 2\n\n      */\n    public trigger(name: string, ...data: any[]) {\n        const events = this.events;\n\n        if (!(name in events)) {\n            return this;\n        }\n\n        const args = data || [];\n\n        !args[0] && (args[0] = {});\n        const event = events[name];\n        const target = args[0];\n\n        target.type = name;\n        target.currentTarget = this;\n        !target.target && (target.target = this);\n        toArray(events[name]).forEach(callback => {\n            callback.apply(this, data);\n        });\n\n        return this;\n    }\n    public once(name: string | EventParameter, callback?: CallbackType | CallbackType[]) {\n        this._on(name, callback, true);\n        return this;\n    }\n}\nexport default EventTrigger;\n","import { isString } from \"@daybrush/utils\";\nimport { PropertyObjectState } from \"./types\";\n\n/**\n* Make string, array to PropertyObject for the dot product\n*/\nclass PropertyObject implements PropertyObjectState {\n    public value: any[];\n    public prefix: string = \"\";\n    public suffix: string = \"\";\n    public model: string = \"\";\n    public type: string = \"\";\n    public separator: string = \",\";\n\n    /**\n      * @param - This value is in the array format.\n      * @param - options\n      * @example\n  var obj = new PropertyObject([100,100,100,0.5], {\n      \"separator\" : \",\",\n      \"prefix\" : \"rgba(\",\n      \"suffix\" : \")\"\n  });\n       */\n    constructor(value: string | any[], options?: Partial<PropertyObjectState>) {\n        options && this.setOptions(options);\n        this.value = isString(value) ? value.split(this.separator) : value;\n    }\n    public setOptions(newOptions: Partial<PropertyObjectState>) {\n        for (const name in newOptions) {\n            this[name as keyof PropertyObjectState] = newOptions[name as keyof PropertyObjectState];\n        }\n        return this;\n    }\n    /**\n      * the number of values.\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n\n  console.log(obj1.length);\n  // 3\n       */\n    public size() {\n        return this.value.length;\n    }\n    /**\n      * retrieve one of values at the index\n      * @param {Number} index - index\n      * @return {Object} one of values at the index\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n\n  console.log(obj1.get(0));\n  // 1\n       */\n    public get(index: number) {\n        return this.value[index];\n    }\n    /**\n      * Set the value at that index\n      * @param {Number} index - index\n      * @param {Object} value - text, a number, object to set\n      * @return {PropertyObject} An instance itself\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n  obj1.set(0, 2);\n  console.log(obj1.toValue());\n  // 2,2,3\n       */\n    public set(index: number, value: any) {\n        this.value[index] = value;\n        return this;\n    }\n    /**\n      * create a copy of an instance itself.\n      * @return {PropertyObject} clone\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n  const obj2 = obj1.clone();\n       */\n    public clone(): PropertyObject {\n        const {\n            separator,\n            prefix,\n            suffix,\n            model,\n            type,\n        } = this;\n        const arr = this.value.map(v => ((v instanceof PropertyObject) ? v.clone() : v));\n        return new PropertyObject(arr, {\n            separator,\n            prefix,\n            suffix,\n            model,\n            type,\n        });\n    }\n    /**\n      * Make Property Object to String\n      * @return {String} Make Property Object to String\n      * @example\n  //rgba(100, 100, 100, 0.5)\n  const obj4 = new PropertyObject([100,100,100,0.5], {\n      \"separator\" : \",\",\n      \"prefix\" : \"rgba(\",\n      \"suffix\" : \")\",\n  });\n  console.log(obj4.toValue());\n  // \"rgba(100,100,100,0.5)\"\n      */\n    public toValue(): string {\n        return this.prefix + this.join() + this.suffix;\n    }\n    /**\n      * Make Property Object's array to String\n      * @return {String} Join the elements of an array into a string\n      * @example\n      //rgba(100, 100, 100, 0.5)\n      var obj4 = new PropertyObject([100,100,100,0.5], {\n          \"separator\" : \",\",\n          \"prefix\" : \"rgba(\",\n          \"suffix\" : \")\"\n      });\n      obj4.join();  // =>   \"100,100,100,0.5\"\n       */\n    public join() {\n        return this.value.map(v => ((v instanceof PropertyObject) ? v.toValue() : v)).join(this.separator);\n    }\n    /**\n      * executes a provided function once per array element.\n      * @param {Function} callback - Function to execute for each element, taking three arguments\n      * @param {All} [callback.currentValue] The current element being processed in the array.\n      * @param {Number} [callback.index] The index of the current element being processed in the array.\n      * @param {Array} [callback.array] the array.\n      * @return {PropertyObject} An instance itself\n      * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach|MDN Array.forEach()} reference to MDN document.\n      * @example\n  //rgba(100, 100, 100, 0.5)\n  var obj4 = new PropertyObject([100,100,100,0.5], {\n      \"separator\" : \",\",\n      \"prefix\" : \"rgba(\",\n      \"suffix\" : \")\"\n  });\n\n  obj4.forEach(t => {\n      console.log(t);\n  });  // =>   \"100,100,100,0.5\"\n      */\n    public forEach(func: (value?: any, index?: number, array?: any[]) => void) {\n        this.value.forEach(func);\n        return this;\n    }\n}\nexport default PropertyObject;\n","/**\n* @namespace\n* @name Property\n*/\n\nimport PropertyObject from \"../PropertyObject\";\nimport {\n    COLOR_MODELS, isString,\n    splitComma, splitSpace, stringToRGBA,\n    RGBA, splitBracket, IObject, isArray, splitText\n} from \"@daybrush/utils\";\nimport { NameType } from \"../types\";\n\nexport function splitStyle(str: string) {\n\n    const properties = splitText(str, \";\");\n    const obj: IObject<string | PropertyObject> = {};\n    let length = properties.length;\n\n    for (let i = 0; i < length; ++i) {\n        const matches = splitText(properties[i], \":\");\n\n        if (matches.length < 2 || !matches[1]) {\n            --length;\n            continue;\n        }\n        obj[matches[0].trim()] = toPropertyObject(matches[1].trim());\n    }\n    return { styles: obj, length };\n}\n/**\n* convert array to PropertyObject[type=color].\n* default model \"rgba\"\n* @memberof Property\n* @function arrayToColorObject\n* @param {Array|PropertyObject} value ex) [0, 0, 0, 1]\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\narrayToColorObject([0, 0, 0])\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0, 1], separator=\",\")\n*/\nexport function arrayToColorObject(arr: number[]) {\n    const model = RGBA;\n\n    if (arr.length === 3) {\n        arr[3] = 1;\n    }\n    return new PropertyObject(arr, {\n        model,\n        separator: \",\",\n        type: \"color\",\n        prefix: `${model}(`,\n        suffix: \")\",\n    });\n}\n/**\n* convert text with parentheses to object.\n* @memberof Property\n* @function stringToBracketObject\n* @param {String} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject\n* @example\nstringToBracketObject(\"abcde(0, 0, 0,1)\")\n// => PropertyObject(model=\"abcde\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToBracketObject(text: string) {\n    // [prefix, value, other]\n    const { prefix: model, value, suffix: afterModel } = splitBracket(text);\n\n    if (typeof value === \"undefined\") {\n        return text;\n    }\n    if (COLOR_MODELS.indexOf(model) > -1) {\n        return arrayToColorObject(stringToRGBA(text));\n    }\n    // divide comma(,)\n    const obj = toPropertyObject(value, model);\n\n    let arr = [value];\n    let separator = \",\";\n    let prefix = `${model}(`;\n    let suffix = `)${afterModel}`;\n\n    if (obj instanceof PropertyObject) {\n        separator = obj.separator;\n        arr = obj.value;\n        prefix += obj.prefix;\n        suffix = obj.suffix + suffix;\n    }\n    return new PropertyObject(arr, {\n        separator,\n        model,\n        prefix,\n        suffix,\n    });\n}\n\nexport function arrayToPropertyObject(arr: any[], separator: string) {\n    return new PropertyObject(arr, {\n        type: \"array\",\n        separator,\n    });\n}\n\n/**\n* convert text with parentheses to PropertyObject[type=color].\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Property\n* @function stringToColorObject\n* @param {String|PropertyObject} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\nstringToColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToColorObject(value: string): string | PropertyObject {\n    const result = stringToRGBA(value);\n\n    return result ? arrayToColorObject(result) : value;\n}\n/**\n* convert CSS Value to PropertyObject\n* @memberof Property\n* @function toPropertyObject\n* @param {String} value it's text contains the array.\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @see referenced regular expression {@link http://stackoverflow.com/questions/20215440/parse-css-gradient-rule-with-javascript-regex}\n* @example\ntoPropertyObject(\"1px solid #000\");\n// => PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)])\n*/\nexport function toPropertyObject(value: any[], model?: NameType): PropertyObject;\nexport function toPropertyObject(value: IObject<any>, model?: NameType): IObject<any>;\nexport function toPropertyObject(value: string, model?: NameType): PropertyObject | string;\nexport function toPropertyObject(value: string | IObject<any> | any[], model?: NameType) {\n    if (!isString(value)) {\n        if (isArray(value)) {\n            return arrayToPropertyObject(value, \",\");\n        }\n        return value;\n    }\n    let values: any = splitComma(value);\n\n    if (values.length > 1) {\n        return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \",\");\n    }\n    values = splitSpace(value);\n\n    if (values.length > 1) {\n        return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \" \");\n    }\n    values = /^(['\"])([^'\"]*)(['\"])$/g.exec(value);\n\n    if (values && values[1] === values[3]) {\n        // Quotes\n        return new PropertyObject([toPropertyObject(values[2])], {\n            prefix: values[1],\n            suffix: values[1],\n        });\n    } else if (value.indexOf(\"(\") !== -1) {\n        // color\n        return stringToBracketObject(value);\n    } else if (value.charAt(0) === \"#\" && model !== \"url\") {\n        return stringToColorObject(value);\n    }\n    return value;\n}\nexport function toObject(object: PropertyObject, result: IObject<any> = {}) {\n    const model = object.model;\n\n    if (model) {\n        object.setOptions({\n            model: \"\",\n            suffix: \"\",\n            prefix: \"\",\n        });\n        const value = object.size() > 1 ? object : object.get(0);\n\n        result[model] = value;\n    } else {\n        object.forEach(obj => {\n            toObject(obj, result);\n        });\n    }\n    return result;\n}\n","import {\n    ROLES, MAXIMUM, FIXED, ALIAS,\n    PAUSED, RUNNING, PLAY, ENDED, PREFIX, PLAY_CSS, CURRENT_TIME, START_ANIMATION, EASINGS\n} from \"./consts\";\nimport PropertyObject from \"./PropertyObject\";\nimport Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport {\n    isArray, ANIMATION, ARRAY, OBJECT,\n    PROPERTY, STRING, NUMBER, IS_WINDOW, IObject, $, document, isObject, addEvent, removeEvent, isString,\n} from \"@daybrush/utils\";\nimport { EasingType, EasingFunction, NameType } from \"./types\";\nimport { toPropertyObject } from \"./utils/property\";\nimport { bezier, steps } from \"./easing\";\n\nexport function isPropertyObject(value: any): value is PropertyObject {\n    return value instanceof PropertyObject;\n}\nexport function setAlias(name: string, alias: string[]) {\n    ALIAS[name] = alias;\n}\nexport function setRole(names: string[], isProperty?: boolean, isFixedProperty?: boolean) {\n    const length = names.length;\n    let roles: any = ROLES;\n    let fixed: any = FIXED;\n\n    for (let i = 0; i < length - 1; ++i) {\n        !roles[names[i]] && (roles[names[i]] = {});\n        roles = roles[names[i]];\n        if (isFixedProperty) {\n            !fixed[names[i]] && (fixed[names[i]] = {});\n            fixed = fixed[names[i]];\n        }\n    }\n    isFixedProperty && (fixed[names[length - 1]] = true);\n    roles[names[length - 1]] = isProperty ? true : {};\n}\nexport function getType(value: any) {\n    const type = typeof value;\n\n    if (type === OBJECT) {\n        if (isArray(value)) {\n            return ARRAY;\n        } else if (isPropertyObject(value)) {\n            return PROPERTY;\n        }\n    } else if (type === STRING || type === NUMBER) {\n        return \"value\";\n    }\n    return type;\n}\nexport function isPureObject(obj: any): obj is object {\n    return isObject(obj) && obj.constructor === Object;\n}\nexport function getNames(names: IObject<any>, stack: string[]) {\n    let arr: string[][] = [];\n\n    if (isPureObject(names)) {\n        for (const name in names) {\n            stack.push(name);\n            arr = arr.concat(getNames(names[name], stack));\n            stack.pop();\n        }\n    } else {\n        arr.push(stack.slice());\n    }\n    return arr;\n}\nexport function updateFrame(names: IObject<any>, properties: IObject<any>) {\n    for (const name in properties) {\n        const value = properties[name];\n\n        if (!isPureObject(value)) {\n            names[name] = true;\n            continue;\n        }\n        if (!isObject(names[name])) {\n            names[name] = {};\n        }\n        updateFrame(names[name], properties[name]);\n    }\n    return names;\n}\nexport function toFixed(num: number) {\n    return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nexport function getValueByNames(\n    names: Array<string | number>,\n    properties: IObject<any>, length: number = names.length) {\n    let value = properties;\n\n    for (let i = 0; i < length; ++i) {\n        if (!isObject(value)) {\n            return undefined;\n        }\n        value = value[names[i]];\n    }\n    return value;\n}\nexport function isInProperties(roles: IObject<any>, args: NameType[], isCheckTrue?: boolean) {\n    const length = args.length;\n    let role: any = roles;\n\n    if (length === 0) {\n        return false;\n    }\n    for (let i = 0; i < length; ++i) {\n        if (role === true) {\n            return false;\n        }\n        role = role[args[i]];\n        if (!role || (!isCheckTrue && role === true)) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function isRole(args: NameType[], isCheckTrue?: boolean) {\n    return isInProperties(ROLES, args, isCheckTrue);\n}\nexport function isFixed(args: NameType[]) {\n    return isInProperties(FIXED, args, true);\n}\n\nexport interface IterationInterface {\n    currentTime: number;\n    iterationCount: number;\n    elapsedTime: number;\n}\nexport function setPlayCSS(item: Scene | SceneItem, isActivate: boolean) {\n    item.state[PLAY_CSS] = isActivate;\n}\nexport function isPausedCSS(item: Scene | SceneItem) {\n    return item.state[PLAY_CSS] && item.isPaused();\n}\nexport function isEndedCSS(item: Scene | SceneItem) {\n    return !item.isEnded() && item.state[PLAY_CSS];\n}\n\nexport function exportCSS(id: number | string, css: string) {\n    const styleId = `${PREFIX}STYLE_${toId(id)}`;\n    const styleElement: HTMLElement = $(`#${styleId}`);\n\n    if (styleElement) {\n        styleElement.innerText = css;\n    } else {\n        document.body.insertAdjacentHTML(\"beforeend\",\n            `<style id=\"${styleId}\">${css}</style>`);\n    }\n}\nexport function makeId(selector?: boolean) {\n    for (; ;) {\n        const id = `${Math.floor(Math.random() * 10000000)}`;\n\n        if (!IS_WINDOW || !selector) {\n            return id;\n        }\n        const checkElement = $(`[data-scene-id=\"${id}\"]`);\n\n        if (!checkElement) {\n            return id;\n        }\n    }\n}\nexport function getRealId(item: Scene | SceneItem) {\n    return item.getId() || item.setId(makeId(false)).getId();\n}\nexport function toId(text: number | string) {\n    return `${text}`.match(/[0-9a-zA-Z]+/g).join(\"\");\n}\nexport function playCSS(\n    item: Scene | SceneItem, isExportCSS?: boolean,\n    playClassName?: string, properties: object = {}) {\n    if (!ANIMATION || item.getPlayState() === RUNNING) {\n        return;\n    }\n    const className = playClassName || START_ANIMATION;\n\n    if (isPausedCSS(item)) {\n        item.addPlayClass(true, className, properties);\n    } else {\n        if (item.isEnded()) {\n            item.setTime(0);\n        }\n        isExportCSS && item.exportCSS({ className });\n        const el = item.addPlayClass(false, className, properties);\n\n        if (!el) {\n            return;\n        }\n        addAnimationEvent(item, el);\n        setPlayCSS(item, true);\n    }\n    item.setPlayState(RUNNING);\n}\n\nexport function addAnimationEvent(item: Scene | SceneItem, el: Element) {\n    const state = item.state;\n    const duration = item.getDuration();\n    const isZeroDuration = !duration || !isFinite(duration);\n    const animationend = () => {\n        setPlayCSS(item, false);\n        item.finish();\n    };\n    const animationstart = () => {\n        item.trigger(PLAY);\n    };\n    item.once(ENDED, () => {\n        removeEvent(el, \"animationcancel\", animationend);\n        removeEvent(el, \"animationend\", animationend);\n        removeEvent(el, \"animationiteration\", animationiteration);\n        removeEvent(el, \"animationstart\", animationstart);\n    });\n    const animationiteration = ({ elapsedTime }: any) => {\n        const currentTime = elapsedTime;\n        const iterationCount = isZeroDuration ? 0 : (currentTime / duration);\n\n        state[CURRENT_TIME] = currentTime;\n        item.setIteration(iterationCount);\n    };\n    addEvent(el, \"animationcancel\", animationend);\n    addEvent(el, \"animationend\", animationend);\n    addEvent(el, \"animationiteration\", animationiteration);\n    addEvent(el, \"animationstart\", animationstart);\n}\n\nexport function getEasing(curveArray: string | number[] | EasingFunction): EasingType {\n    let easing: EasingType;\n\n    if (isString(curveArray)) {\n        if (curveArray in EASINGS) {\n            easing = EASINGS[curveArray];\n        } else {\n            const obj = toPropertyObject(curveArray);\n\n            if (isString(obj)) {\n                return 0;\n            } else {\n                if (obj.model === \"cubic-bezier\") {\n                    curveArray = obj.value.map(v => parseFloat(v));\n                    easing = bezier(curveArray[0], curveArray[1], curveArray[2], curveArray[3]);\n                } else if (obj.model === \"steps\") {\n                    easing = steps(parseFloat(obj.value[0]), obj.value[1]);\n                } else {\n                    return 0;\n                }\n            }\n        }\n    } else if (isArray(curveArray)) {\n        easing = bezier(curveArray[0], curveArray[1], curveArray[2], curveArray[3]);\n    } else {\n        easing = curveArray;\n    }\n\n    return easing;\n}\n","import {\n    THRESHOLD,\n    ALTERNATE, ALTERNATE_REVERSE, REVERSE, INFINITE, NORMAL,\n    ITERATION_COUNT, DELAY, FILL_MODE, DIRECTION, PLAY_SPEED,\n    DURATION, EASING, ITERATION_TIME, EASING_NAME, PAUSED,\n    RUNNING, PLAY, TIMEUPDATE, ENDED, PLAY_STATE, PREV_TIME, TICK_TIME, CURRENT_TIME, ITERATION, OPTIONS, EASINGS\n} from \"./consts\";\nimport EventTrigger from \"./EventTrigger\";\nimport { bezier, steps } from \"./easing\";\nimport { toFixed, getEasing } from \"./utils\";\nimport { splitUnit, isString, camelize, requestAnimationFrame, isArray, cancelAnimationFrame } from \"@daybrush/utils\";\nimport {\n    IterationCountType, DirectionType, AnimatorState,\n    EasingFunction, FillModeType, PlayStateType, EasingType, AnimatorOptions,\n} from \"./types\";\nimport { toPropertyObject } from \"./utils/property\";\n\nfunction GetterSetter<T extends new (...args: any[]) => {}>(\n    getter: string[], setter: string[], parent: string) {\n    return (constructor: T) => {\n        const prototype = constructor.prototype;\n\n        getter.forEach(name => {\n            prototype[camelize(`get ${name}`)] = function() {\n                return this[parent][name];\n            };\n        });\n        setter.forEach(name => {\n            prototype[camelize(`set ${name}`)] = function(value: any) {\n                this[parent][name] = value;\n                return this;\n            };\n        });\n    };\n}\nexport function isDirectionReverse(iteration: number, iteraiontCount: IterationCountType, direction: DirectionType) {\n    if (direction === REVERSE) {\n        return true;\n    } else if (iteraiontCount !== INFINITE && iteration === iteraiontCount && iteraiontCount % 1 === 0) {\n        return direction === (iteration % 2 >= 1 ? ALTERNATE_REVERSE : ALTERNATE);\n    }\n    return direction === (iteration % 2 >= 1 ? ALTERNATE : ALTERNATE_REVERSE);\n}\n/**\n* @typedef {Object} AnimatorState The Animator options. Properties used in css animation.\n* @property {number} [duration] The duration property defines how long an animation should take to complete one cycle.\n* @property {\"none\"|\"forwards\"|\"backwards\"|\"both\"} [fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n* @property {\"infinite\"|number} [iterationCount] The iterationCount property specifies the number of times an animation should be played.\n* @property {array|function} [easing] The easing(timing-function) specifies the speed curve of an animation.\n* @property {number} [delay] The delay property specifies a delay for the start of an animation.\n* @property {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} [direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n*/\n\nconst setters = [\"id\", ITERATION_COUNT, DELAY, FILL_MODE,\n    DIRECTION, PLAY_SPEED, DURATION, PLAY_SPEED, ITERATION_TIME, PLAY_STATE];\nconst getters = [...setters, EASING, EASING_NAME];\n\n/**\n* play video, animation, the others\n* @extends EventTrigger\n* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n*/\n@GetterSetter(getters, setters, \"state\")\nclass Animator\n    <T extends AnimatorOptions = AnimatorOptions, U extends AnimatorState = AnimatorState> extends EventTrigger {\n    public state: U;\n    private timerId: number = 0;\n\n    /**\n     * @param - animator's options\n     * @example\n  const animator = new Animator({\n      delay: 2,\n      diretion: \"alternate\",\n      duration: 2,\n      fillMode: \"forwards\",\n      iterationCount: 3,\n      easing: Scene.easing.EASE,\n  });\n     */\n    constructor(options?: Partial<T & AnimatorOptions>) {\n        super();\n        this.state = {\n            id: \"\",\n            easing: 0,\n            easingName: \"linear\",\n            iterationCount: 1,\n            delay: 0,\n            fillMode: \"forwards\",\n            direction: NORMAL,\n            playSpeed: 1,\n            currentTime: 0,\n            iterationTime: -1,\n            iteration: 0,\n            tickTime: 0,\n            prevTime: 0,\n            playState: PAUSED,\n            duration: 0,\n        } as U;\n        this.setOptions(options);\n    }\n    /**\n      * set animator's easing.\n      * @param curverArray - The speed curve of an animation.\n      * @return {Animator} An instance itself.\n      * @example\n  animator.({\n      delay: 2,\n      diretion: \"alternate\",\n      duration: 2,\n      fillMode: \"forwards\",\n      iterationCount: 3,\n      easing: Scene.easing.EASE,\n  });\n      */\n    public setEasing(curveArray: string | number[] | EasingFunction): this {\n        const easing: EasingType = getEasing(curveArray);\n        const easingName = easing && easing[EASING_NAME] || \"linear\";\n        const state = this.state;\n\n        state[EASING] = easing;\n        state[EASING_NAME] = easingName;\n        return this;\n    }\n    /**\n      * set animator's options.\n      * @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n      * @param - animator's options\n      * @return {Animator} An instance itself.\n      * @example\n  animator.({\n      delay: 2,\n      diretion: \"alternate\",\n      duration: 2,\n      fillMode: \"forwards\",\n      iterationCount: 3,\n      easing: Scene.eaasing.EASE,\n  });\n      */\n    public setOptions(options: Partial<AnimatorOptions> = {}): this {\n        for (const name in options) {\n            const value = options[name];\n\n            if (name === EASING) {\n                this.setEasing(value);\n                continue;\n            } else if (name === DURATION) {\n                value && this.setDuration(value);\n                continue;\n            }\n            if (OPTIONS.indexOf(name as any) > -1) {\n                this.state[name] = value;\n            }\n        }\n\n        return this;\n    }\n    /**\n      * Get the animator's total duration including delay\n      * @return {number} Total duration\n      * @example\n  animator.getTotalDuration();\n      */\n    public getTotalDuration(): number {\n        return this.getActiveDuration(true);\n    }\n    /**\n      * Get the animator's total duration excluding delay\n      * @return {number} Total duration excluding delay\n      * @example\n  animator.getActiveDuration();\n      */\n    public getActiveDuration(delay?: boolean): number {\n        const state = this.state;\n        const count = state[ITERATION_COUNT];\n        if (count === INFINITE) {\n            return Infinity;\n        }\n        return (delay ? state[DELAY] : 0) + this.getDuration() * count;\n    }\n    /**\n      * Check if the animator has reached the end.\n      * @return {boolean} ended\n      * @example\n  animator.isEnded(); // true or false\n      */\n    public isEnded(): boolean {\n        if (this.state[TICK_TIME] === 0 && this.state[PLAY_STATE] === PAUSED) {\n            return true;\n        } else if (this.getTime() < this.getActiveDuration()) {\n            return false;\n        }\n        return true;\n    }\n    /**\n      *Check if the animator is paused:\n      * @return {boolean} paused\n      * @example\n  animator.isPaused(); // true or false\n      */\n    public isPaused(): boolean {\n        return this.state[PLAY_STATE] === PAUSED;\n    }\n    public start(delay: number = this.state[DELAY]): boolean {\n        const state = this.state;\n\n        state[PLAY_STATE] = RUNNING;\n        if (state[TICK_TIME] >= delay) {\n            /**\n             * This event is fired when play animator.\n             * @event Animator#play\n             */\n            this.trigger(PLAY);\n            return true;\n        }\n        return false;\n    }\n    /**\n      * play animator\n      * @return {Animator} An instance itself.\n      */\n    public play(toTime?: number) {\n        const state = this.state;\n        const delay = state[DELAY];\n        const currentTime = this.getTime();\n\n        state[PLAY_STATE] = RUNNING;\n\n        if (this.isEnded() && (currentTime === 0 || currentTime >= this.getActiveDuration())) {\n            this.setTime(-delay, true);\n        }\n\n        this.timerId = requestAnimationFrame((time: number) => {\n            state[PREV_TIME] = time;\n            this.tick(time, toTime);\n        });\n        this.start();\n        return this;\n    }\n    /**\n      * pause animator\n      * @return {Animator} An instance itself.\n      */\n    public pause(): this {\n        const state = this.state;\n\n        if (state[PLAY_STATE] !== PAUSED) {\n            state[PLAY_STATE] = PAUSED;\n            /**\n             * This event is fired when animator is paused.\n             * @event Animator#paused\n             */\n            this.trigger(PAUSED);\n        }\n        cancelAnimationFrame(this.timerId);\n        return this;\n    }\n    /**\n       * end animator\n       * @return {Animator} An instance itself.\n      */\n    public finish() {\n        this.setTime(0);\n        this.state[TICK_TIME] = 0;\n        this.end();\n        return this;\n    }\n    /**\n       * end animator\n       * @return {Animator} An instance itself.\n      */\n    public end() {\n        this.pause();\n        /**\n             * This event is fired when animator is ended.\n             * @event Animator#ended\n             */\n        this.trigger(ENDED);\n        return this;\n    }\n    /**\n      * set currentTime\n      * @param {Number|String} time - currentTime\n      * @return {Animator} An instance itself.\n      * @example\n\n  animator.setTime(\"from\"); // 0\n  animator.setTime(\"to\"); // 100%\n  animator.setTime(\"50%\");\n  animator.setTime(10);\n  animator.getTime() // 10\n      */\n    public setTime(time: number | string, isTick?: boolean, isParent?: boolean) {\n        const activeDuration = this.getActiveDuration();\n        const state = this.state;\n        const prevTime = state[TICK_TIME];\n        const delay = state[DELAY];\n        let currentTime = isTick ? (time as number) : this.getUnitTime(time);\n\n        state[TICK_TIME] = delay + currentTime;\n        if (currentTime < 0) {\n            currentTime = 0;\n        } else if (currentTime > activeDuration) {\n            currentTime = activeDuration;\n        }\n        state[CURRENT_TIME] = currentTime;\n        this.calculate();\n\n        if (isTick && !isParent) {\n            const tickTime = state[TICK_TIME];\n\n            if (prevTime < delay && time >= 0) {\n                this.start(0);\n            }\n            if (tickTime < prevTime || this.isEnded()) {\n                this.end();\n                return;\n            }\n        }\n        if (this.isDelay()) {\n            return this;\n        }\n        /**\n             * This event is fired when the animator updates the time.\n             * @event Animator#timeupdate\n             * @param {Object} param The object of data to be sent to an event.\n             * @param {Number} param.currentTime The total time that the animator is running.\n             * @param {Number} param.time The iteration time during duration that the animator is running.\n             * @param {Number} param.iterationCount The iteration count that the animator is running.\n             */\n        this.trigger(TIMEUPDATE, {\n            currentTime,\n            time: this.getIterationTime(),\n            iterationCount: state[ITERATION],\n        });\n\n        return this;\n    }\n    /**\n      * Get the animator's current time\n      * @return {number} current time\n      * @example\n  animator.getTime();\n      */\n    public getTime(): number {\n        return this.state[CURRENT_TIME];\n    }\n    public getUnitTime(time: string | number) {\n        if (isString(time)) {\n            const duration = this.getDuration() || 100;\n\n            if (time === \"from\") {\n                return 0;\n            } else if (time === \"to\") {\n                return duration;\n            }\n            const { unit, value } = splitUnit(time);\n\n            if (unit === \"%\") {\n                !this.getDuration() && (this.setDuration(duration));\n                return toFixed(parseFloat(time) / 100 * duration);\n            } else if (unit === \">\") {\n                return value + THRESHOLD;\n            } else {\n                return value;\n            }\n        } else {\n            return toFixed(time);\n        }\n    }\n    /**\n       * Check if the current state of animator is delayed.\n       * @return {boolean} check delay state\n       */\n    public isDelay() {\n        const state = this.state;\n        const delay = state[DELAY];\n        const tickTime = state[TICK_TIME];\n\n        return delay > 0 && (tickTime < delay);\n    }\n    public setIteration(iterationCount: number): this {\n        const state = this.state;\n        const passIterationCount = Math.floor(iterationCount);\n        const maxIterationCount = state[ITERATION_COUNT] === INFINITE ? Infinity : state[ITERATION_COUNT];\n\n        if (state[ITERATION] < passIterationCount && passIterationCount < maxIterationCount) {\n            /**\n                  * The event is fired when an iteration of an animation ends.\n                  * @event Animator#iteration\n                  * @param {Object} param The object of data to be sent to an event.\n                  * @param {Number} param.currentTime The total time that the animator is running.\n                  * @param {Number} param.iterationCount The iteration count that the animator is running.\n                  */\n            this.trigger(\"iteration\", {\n                currentTime: state[CURRENT_TIME],\n                iterationCount: passIterationCount,\n            });\n        }\n        state[ITERATION] = iterationCount;\n        return this;\n    }\n    protected calculate() {\n        const state = this.state;\n        const iterationCount = state[ITERATION_COUNT];\n        const fillMode = state[FILL_MODE];\n        const direction = state[DIRECTION];\n        const duration = this.getDuration();\n        const time = this.getTime();\n        const iteration = duration === 0 ? 0 : time / duration;\n        let currentIterationTime = duration ? time % duration : 0;\n\n        if (!duration) {\n            this.setIterationTime(0);\n            return this;\n        }\n        this.setIteration(iteration);\n\n        // direction : normal, reverse, alternate, alternate-reverse\n        // fillMode : forwards, backwards, both, none\n        const isReverse = isDirectionReverse(iteration, iterationCount, direction);\n\n        const isFiniteDuration = isFinite(duration);\n        if (isFiniteDuration && isReverse) {\n            currentIterationTime = duration - currentIterationTime;\n        }\n        if (isFiniteDuration && iterationCount !== INFINITE) {\n            const isForwards = fillMode === \"both\" || fillMode === \"forwards\";\n\n            // fill forwards\n            if (iteration >= iterationCount) {\n                currentIterationTime = duration * (isForwards ? (iterationCount % 1) || 1 : 0);\n                isReverse && (currentIterationTime = duration - currentIterationTime);\n            }\n        }\n        this.setIterationTime(currentIterationTime);\n        return this;\n    }\n    private tick(now: number, to?: number) {\n        if (this.isPaused()) {\n            return;\n        }\n        const state = this.state;\n        const playSpeed = state[PLAY_SPEED];\n        const prevTime = state[PREV_TIME];\n        const delay = state[DELAY];\n        const tickTime = state[TICK_TIME];\n        const currentTime = tickTime + Math.min(1000, now - prevTime) / 1000 * playSpeed;\n\n        state[PREV_TIME] = now;\n        this.setTime(currentTime - delay, true);\n        if (to && to * 1000 < now) {\n            this.pause();\n        }\n        if (state[PLAY_STATE] === PAUSED) {\n            return;\n        }\n\n        this.timerId = requestAnimationFrame((time: number) => {\n            this.tick(time, to);\n        });\n    }\n}\n/**\n * Specifies the unique indicator of the animator\n * @method Animator#setId\n * @param {number | string} - String or number of id to be set in the animator\n * @return {Animator} An instance itself.\n */\n/**\n * Specifies the unique indicator of the animator\n * @method Animator#getId\n * @return {number | string} the indicator of the item.\n */\n/**\n * Get a delay for the start of an animation.\n * @method Animator#getDelay\n * @return {number} delay\n */\n/**\n * Set a delay for the start of an animation.\n * @method Animator#setDelay\n * @param {number} delay - delay\n * @return {Animator} An instance itself.\n */\n/**\n * Get fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Animator#getFillMode\n * @return {FillModeType} fillMode\n */\n/**\n * Set fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Animator#setFillMode\n * @param {FillModeType} fillMode - fillMode\n * @return {Animator} An instance itself.\n */\n/**\n * Get the number of times an animation should be played.\n * @method Animator#getIterationCount\n * @return {IterationCountType} iterationCount\n */\n/**\n * Set the number of times an animation should be played.\n * @method Animator#setIterationCount\n * @param {IterationCountType} iterationCount - iterationCount\n * @return {Animator} An instance itself.\n */\n/**\n * Get whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Animator#getDirection\n * @return {DirectionType} direction\n */\n/**\n * Set whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Animator#setDirection\n * @param {DirectionType} direction - direction\n * @return {Animator} An instance itself.\n */\n/**\n * Get whether the animation is running or paused.\n * @method Animator#getPlayState\n * @return {PlayStateType} playState\n */\n/**\n * Set whether the animation is running or paused.\n * @method Animator#setPlayState\n * @param {PlayStateType} playState - playState\n * @return {Animator} An instance itself.\n */\n/**\n * Get the animator's play speed\n * @method Animator#getPlaySpeed\n * @return {number} playSpeed\n */\n/**\n * Set the animator's play speed\n * @method Animator#setPlaySpeed\n * @param {number} playSpeed - playSpeed\n * @return {Animator} An instance itself.\n */\n/**\n * Get how long an animation should take to complete one cycle.\n * @method Animator#getDuration\n * @return {number} duration\n */\n/**\n * Set how long an animation should take to complete one cycle.\n * @method Animator#setDuration\n * @param {number} duration - duration\n * @return {Animator} An instance itself.\n */\n/**\n * Get the speed curve of an animation.\n * @method Animator#getEasing\n * @return {EasingType} easing\n */\n/**\n * Get the speed curve's name\n * @method Animator#getEasingName\n * @return {string} the curve's name.\n */\n/**\n\t* Get the animator's current iteration time\n\t* @method Animator#getIterationTime\n\t* @return {number} current iteration time\n\t* @example\nanimator.getIterationTime();\n\t*/\n\n// tslint:disable-next-line:interface-name\ninterface Animator<T extends AnimatorOptions = AnimatorOptions, U extends AnimatorState = AnimatorState> {\n    setId(id: number | string): this;\n    getId(): number | string;\n    getIterationTime(): number;\n    setIterationTime(time: number): this;\n    setDelay(delay: number): this;\n    getDelay(): number;\n    setFillMode(fillMode: FillModeType): this;\n    getFillMode(): FillModeType;\n    setIterationCount(iterationCount: IterationCountType): this;\n    getIterationCount(): IterationCountType;\n    setDirection(direction: DirectionType): this;\n    getDirection(): DirectionType;\n    setPlayState(playState: PlayStateType): this;\n    getPlayState(): PlayStateType;\n    setPlaySpeed(playSpeed: number): this;\n    getPlaySpeed(): number;\n    setDuration(duration: number): this;\n    getDuration(): number;\n    getEasing(): EasingType;\n    getEasingName(): string;\n}\nexport default Animator;\n","import {\n    ALIAS, TIMING_FUNCTION, TRANSFORM_NAME, EASING_NAME\n} from \"./consts\";\nimport { isRole, getType, isPropertyObject, getValueByNames, isFixed, getNames, getEasing } from \"./utils\";\nimport { toPropertyObject, splitStyle, toObject } from \"./utils/property\";\nimport {\n    isObject, isArray, isString,\n    ANIMATION, TRANSFORM, FILTER, PROPERTY, FUNCTION, ARRAY, OBJECT, IObject, isUndefined\n} from \"@daybrush/utils\";\nimport { NameType } from \"./types\";\n\nfunction toInnerProperties(obj: IObject<string>) {\n    if (!obj) {\n        return \"\";\n    }\n    const arrObj = [];\n\n    for (const name in obj) {\n        arrObj.push(`${name.replace(/\\d$/g, \"\")}(${obj[name]})`);\n    }\n    return arrObj.join(\" \");\n}\n\n/* eslint-disable */\nfunction clone(target: IObject<any>, toValue = false) {\n    return merge({}, target, toValue);\n}\nfunction merge(to: IObject<any>, from: IObject<any>, toValue = false) {\n    for (const name in from) {\n        const value = from[name];\n        const type = getType(value);\n\n        if (type === PROPERTY) {\n            to[name] = toValue ? value.toValue() : value.clone();\n        } else if (type === FUNCTION) {\n            to[name] = toValue ? getValue([name], value) : value;\n        } else if (type === ARRAY) {\n            to[name] = value.slice();\n        } else if (type === OBJECT) {\n            if (isObject(to[name]) && !isPropertyObject(to[name])) {\n                merge(to[name], value, toValue);\n            } else {\n                to[name] = clone(value, toValue);\n            }\n        } else {\n            to[name] = from[name];\n        }\n    }\n    return to;\n}\n/* eslint-enable */\n\nfunction getPropertyName(args: NameType[]) {\n    return args[0] in ALIAS ? ALIAS[args[0]] : args;\n}\nfunction getValue(names: NameType[], value: any): any {\n    const type = getType(value);\n\n    if (type === PROPERTY) {\n        return value.toValue();\n    } else if (type === FUNCTION) {\n        if (names[0] !== TIMING_FUNCTION) {\n            return getValue(names, value());\n        }\n    } else if (type === OBJECT) {\n        return clone(value, true);\n    }\n    return value;\n}\n/**\n* Animation's Frame\n*/\nclass Frame {\n    public properties: IObject<any>;\n    /**\n     * @param - properties\n     * @example\n  const frame = new Scene.Frame({\n      display: \"none\"\n      transform: {\n          translate: \"50px\",\n          scale: \"5, 5\",\n      }\n  });\n     */\n    constructor(properties: any = {}) {\n        this.properties = {};\n        this.set(properties);\n    }\n    /**\n      * get property value\n      * @param {...Number|String|PropertyObject} args - property name or value\n      * @example\n      frame.get(\"display\") // => \"none\", \"block\", ....\n      frame.get(\"transform\", \"translate\") // => \"10px,10px\"\n      */\n    public get(...args: NameType[]) {\n        const value = this.raw(...args);\n\n        return getValue(getPropertyName(args), value);\n    }\n\n    public raw(...args: NameType[]) {\n        return getValueByNames(getPropertyName(args), this.properties);\n    }\n    /**\n      * remove property value\n      * @param {...String} args - property name\n      * @return {Frame} An instance itself\n      * @example\n      frame.remove(\"display\")\n      */\n    public remove(...args: NameType[]) {\n        const params = getPropertyName(args);\n        const length = params.length;\n\n        if (!length) {\n            return this;\n        }\n        const value = getValueByNames(params, this.properties, length - 1);\n\n        if (isObject(value)) {\n            delete value[params[length - 1]];\n        }\n        return this;\n    }\n    /**\n      * set property\n      * @param {...Number|String|PropertyObject} args - property names or values\n      * @return {Frame} An instance itself\n      * @example\n  // one parameter\n  frame.set({\n      display: \"none\",\n      transform: {\n          translate: \"10px, 10px\",\n          scale: \"1\",\n      },\n      filter: {\n          brightness: \"50%\",\n          grayscale: \"100%\"\n      }\n  });\n\n  // two parameters\n  frame.set(\"transform\", {\n      translate: \"10px, 10px\",\n      scale: \"1\",\n  });\n\n  // three parameters\n  frame.set(\"transform\", \"translate\", \"50px\");\n    */\n    public set(...args: any[]) {\n        const self = this;\n        const length = args.length;\n        const params = args.slice(0, -1);\n        const value = args[length - 1];\n        const firstParam = params[0];\n\n        if (length === 1 && value instanceof Frame) {\n            self.merge(value);\n        } else if (firstParam in ALIAS) {\n            self._set(ALIAS[firstParam], value);\n        } else if (length === 2 && isArray(firstParam)) {\n            self._set(firstParam, value);\n        } else if (isPropertyObject(value)) {\n            if (isRole(params)) {\n                self.set(...params, toObject(value));\n            } else {\n                self._set(params, value);\n            }\n        } else if (isArray(value)) {\n            self._set(params, value);\n        } else if (isObject(value)) {\n            if (!self.has(...params) && isRole(params)) {\n                self._set(params, {});\n            }\n            for (const name in value) {\n                self.set(...params, name, value[name]);\n            }\n        } else if (isString(value)) {\n            if (isRole(params, true)) {\n                if (isFixed(params) || !isRole(params)) {\n                    this._set(params, value);\n                } else {\n                    const obj = toPropertyObject(value);\n\n                    if (isObject(obj)) {\n                        self.set(...params, obj);\n                    }\n                }\n                return this;\n            } else {\n                const { styles, length: stylesLength } = splitStyle(value);\n\n                for (const name in styles) {\n                    self.set(...params, name, styles[name]);\n                }\n                if (stylesLength) {\n                    return this;\n                }\n            }\n            self._set(params, value);\n        } else {\n            self._set(params, value);\n        }\n        return self;\n    }\n    /**\n      * Gets the names of properties.\n      * @return the names of properties.\n      * @example\n  // one parameter\n  frame.set({\n      display: \"none\",\n      transform: {\n          translate: \"10px, 10px\",\n          scale: \"1\",\n      },\n  });\n\n  // [[\"display\"], [\"transform\", \"translate\"], [\"transform\", \"scale\"]]\n  console.log(frame.getNames());\n    */\n    public getNames(): string[][] {\n        return getNames(this.properties, []);\n    }\n    /**\n      * check that has property.\n      * @param {...String} args - property name\n      * @example\n      frame.has(\"property\", \"display\") // => true or false\n      */\n    public has(...args: NameType[]) {\n        const params = getPropertyName(args);\n        const length = params.length;\n\n        if (!length) {\n            return false;\n        }\n        return !isUndefined(getValueByNames(params, this.properties, length));\n    }\n    /**\n      * clone frame.\n      * @return {Frame} An instance of clone\n      * @example\n      frame.clone();\n      */\n    public clone() {\n        const frame = new Frame();\n\n        return frame.merge(this);\n    }\n    /**\n      * merge one frame to other frame.\n      * @param - target frame.\n      * @return {Frame} An instance itself\n      * @example\n      frame.merge(frame2);\n      */\n    public merge(frame: Frame) {\n        const properties = this.properties;\n        const frameProperties = frame.properties;\n\n        if (frameProperties) {\n            merge(properties, frameProperties);\n        }\n        return this;\n    }\n    /**\n      * Specifies an css object that coverted the frame.\n      * @return {object} cssObject\n      */\n    public toCSSObject() {\n        const properties = this.get();\n        const cssObject: IObject<string> = {};\n\n        for (const name in properties) {\n            if (isRole([name], true)) {\n                continue;\n            }\n            const value = properties[name];\n\n            if (name === TIMING_FUNCTION) {\n                cssObject[TIMING_FUNCTION.replace(\"animation\", ANIMATION)] =\n                    (isString(value) ? value : value[EASING_NAME]) || \"initial\";\n            } else {\n                cssObject[name] = value;\n            }\n        }\n        const transform = toInnerProperties(properties[TRANSFORM_NAME]);\n        const filter = toInnerProperties(properties.filter);\n\n        TRANSFORM && transform && (cssObject[TRANSFORM] = transform);\n        FILTER && filter && (cssObject[FILTER] = filter);\n        return cssObject;\n    }\n    /**\n      * Specifies an css text that coverted the frame.\n      * @return {string} cssText\n      */\n    public toCSS() {\n        const cssObject = this.toCSSObject();\n        const cssArray = [];\n\n        for (const name in cssObject) {\n            cssArray.push(`${name}:${cssObject[name]};`);\n        }\n        return cssArray.join(\"\");\n    }\n    private _set(args: NameType[], value: any) {\n        let properties = this.properties;\n        const length = args.length;\n\n        for (let i = 0; i < length - 1; ++i) {\n            const name = args[i];\n\n            !(name in properties) && (properties[name] = {});\n            properties = properties[name];\n        }\n        if (!length) {\n            return;\n        }\n        if (length === 1 && args[0] === TIMING_FUNCTION) {\n            properties[TIMING_FUNCTION] = getEasing(value);\n        } else {\n            const lastParam = args[length - 1];\n            properties[lastParam] = isString(value) && !isFixed(args)\n                ? toPropertyObject(value, lastParam)\n                : value;\n        }\n    }\n}\nexport default Frame;\n","\nimport PropertyObject from \"../PropertyObject\";\nimport { getType } from \"../utils\";\nimport { toPropertyObject } from \"./property\";\nimport { splitUnit, PROPERTY, FUNCTION, ARRAY, dot as dotNumber } from \"@daybrush/utils\";\nimport { EasingType } from \"../types\";\n\nfunction dotArray(a1: any[], a2: any, b1: number, b2: number): any {\n  const length = a2.length;\n\n  return a1.map((v1, i) => {\n    if (i >= length) {\n      return v1;\n    } else {\n      return dot(v1, a2[i], b1, b2);\n    }\n  });\n}\n\nfunction dotColor(color1: PropertyObject, color2: PropertyObject, b1: number, b2: number) {\n  // convert array to PropertyObject(type=color)\n  const value1 = color1.value;\n  const value2 = color2.value;\n  // If the model name is not same, the inner product is impossible.\n  const model1 = color1.model;\n  const model2 = color2.model;\n\n  if (model1 !== model2) {\n    // It is recognized as a string.\n    return dot(color1.toValue(), color2.toValue(), b1, b2);\n  }\n  if (value1.length === 3) {\n    value1[3] = 1;\n  }\n  if (value2.length === 3) {\n    value2[3] = 1;\n  }\n  const v = dotArray(value1, value2, b1, b2);\n  const colorModel = model1;\n\n  for (let i = 0; i < 3; ++i) {\n    v[i] = parseInt(v[i], 10);\n  }\n  const object = new PropertyObject(v, {\n    type: \"color\",\n    model: colorModel,\n    prefix: `${colorModel}(`,\n    suffix: \")\",\n  });\n\n  return object;\n}\n\nfunction dotObject(a1: PropertyObject, a2: PropertyObject, b1: number, b2: number) {\n  const a1Type = a1.type;\n\n  if (a1Type === \"color\") {\n    return dotColor(a1, a2, b1, b2);\n  }\n  const value1 = a1.value;\n  const value2 = a2.value;\n  const arr = dotArray(value1, value2, b1, b2);\n\n  return new PropertyObject(arr, {\n    type: a1Type,\n    separator: a1.separator || a2.separator,\n    prefix: a1.prefix || a2.prefix,\n    suffix: a1.suffix || a2.suffix,\n    model: a1.model || a2.model,\n  });\n}\n/**\n* The dot product of a1 and a2 for the b1 and b2.\n* @memberof Dot\n* @function dot\n* @param {String|Number|PropertyObject} a1 value1\n* @param {String|Number|PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @example\ndot(1, 3, 0.3, 0.7);\n// => 1.6\n*/\nexport function dot(a1: any, a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  } else if (b1 === 0 || b1 + b2 === 0) {\n    // prevent division by zero.\n    return a1;\n  }\n  // dot Object\n\n  const type1 = getType(a1);\n  const type2 = getType(a2);\n  const isFunction1 = type1 === FUNCTION;\n  const isFunction2 = type2 === FUNCTION;\n\n  if (isFunction1 || isFunction2) {\n    return () => {\n      return dot(isFunction1 ? toPropertyObject(a1()) : a1, isFunction2 ? toPropertyObject(a2()) : a2, b1, b2);\n    };\n  } else if (type1 === type2) {\n    if (type1 === PROPERTY) {\n      return dotObject(a1, a2, b1, b2);\n    } else if (type1 === ARRAY) {\n      return dotArray(a1, a2, b1, b2);\n    } else if (type1 !== \"value\") {\n      return a1;\n    }\n  } else {\n    return a1;\n  }\n  const v1 = splitUnit(`${a1}`);\n  const v2 = splitUnit(`${a2}`);\n  let v;\n\n  // 숫자가 아닐경우 첫번째 값을 반환 b2가 0일경우 두번째 값을 반환\n  if (isNaN(v1.value) || isNaN(v2.value)) {\n    return a1;\n  } else {\n    v = dotNumber(v1.value, v2.value, b1, b2);\n  }\n  const prefix = v1.prefix || v2.prefix;\n  const unit = v1.unit || v2.unit;\n\n  if (!prefix && !unit) {\n    return v;\n  }\n  return prefix + v + unit;\n}\n\nexport function dotValue(\n  time: number,\n  prevTime: number,\n  nextTime: number,\n  prevValue: any,\n  nextValue: any,\n  easing?: EasingType) {\n  if (time === prevTime) {\n    return prevValue;\n  } else if (time === nextTime) {\n    return nextValue;\n  } else if (!easing) {\n    return dot(prevValue, nextValue, time - prevTime, nextTime - time);\n  }\n  const ratio = easing((time - prevTime) / (nextTime - prevTime));\n  const value = dot(prevValue, nextValue, ratio, 1 - ratio);\n\n  return value;\n}\n","import Animator, { isDirectionReverse } from \"./Animator\";\nimport Frame from \"./Frame\";\nimport {\n    toFixed,\n    isFixed,\n    playCSS,\n    toId,\n    exportCSS,\n    getRealId,\n    makeId,\n    isPausedCSS,\n    isRole,\n    isInProperties,\n    getValueByNames,\n    isEndedCSS,\n    setPlayCSS,\n    getNames,\n    updateFrame,\n} from \"./utils\";\nimport { dotValue } from \"./utils/dot\";\nimport {\n    START_ANIMATION,\n    PREFIX, THRESHOLD,\n    TIMING_FUNCTION, ALTERNATE, ALTERNATE_REVERSE, INFINITE,\n    REVERSE, EASING, FILL_MODE, DIRECTION, ITERATION_COUNT,\n    EASING_NAME, DELAY, PLAY_SPEED, DURATION, PAUSE_ANIMATION, DATA_SCENE_ID, SELECTOR, ROLES, CURRENT_TIME\n} from \"./consts\";\nimport {\n    isObject, isArray, isUndefined, decamelize,\n    ANIMATION, fromCSS, addClass, removeClass, hasClass,\n    KEYFRAMES, requestAnimationFrame, isFunction,\n    IObject, $, splitComma, toArray, isString, IArrayFormat,\n    dot as dotNumber,\n    find,\n    findIndex,\n} from \"@daybrush/utils\";\nimport {\n    NameType, RoleObject, AnimateElement, AnimatorState,\n    SceneItemState, SceneItemOptions, EasingType, PlayCondition, DirectionType\n} from \"./types\";\n\nfunction getNearTimeIndex(times: number[], time: number) {\n    const length = times.length;\n\n    for (let i = 0; i < length; ++i) {\n        if (times[i] === time) {\n            return [i, i];\n        } else if (times[i] > time) {\n            return [i > 0 ? i - 1 : 0, i];\n        }\n    }\n    return [length - 1, length - 1];\n}\nfunction makeAnimationProperties(properties: object) {\n    const cssArray = [];\n\n    for (const name in properties) {\n        cssArray.push(`${ANIMATION}-${decamelize(name)}:${properties[name]};`);\n    }\n    return cssArray.join(\"\");\n}\nfunction addTime(times: number[], time: number) {\n    const length = times.length;\n    for (let i = 0; i < length; ++i) {\n        if (time < times[i]) {\n            times.splice(i, 0, time);\n            return;\n        }\n    }\n    times[length] = time;\n}\nfunction addEntry(entries: number[][], time: number, keytime: number) {\n    const prevEntry = entries[entries.length - 1];\n\n    (!prevEntry || prevEntry[0] !== time || prevEntry[1] !== keytime) &&\n        entries.push([toFixed(time), toFixed(keytime)]);\n}\nexport function getEntries(times: number[], states: AnimatorState[]) {\n    let entries = times.map(time => ([time, time]));\n    let nextEntries = [];\n\n    states.forEach(state => {\n        const iterationCount = state[ITERATION_COUNT] as number;\n        const delay = state[DELAY];\n        const playSpeed = state[PLAY_SPEED];\n        const direction = state[DIRECTION];\n        const intCount = Math.ceil(iterationCount);\n        const currentDuration = entries[entries.length - 1][0];\n        const length = entries.length;\n        const lastTime = currentDuration * iterationCount;\n\n        for (let i = 0; i < intCount; ++i) {\n            const isReverse =\n                direction === REVERSE ||\n                direction === ALTERNATE && i % 2 ||\n                direction === ALTERNATE_REVERSE && !(i % 2);\n\n            for (let j = 0; j < length; ++j) {\n                const entry = entries[isReverse ? length - j - 1 : j];\n                const time = entry[1];\n                const currentTime = currentDuration * i + (isReverse ? currentDuration - entry[0] : entry[0]);\n                const prevEntry = entries[isReverse ? length - j : j - 1];\n\n                if (currentTime > lastTime) {\n                    if (j !== 0) {\n                        const prevTime = currentDuration * i +\n                            (isReverse ? currentDuration - prevEntry[0] : prevEntry[0]);\n                        const divideTime = dotNumber(prevEntry[1], time, lastTime - prevTime, currentTime - lastTime);\n\n                        addEntry(nextEntries, (delay + currentDuration * iterationCount) / playSpeed, divideTime);\n                    }\n                    break;\n                } else if (\n                    currentTime === lastTime\n                    && nextEntries.length\n                    && nextEntries[nextEntries.length - 1][0] === lastTime + delay\n                ) {\n                    break;\n                }\n                addEntry(nextEntries, (delay + currentTime) / playSpeed, time);\n            }\n        }\n        // delay time\n        delay && nextEntries.unshift([0, nextEntries[0][1]]);\n\n        entries = nextEntries;\n        nextEntries = [];\n    });\n\n    return entries;\n}\n/**\n* manage Frame Keyframes and play keyframes.\n* @extends Animator\n* @example\nconst item = new SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n*/\nclass SceneItem extends Animator<SceneItemOptions, SceneItemState> {\n    public times: number[] = [];\n    public items: IObject<Frame> = {};\n    public names: RoleObject = {};\n    public elements: AnimateElement[] = [];\n    public temp: Frame;\n    private needUpdate: boolean = true;\n    private target: any;\n    private targetFunc: (frame: Frame) => void;\n\n    /**\n      * @param - properties\n      * @param - options\n      * @example\n      const item = new SceneItem({\n          0: {\n              display: \"none\",\n          },\n          1: {\n              display: \"block\",\n              opacity: 0,\n          },\n          2: {\n              opacity: 1,\n          }\n      });\n       */\n    constructor(properties?: any, options?: Partial<SceneItemOptions>) {\n        super();\n        this.load(properties, options);\n    }\n    public getDuration() {\n        const times = this.times;\n        const length = times.length;\n\n        return (length === 0 ? 0 : times[length - 1]) || this.state[DURATION];\n    }\n    /**\n      * get size of list\n      * @return {Number} length of list\n      */\n    public size() {\n        return this.times.length;\n    }\n    public setDuration(duration: number) {\n        if (!duration) {\n            return this;\n        }\n        const originalDuration = this.getDuration();\n\n        if (originalDuration > 0) {\n            const ratio = duration / originalDuration;\n            const { times, items } = this;\n            const obj: IObject<Frame> = {};\n\n            this.times = times.map(time => {\n                const time2 = toFixed(time * ratio);\n\n                obj[time2] = items[time];\n\n                return time2;\n            });\n            this.items = obj;\n        } else {\n            this.newFrame(duration);\n        }\n        return this;\n    }\n    public setId(id?: number | string) {\n        const state = this.state;\n        const elements = this.elements;\n        const length = elements.length;\n\n        state.id = id || makeId(!!length);\n\n        if (length && !state[SELECTOR]) {\n            const sceneId = toId(this.getId());\n\n            state[SELECTOR] = `[${DATA_SCENE_ID}=\"${sceneId}\"]`;\n            elements.forEach(element => {\n                element.setAttribute(DATA_SCENE_ID, sceneId);\n            });\n        }\n        return this;\n    }\n\n    /**\n      * Set properties to the sceneItem at that time\n      * @param {Number} time - time\n      * @param {...String|Object} [properties] - property names or values\n      * @return {SceneItem} An instance itself\n      * @example\n  item.set(0, \"a\", \"b\") // item.getFrame(0).set(\"a\", \"b\")\n  console.log(item.get(0, \"a\")); // \"b\"\n      */\n    public set(time: any, ...args: any[]) {\n        if (time instanceof SceneItem) {\n            return this.set(0, time);\n        } else if (isArray(time)) {\n            const length = time.length;\n\n            for (let i = 0; i < length; ++i) {\n                const t = length === 1 ? 0 : this.getUnitTime(`${i / (length - 1) * 100}%`);\n\n                this.set(t, time[i]);\n            }\n        } else if (isObject(time)) {\n            for (const t in time) {\n                const value = time[t];\n\n                splitComma(t).forEach(eachTime => {\n                    const realTime = this.getUnitTime(eachTime);\n\n                    if (isNaN(realTime)) {\n                        getNames(value, [eachTime]).forEach(names => {\n                            const innerValue = getValueByNames(names.slice(1), value);\n                            const arr = isArray(innerValue) ?\n                                innerValue : [getValueByNames(names, this.target), innerValue];\n                            const length = arr.length;\n\n                            for (let i = 0; i < length; ++i) {\n                                this.newFrame(`${i / (length - 1) * 100}%`).set(...names, arr[i]);\n                            }\n                        });\n                    } else {\n                        this.set(realTime, value);\n                    }\n                });\n            }\n        } else if (!isUndefined(time)) {\n            const value = args[0];\n\n            splitComma(time + \"\").forEach(eachTime => {\n                const realTime = this.getUnitTime(eachTime);\n\n                if (value instanceof SceneItem) {\n                    const delay = value.getDelay();\n                    const frames = value.toObject(!this.hasFrame(realTime + delay));\n                    const duration = value.getDuration();\n                    const direction = value.getDirection();\n                    const isReverse = direction.indexOf(\"reverse\") > -1;\n\n                    for (const frameTime in frames) {\n                        const nextTime = isReverse ? duration - parseFloat(frameTime) : parseFloat(frameTime);\n                        this.set(realTime + nextTime, frames[frameTime]);\n                    }\n                } else if (args.length === 1 && isArray(value)) {\n                    value.forEach((item: any) => {\n                        this.set(realTime, item);\n                    });\n                } else {\n                    const frame = this.newFrame(realTime);\n\n                    frame.set(...args);\n                }\n            });\n        }\n        this.needUpdate = true;\n        return this;\n    }\n    /**\n      * Get properties of the sceneItem at that time\n      * @param {Number} time - time\n      * @param {...String|Object} args property's name or properties\n      * @return {Number|String|PropertyObejct} property value\n      * @example\n  item.get(0, \"a\"); // item.getFrame(0).get(\"a\");\n  item.get(0, \"transform\", \"translate\"); // item.getFrame(0).get(\"transform\", \"translate\");\n      */\n    public get(time: string | number, ...args: NameType[]) {\n        const frame = this.getFrame(time);\n\n        return frame && frame.get(...args);\n    }\n    public remove(time: string | number, ...args: any[]): this;\n    /**\n      * remove properties to the sceneItem at that time\n      * @param {Number} time - time\n      * @param {...String|Object} [properties] - property names or values\n      * @return {SceneItem} An instance itself\n      * @example\n  item.remove(0, \"a\");\n      */\n    public remove(time: string | number, ...args: NameType[]) {\n        if (args.length) {\n            const frame = this.getFrame(time);\n\n            frame && frame.remove(...args);\n        } else {\n            this.removeFrame(time);\n        }\n        this.needUpdate = true;\n        return this;\n    }\n    /**\n      * Append the item or object at the last time.\n      * @param - the scene item or item object\n      * @return An instance itself\n      * @example\n  item.append(new SceneItem({\n      0: {\n          opacity: 0,\n      },\n      1: {\n          opacity: 1,\n      }\n  }));\n  item.append({\n      0: {\n          opacity: 0,\n      },\n      1: {\n          opacity: 1,\n      }\n  });\n  item.set(item.getDuration(), {\n      0: {\n          opacity: 0,\n      },\n      1: {\n          opacity: 1,\n      }\n  });\n      */\n    public append(item: SceneItem | IObject<any>) {\n        if (item instanceof SceneItem) {\n            this.set(this.getDuration(), item);\n        } else {\n            this.append(new SceneItem(item));\n        }\n        return this;\n    }\n    /**\n      * Push the front frames for the time and prepend the scene item or item object.\n      * @param - the scene item or item object\n      * @return An instance itself\n      */\n    public prepend(item: SceneItem | IObject<any>) {\n        if (item instanceof SceneItem) {\n            const unshiftTime = item.getDuration() + item.getDelay();\n            const firstFrame = this.getFrame(0);\n            // remove first frame\n            this.removeFrame(0);\n            this.unshift(unshiftTime);\n            this.set(0, item);\n            this.set(unshiftTime + THRESHOLD, firstFrame);\n        } else {\n            this.prepend(new SceneItem(item));\n        }\n        return this;\n    }\n    /**\n     * Push out the amount of time.\n     * @param - time to push\n     * @example\n   item.get(0); // frame 0\n   item.unshift(3);\n   item.get(3) // frame 0\n     */\n    public unshift(time: number) {\n        const { times, items } = this;\n        const obj: IObject<Frame> = {};\n\n        this.times = times.map(t => {\n            const time2 = toFixed(time + t);\n\n            obj[time2] = items[t];\n            return time2;\n        });\n        this.items = obj;\n        return this;\n    }\n    /**\n     * Get the frames in the item in object form.\n     * @return {}\n     * @example\n item.toObject();\n // {0: {display: \"none\"}, 1: {display: \"block\"}}\n     */\n    public toObject(isStartZero = true): IObject<Frame> {\n        const obj: IObject<Frame> = {};\n        const delay = this.getDelay();\n\n        this.forEach((frame: Frame, time: number) => {\n            obj[(!time && !isStartZero ? THRESHOLD : 0) + delay + time] = frame.clone();\n        });\n        return obj;\n    }\n    /**\n     * Specifies an element to synchronize items' keyframes.\n     * @param {string} selectors - Selectors to find elements in items.\n     * @return {SceneItem} An instance itself\n     * @example\nitem.setSelector(\"#id.class\");\n     */\n    public setSelector(target: string | boolean | ((id: number | string) => string)) {\n        if (isFunction(target)) {\n            this.setElement(target(this.getId()));\n        } else {\n            this.setElement(target);\n        }\n        return this;\n    }\n    /**\n     * Get the elements connected to SceneItem.\n     */\n    public getElements(): AnimateElement[] {\n        return this.elements;\n    }\n    /**\n     * Specifies an element to synchronize item's keyframes.\n     * @param - elements to synchronize item's keyframes.\n     * @param - Make sure that you have peusdo.\n     * @return {SceneItem} An instance itself\n     * @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setElement(document.querySelectorAll(\".class\"));\n     */\n    public setElements(target: boolean | string | AnimateElement | IArrayFormat<AnimateElement>): this {\n        return this.setElement(target);\n    }\n    /**\n     * Specifies an element to synchronize item's keyframes.\n     * @param - elements to synchronize item's keyframes.\n     * @param - Make sure that you have peusdo.\n     * @return {SceneItem} An instance itself\n     * @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setElement(document.querySelectorAll(\".class\"));\n     */\n    public setElement(target: boolean | string | AnimateElement | IArrayFormat<AnimateElement>) {\n        const state = this.state;\n        let elements: AnimateElement[] = [];\n\n        if (!target) {\n            return this;\n        } else if (target === true || isString(target)) {\n            const selector = target === true ? `${state.id}` : target;\n            const matches = /([\\s\\S]+)(:+[a-zA-Z]+)$/g.exec(selector);\n\n            elements = toArray($(matches ? matches[1] : selector, true));\n            state[SELECTOR] = selector;\n        } else {\n            elements = (target instanceof Element) ? [target] : toArray(target);\n        }\n        if (!elements.length) {\n            return this;\n        }\n        this.elements = elements;\n        this.setId(this.getId());\n        this.target = elements[0].style;\n        this.targetFunc = (frame: Frame) => {\n            const attributes = frame.get(\"attribute\");\n\n            if (attributes) {\n                for (const name in attributes) {\n                    elements.forEach(el => {\n                        el.setAttribute(name, attributes[name]);\n                    });\n                }\n            }\n            if (frame.has(\"html\")) {\n                const html = frame.get(\"html\");\n\n                elements.forEach(el => {\n                    el.innerHTML = html;\n                });\n            }\n            const cssText = frame.toCSS();\n\n            if (state.cssText !== cssText) {\n                state.cssText = cssText;\n\n                elements.forEach(el => {\n                    el.style.cssText += cssText;\n                });\n                return frame;\n            }\n        };\n        return this;\n    }\n    public setTarget(target: any): this {\n        this.target = target;\n        this.targetFunc = (frame: Frame) => {\n            const obj = frame.get();\n\n            for (const name in obj) {\n                target[name] = obj[name];\n            }\n        };\n        return this;\n    }\n    /**\n      * add css styles of items's element to the frame at that time.\n      * @param {Array} properties - elements to synchronize item's keyframes.\n      * @return {SceneItem} An instance itself\n      * @example\n  item.setElement(document.querySelector(\"#id.class\"));\n  item.setCSS(0, [\"opacity\"]);\n  item.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n      */\n    public setCSS(time: number, properties: string[]) {\n        this.set(time, fromCSS(this.elements, properties));\n        return this;\n    }\n    public setTime(time: number | string, isTick?: boolean, isParent?: boolean, parentEasing?: EasingType) {\n        super.setTime(time, isTick, isParent);\n\n        const iterationTime = this.getIterationTime();\n        const easing = this.getEasing() || parentEasing;\n        const frame = this.getNowFrame(iterationTime, easing);\n        const currentTime = this.getTime();\n\n        this.temp = frame;\n        /**\n         * This event is fired when timeupdate and animate.\n         * @event SceneItem#animate\n         * @param {Number} param.currentTime The total time that the animator is running.\n         * @param {Number} param.time The iteration time during duration that the animator is running.\n         * @param {Frame} param.frame frame of that time.\n         */\n        this.trigger(\"animate\", {\n            frame,\n            currentTime,\n            time: iterationTime,\n        });\n        this.targetFunc && this.targetFunc(frame);\n        return this;\n    }\n    /**\n      * update property names used in frames.\n      * @return {SceneItem} An instance itself\n      * @example\n  item.update();\n      */\n    public update() {\n        const names = {};\n        this.forEach(frame => {\n            updateFrame(names, frame.properties);\n        });\n        this.names = names;\n        this.needUpdate = false;\n        return this;\n    }\n    /**\n      * Create and add a frame to the sceneItem at that time\n      * @param {Number} time - frame's time\n      * @return {Frame} Created frame.\n      * @example\n  item.newFrame(time);\n      */\n    public newFrame(time: string | number) {\n        let frame = this.getFrame(time);\n\n        if (frame) {\n            return frame;\n        }\n        frame = new Frame();\n        this.setFrame(time, frame);\n        return frame;\n    }\n    /**\n      * Add a frame to the sceneItem at that time\n      * @param {Number} time - frame's time\n      * @return {SceneItem} An instance itself\n      * @example\n  item.setFrame(time, frame);\n      */\n    public setFrame(time: string | number, frame: Frame) {\n        const realTime = this.getUnitTime(time);\n\n        this.items[realTime] = frame;\n        addTime(this.times, realTime);\n        this.needUpdate = true;\n        return this;\n    }\n    public getFrame(time: number | string, ...names: any[]): Frame;\n    /**\n      * get sceneItem's frame at that time\n      * @param {Number} time - frame's time\n      * @return {Frame} sceneItem's frame at that time\n      * @example\n  const frame = item.getFrame(time);\n      */\n    public getFrame(time: number | string) {\n        return this.items[this.getUnitTime(time)];\n    }\n    public removeFrame(time: number | string, ...names: any[]): this;\n    /**\n      * remove sceneItem's frame at that time\n      * @param - frame's time\n      * @return {SceneItem} An instance itself\n      * @example\n  item.removeFrame(time);\n      */\n    public removeFrame(time: number | string) {\n        const realTime = this.getUnitTime(time);\n        const items = this.items;\n        const index = this.times.indexOf(realTime);\n\n        delete items[realTime];\n\n        // remove time\n        if (index > -1) {\n            this.times.splice(index, 1);\n        }\n        this.needUpdate = true;\n        return this;\n    }\n    /**\n      * check if the item has a frame at that time\n      * @param {Number} time - frame's time\n      * @return {Boolean} true: the item has a frame // false: not\n      * @example\n  if (item.hasFrame(10)) {\n      // has\n  } else {\n      // not\n  }\n      */\n    public hasFrame(time: number | string) {\n        return this.getUnitTime(time) in this.items;\n    }\n    /**\n      * Check if keyframes has propery's name\n      * @param - property's time\n      * @return {boolean} true: if has property, false: not\n      * @example\n    item.hasName([\"transform\", \"translate\"]); // true or not\n      */\n    public hasName(args: string[]) {\n        this.needUpdate && this.update();\n        return isInProperties(this.names, args, true);\n    }\n    /**\n      * merge frame of the previous time at the next time.\n    * @param - The time of the frame to merge\n    * @param - The target frame\n      * @return {SceneItem} An instance itself\n      * @example\n  // getFrame(1) contains getFrame(0)\n  item.merge(0, 1);\n      */\n    public mergeFrame(time: number | string, frame: Frame) {\n        if (frame) {\n            const toFrame = this.newFrame(time);\n\n            toFrame.merge(frame);\n        }\n        return this;\n    }\n    /**\n      * Get frame of the current time\n      * @param {Number} time - the current time\n      * @param {function} easing - the speed curve of an animation\n      * @return {Frame} frame of the current time\n      * @example\n  let item = new SceneItem({\n      0: {\n          display: \"none\",\n      },\n      1: {\n          display: \"block\",\n          opacity: 0,\n      },\n      2: {\n          opacity: 1,\n      }\n  });\n  // opacity: 0.7; display:\"block\";\n  const frame = item.getNowFrame(1.7);\n      */\n    public getNowFrame(time: number, easing?: EasingType, isAccurate?: boolean) {\n        this.needUpdate && this.update();\n        const frame = new Frame();\n        const [left, right] = getNearTimeIndex(this.times, time);\n        let realEasing = this.getEasing() || easing;\n        let nameObject = this.names;\n\n        if (this.hasName([TIMING_FUNCTION])) {\n            const nowEasing = this.getNowValue(time, [TIMING_FUNCTION], left, right, false, 0, true);\n\n            isFunction(nowEasing) && (realEasing = nowEasing);\n        }\n        if (isAccurate) {\n            const prevFrame = this.getFrame(time);\n            const prevNames = updateFrame({}, prevFrame.properties);\n\n            for (const name in ROLES) {\n                if (name in prevNames) {\n                    prevNames[name] = nameObject[name];\n                }\n            }\n            nameObject = prevNames;\n        }\n        const names = getNames(nameObject, []);\n\n        names.forEach(properties => {\n            const value = this.getNowValue(time, properties, left, right, isAccurate, realEasing, isFixed(properties));\n\n            if (isUndefined(value)) {\n                return;\n            }\n            frame.set(properties, value);\n        });\n        return frame;\n    }\n    public load(properties: any = {}, options = properties.options) {\n        options && this.setOptions(options);\n\n        if (isArray(properties)) {\n            this.set(properties);\n        } else if (properties.keyframes) {\n            this.set(properties.keyframes);\n        } else {\n            for (const time in properties) {\n                if (time !== \"options\") {\n                    this.set({\n                        [time]: properties[time],\n                    });\n                }\n            }\n        }\n        if (options && options[DURATION]) {\n            this.setDuration(options[DURATION]);\n        }\n        return this;\n    }\n    /**\n       * clone SceneItem.\n       * @return {SceneItem} An instance of clone\n       * @example\n       * item.clone();\n       */\n    public clone() {\n        const item = new SceneItem();\n\n        item.setOptions(this.state);\n        this.forEach((frame: Frame, time: number) => {\n            item.setFrame(time, frame.clone());\n        });\n        return item;\n    }\n    /**\n       * executes a provided function once for each scene item.\n       * @param - Function to execute for each element, taking three arguments\n       * @return {Keyframes} An instance itself\n       */\n    public forEach(callback: (item: Frame, time: number, items: IObject<Frame>) => void) {\n        const times = this.times;\n        const items = this.items;\n\n        times.forEach(time => {\n            callback(items[time], time, items);\n        });\n        return this;\n    }\n    public setOptions(options: Partial<SceneItemOptions> = {}) {\n        super.setOptions(options);\n        const { id, selector, elements, element, target } = options;\n\n        id && this.setId(id);\n        if (target) {\n            this.setTarget(target);\n        } else if (selector) {\n            this.setSelector(selector);\n        } else if (elements || element) {\n            this.setElement(elements || element);\n        }\n        return this;\n    }\n    public toCSS(\n        playCondition: PlayCondition = { className: START_ANIMATION },\n        parentDuration = this.getDuration(), states: AnimatorState[] = []) {\n        const itemState = this.state;\n        const selector = itemState[SELECTOR];\n\n        if (!selector) {\n            return \"\";\n        }\n        const originalDuration = this.getDuration();\n        itemState[DURATION] = originalDuration;\n        states.push(itemState);\n\n        const reversedStates = toArray(states).reverse();\n        const id = toId(getRealId(this));\n        const superParent = states[0];\n        const infiniteIndex = findIndex(reversedStates, state => {\n            return state[ITERATION_COUNT] === INFINITE || !isFinite(state[DURATION]);\n        }, states.length - 1);\n        const finiteStates = reversedStates.slice(0, infiniteIndex);\n        const duration = parentDuration || finiteStates.reduce((prev, cur) => {\n            return (cur[DELAY] + prev * (cur[ITERATION_COUNT] as number)) / cur[PLAY_SPEED];\n        }, originalDuration);\n        const delay = reversedStates.slice(infiniteIndex).reduce((prev, cur) => {\n            return (prev + cur[DELAY]) / cur[PLAY_SPEED];\n        }, 0);\n        const easingName = find(reversedStates, state => (state[EASING] && state[EASING_NAME]), itemState)[EASING_NAME];\n        const iterationCount = reversedStates[infiniteIndex][ITERATION_COUNT];\n        const fillMode = superParent[FILL_MODE];\n        const direction = reversedStates[infiniteIndex][DIRECTION];\n        const cssText = makeAnimationProperties({\n            fillMode,\n            direction,\n            iterationCount,\n            delay: `${delay}s`,\n            name: `${PREFIX}KEYFRAMES_${id}`,\n            duration: `${duration / superParent[PLAY_SPEED]}s`,\n            timingFunction: easingName,\n        });\n        const selectors = splitComma(selector).map(sel => {\n            const matches = /([\\s\\S]+)(:+[a-zA-Z]+)$/g.exec(sel);\n\n            if (matches) {\n                return [matches[1], matches[2]];\n            } else {\n                return [sel, \"\"];\n            }\n        });\n        const className = playCondition.className;\n        const selectorCallback = playCondition.selector;\n        const preselector = isFunction(selectorCallback) ? selectorCallback(this, selector) : selectorCallback;\n\n        return `\n    ${preselector || selectors.map(([sel, peusdo]) => `${sel}.${className}${peusdo}`)} {${cssText}}\n    ${selectors.map(([sel, peusdo]) => `${sel}.${PAUSE_ANIMATION}${peusdo}`)} {${ANIMATION}-play-state: paused;}\n    @${KEYFRAMES} ${PREFIX}KEYFRAMES_${id}{${this._toKeyframes(duration, finiteStates, direction)}}`;\n    }\n    /**\n     * Export the CSS of the items to the style.\n     * @param - Add a selector or className to play.\n     * @return {SceneItem} An instance itself\n     */\n    public exportCSS(\n        playCondition?: PlayCondition,\n        duration?: number, options?: AnimatorState[]) {\n        if (!this.elements.length) {\n            return \"\";\n        }\n        const css = this.toCSS(playCondition, duration, options);\n        const isParent = options && !isUndefined(options[ITERATION_COUNT]);\n\n        !isParent && exportCSS(getRealId(this), css);\n        return this;\n    }\n    public pause() {\n        super.pause();\n        isPausedCSS(this) && this.pauseCSS();\n        return this;\n    }\n    public pauseCSS() {\n        this.elements.forEach(element => {\n            addClass(element, PAUSE_ANIMATION);\n        });\n        return this;\n    }\n    public endCSS() {\n        this.elements.forEach(element => {\n            removeClass(element, PAUSE_ANIMATION);\n            removeClass(element, START_ANIMATION);\n        });\n        setPlayCSS(this, false);\n        return this;\n    }\n    public end() {\n        isEndedCSS(this) && this.endCSS();\n        super.end();\n        return this;\n    }\n    /**\n      * Play using the css animation and keyframes.\n      * @param - Check if you want to export css.\n      * @param [playClassName=\"startAnimation\"] - Add a class name to play.\n      * @param - The shorthand properties for six of the animation properties.\n      * @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n      * @example\n  item.playCSS();\n  item.playCSS(false, \"startAnimation\", {\n      direction: \"reverse\",\n      fillMode: \"forwards\",\n  });\n      */\n    public playCSS(isExportCSS = true, playClassName?: string, properties: object = {}) {\n        playCSS(this, isExportCSS, playClassName, properties);\n        return this;\n    }\n    public addPlayClass(isPaused: boolean, playClassName?: string, properties: object = {}) {\n        const elements = this.elements;\n        const length = elements.length;\n        const cssText = makeAnimationProperties(properties);\n\n        if (!length) {\n            return;\n        }\n        if (isPaused) {\n            elements.forEach(element => {\n                removeClass(element, PAUSE_ANIMATION);\n            });\n        } else {\n            elements.forEach(element => {\n                element.style.cssText += cssText;\n                if (hasClass(element, START_ANIMATION)) {\n                    removeClass(element, START_ANIMATION);\n                    requestAnimationFrame(() => {\n                        requestAnimationFrame(() => {\n                            addClass(element, START_ANIMATION);\n                        });\n                    });\n                } else {\n                    addClass(element, START_ANIMATION);\n                }\n            });\n        }\n        return elements[0];\n    }\n    public getNowValue(\n        time: number,\n        properties: string[],\n        left?: number,\n        right?: number,\n        isAccurate?: boolean,\n        easing?: EasingType,\n        usePrevValue?: boolean,\n    ) {\n        const times = this.times;\n        const length = times.length;\n\n        let prevTime: number;\n        let nextTime: number;\n        let prevFrame: Frame;\n        let nextFrame: Frame;\n        const isUndefinedLeft = isUndefined(left);\n        const isUndefinedRight = isUndefined(right);\n        if (isUndefinedLeft || isUndefinedRight) {\n            const indicies = getNearTimeIndex(times, time);\n            isUndefinedLeft && (left = indicies[0]);\n            isUndefinedRight && (right = indicies[1]);\n        }\n\n        for (let i = left; i >= 0; --i) {\n            const frame = this.getFrame(times[i]);\n\n            if (frame.has(...properties)) {\n                prevTime = times[i];\n                prevFrame = frame;\n                break;\n            }\n        }\n        const prevValue = prevFrame && prevFrame.raw(...properties);\n\n        if (isAccurate && !isRole([properties[0]])) {\n            return prevTime === time ? prevValue : undefined;\n        }\n        if (usePrevValue) {\n            return prevValue;\n        }\n        for (let i = right; i < length; ++i) {\n            const frame = this.getFrame(times[i]);\n\n            if (frame.has(...properties)) {\n                nextTime = times[i];\n                nextFrame = frame;\n                break;\n            }\n        }\n        const nextValue = nextFrame && nextFrame.raw(...properties);\n\n        if (!prevFrame || isUndefined(prevValue)) {\n            return nextValue;\n        }\n        if (!nextFrame || isUndefined(nextValue) || prevValue === nextValue) {\n            return prevValue;\n        }\n        return dotValue(time, Math.max(prevTime, 0), nextTime, prevValue, nextValue, easing);\n    }\n    private _toKeyframes(duration: number, states: AnimatorState[], direction: DirectionType) {\n        const frames: IObject<string> = {};\n        const times = this.times.slice();\n\n        if (!times.length) {\n            return \"\";\n        }\n        const originalDuration = this.getDuration();\n        (!this.getFrame(0)) && times.unshift(0);\n        (!this.getFrame(originalDuration)) && times.push(originalDuration);\n        const entries = getEntries(times, states);\n        const lastEntry = entries[entries.length - 1];\n\n        // end delay time\n        lastEntry[0] < duration && addEntry(entries, duration, lastEntry[1]);\n        let prevTime = -1;\n\n        return entries.map(([time, keytime]) => {\n            if (!frames[keytime]) {\n                frames[keytime] =\n                    (!this.hasFrame(keytime) || keytime === 0 || keytime === originalDuration ?\n                        this.getNowFrame(keytime) : this.getNowFrame(keytime, 0, true)).toCSS();\n            }\n\n            let frameTime = time / duration * 100;\n\n            if (frameTime - prevTime < THRESHOLD) {\n                frameTime += THRESHOLD;\n            }\n            prevTime = frameTime;\n            return `${Math.min(frameTime, 100)}%{\n                ${time === 0 && !isDirectionReverse(0, 1, direction) ? \"\" : frames[keytime]}\n            }`;\n        }).join(\"\");\n    }\n}\n\nexport default SceneItem;\n","import Animator from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { SELECTOR, DURATION, DELAY, RUNNING } from \"./consts\";\nimport { playCSS, exportCSS, getRealId, isPausedCSS, isEndedCSS, setPlayCSS } from \"./utils\";\nimport { isFunction, IS_WINDOW, IObject, $, IArrayFormat } from \"@daybrush/utils\";\nimport {\n    AnimateElement, SceneState, SceneOptions, EasingType,\n    AnimatorState, SceneItemOptions, PlayCondition\n} from \"./types\";\nimport Frame from \"./Frame\";\nimport ListMap from \"list-map\";\n\n/**\n * manage sceneItems and play Scene.\n * @sort 1\n */\nclass Scene extends Animator<SceneOptions, SceneState> {\n    /**\n    * version info\n    * @type {string}\n    * @example\n    * Scene.VERSION // #__VERSION__#\n    */\n    public static VERSION: string = \"#__VERSION__#\";\n    public items: ListMap<Scene | SceneItem> = new ListMap();\n    public temp: IObject<Frame>;\n    /**\n    * @param - properties\n    * @param - options\n    * @example\n    const scene = new Scene({\n      item1: {\n        0: {\n          display: \"none\",\n        },\n        1: {\n          display: \"block\",\n          opacity: 0,\n        },\n        2: {\n          opacity: 1,\n        },\n      },\n      item2: {\n        2: {\n          opacity: 1,\n        },\n      }\n    });\n      */\n    constructor(properties?: {options?: Partial<SceneOptions>} & IObject<any>, options?: Partial<SceneOptions>) {\n        super();\n        this.load(properties, options);\n    }\n    public getDuration() {\n        let time = 0;\n\n        this.forEach(item => {\n            time = Math.max(time, item.getTotalDuration() / item.getPlaySpeed());\n        });\n        return time || this.state[DURATION];\n    }\n    public setDuration(duration: number) {\n        const items = this.items;\n        const sceneDuration = this.getDuration();\n\n        if (duration === 0 || !isFinite(sceneDuration)) {\n            return this;\n        }\n        if (sceneDuration === 0) {\n            this.forEach(item => {\n                item.setDuration(duration);\n            });\n        } else {\n            const ratio = duration / sceneDuration;\n\n            this.forEach(item => {\n                item.setDelay(item.getDelay() * ratio);\n                item.setDuration(item.getDuration() * ratio);\n            });\n        }\n        super.setDuration(duration);\n        return this;\n    }\n    public getItem<T extends (Scene | SceneItem) = Scene | SceneItem>(name: number | string): T;\n    /**\n    * get item in scene by name\n    * @param - The item's name\n    * @return {Scene | SceneItem} item\n    * @example\n    const item = scene.getItem(\"item1\")\n    */\n    public getItem(name: number | string) {\n        return this.items.get(name);\n    }\n    /**\n    * create item in scene\n    * @param {} name - name of item to create\n    * @param {} options - The option object of SceneItem\n    * @return {} Newly created item\n    * @example\n    const item = scene.newItem(\"item1\")\n    */\n    public newItem(name: number | string, options: Partial<SceneItemOptions> = {}): Scene | SceneItem {\n        if (this.items.has(name)) {\n            return this.items.get(name);\n        }\n        const item = new SceneItem();\n\n        this.setItem(name, item);\n        item.setOptions(options);\n\n        return item;\n    }\n    /**\n    * remove item in scene\n    * @param - name of item to remove\n    * @return  An instance itself\n    * @example\n    const item = scene.newItem(\"item1\")\n\n    scene.removeItem(\"item1\");\n    */\n    public removeItem(name: number | string): this {\n        this.items.remove(name);\n        return this;\n    }\n    /**\n    * add a sceneItem to the scene\n    * @param - name of item to create\n    * @param - sceneItem\n    * @example\n    const item = scene.newItem(\"item1\")\n    */\n    public setItem(name: number | string, item: Scene | SceneItem) {\n        item.setId(name);\n        this.items.set(name, item);\n        return this;\n    }\n    public setTime(time: number | string, isTick?: boolean, isParent?: boolean, parentEasing?: EasingType) {\n        super.setTime(time, isTick, isParent);\n\n        const iterationTime = this.getIterationTime();\n        const easing = this.getEasing() || parentEasing;\n        const frames: IObject<any> = {};\n\n        this.forEach(item => {\n            item.setTime(iterationTime * item.getPlaySpeed() - item.getDelay(), isTick, true, easing);\n\n            frames[item.getId()] = item.temp;\n        });\n        this.temp = frames;\n\n        /**\n         * This event is fired when timeupdate and animate.\n         * @event Scene#animate\n         * @param {object} param The object of data to be sent to an event.\n         * @param {number} param.currentTime The total time that the animator is running.\n         * @param {number} param.time The iteration time during duration that the animator is running.\n         * @param {object} param.frames frames of that time.\n         * @example\nconst scene = new Scene({\n    a: {\n        0: {\n            opacity: 0,\n        },\n        1: {\n            opacity: 1,\n        }\n    },\n    b: {\n        0: {\n            opacity: 0,\n        },\n        1: {\n            opacity: 1,\n        }\n    }\n}).on(\"animate\", e => {\n    console.log(e.frames);\n    // {a: Frame, b: Frame}\n    console.log(e.frames.a.get(\"opacity\"));\n});\n             */\n        this.trigger(\"animate\", {\n            frames,\n            currentTime: this.getTime(),\n            time: iterationTime,\n        });\n\n        return this;\n    }\n    /**\n     * executes a provided function once for each scene item.\n     * @param - Function to execute for each element, taking three arguments\n     * @return {Scene} An instance itself\n     */\n    public forEach(\n        func: (\n            item: Scene | SceneItem,\n            id: string | number,\n            index: number,\n            items: IObject<Scene | SceneItem>,\n        ) => void,\n    ) {\n        const items = this.items;\n\n        items.forEach((item, id, index, obj) => {\n            func(item, id, index, obj);\n        });\n        return this;\n    }\n    public toCSS(\n        playCondition?: PlayCondition,\n        duration: number = this.getDuration(), parentStates: AnimatorState[] = []) {\n        const totalDuration = !duration || !isFinite(duration) ? 0 : duration;\n        const styles: string[] = [];\n        const state = this.state;\n\n        state[DURATION] = this.getDuration();\n\n        this.forEach(item => {\n            styles.push(item.toCSS(playCondition, totalDuration, parentStates.concat(state)));\n        });\n        return styles.join(\"\");\n    }\n    /**\n     * Export the CSS of the items to the style.\n     * @param - Add a selector or className to play.\n     * @return {Scene} An instance itself\n     */\n    public exportCSS(\n        playCondition?: PlayCondition, duration?: number, parentStates?: AnimatorState[]) {\n        const css = this.toCSS(playCondition, duration, parentStates);\n\n        (!parentStates || !parentStates.length) && exportCSS(getRealId(this), css);\n        return this;\n    }\n    public append(item: SceneItem | Scene) {\n        item.setDelay(item.getDelay() + this.getDuration());\n        this.setItem(getRealId(item), item);\n    }\n    public pauseCSS() {\n        return this.forEach(item => {\n            item.pauseCSS();\n        });\n    }\n    public pause() {\n        super.pause();\n\n        isPausedCSS(this) && this.pauseCSS();\n        this.forEach(item => {\n            item.pause();\n        });\n        return this;\n    }\n    public endCSS() {\n        this.forEach(item => {\n            item.endCSS();\n        });\n        setPlayCSS(this, false);\n    }\n    public end() {\n        isEndedCSS(this) && this.endCSS();\n        super.end();\n        return this;\n    }\n    public addPlayClass(isPaused: boolean, playClassName?: string, properties: object = {}) {\n        let animtionElement: AnimateElement;\n\n        this.forEach(item => {\n            const el = item.addPlayClass(isPaused, playClassName, properties);\n\n            !animtionElement && (animtionElement = el);\n        });\n        return animtionElement;\n    }\n    /**\n    * Play using the css animation and keyframes.\n    * @param - Check if you want to export css.\n    * @param [playClassName=\"startAnimation\"] - Add a class name to play.\n    * @param - The shorthand properties for six of the animation properties.\n    * @return {Scene} An instance itself\n    * @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n    * @example\n    scene.playCSS();\n    scene.playCSS(false, {\n    direction: \"reverse\",\n    fillMode: \"forwards\",\n    });\n    */\n    public playCSS(isExportCSS = true, playClassName?: string, properties: Partial<AnimatorState> = {}) {\n        playCSS(this, isExportCSS, playClassName, properties);\n        return this;\n    }\n    public set(properties: any, ...args: any[]): this;\n    /**\n      * Set properties to the Scene.\n      * @param - properties\n      * @return An instance itself\n      * @example\nscene.set({\n    \".a\": {\n        0: {\n            opacity: 0,\n        },\n        1: {\n            opacity: 1,\n        },\n    },\n});\n// 0\nconsole.log(scene.getItem(\".a\").get(0, \"opacity\"));\n// 1\nconsole.log(scene.getItem(\".a\").get(1, \"opacity\"));\n      */\n    public set(properties: any) {\n        this.load(properties);\n        return this;\n    }\n    public load(properties: any = {}, options = properties.options) {\n        if (!properties) {\n            return this;\n        }\n        const selector = options && options[SELECTOR] || this.state[SELECTOR];\n        for (const name in properties) {\n            if (name === \"options\") {\n                continue;\n            }\n            const object = properties[name];\n            let item;\n\n            if (object instanceof Scene || object instanceof SceneItem) {\n                this.setItem(name, object);\n                item = object;\n            } else if (isFunction(object) && selector) {\n                const elements =\n                    IS_WINDOW\n                        ? $(`${isFunction(selector) ? selector(name) : name}`, true) as IArrayFormat<AnimateElement>\n                        : ([] as AnimateElement[]);\n                const length = elements.length;\n                const scene = new Scene();\n\n                for (let i = 0; i < length; ++i) {\n                    (scene.newItem(i) as SceneItem).setId().setElement(elements[i]).load(object(i, elements[i]));\n                }\n                this.setItem(name, scene);\n                continue;\n            } else {\n                item = this.newItem(name);\n                item.load(object);\n            }\n            selector && item.setSelector(selector);\n        }\n        this.setOptions(options);\n    }\n    public setOptions(options: Partial<SceneState> = {}): this {\n        super.setOptions(options);\n\n        const selector = options.selector;\n\n        if (selector) {\n            this.state[SELECTOR] = selector;\n        }\n        return this;\n    }\n    public setSelector(target?: string | boolean | ((id: number | string) => string)) {\n        const state = this.state;\n        const selector = target || state[SELECTOR];\n\n        state[SELECTOR] = selector;\n        const isItFunction = isFunction(target);\n        if (selector) {\n            this.forEach((item, name) => {\n                item.setSelector(isItFunction ? (target as (id: number | string) => string)(name) : selector);\n            });\n        }\n        return this;\n    }\n    public start(delay: number = this.state[DELAY]): boolean {\n        const result = super.start(delay);\n\n        if (result) {\n            this.forEach(item => {\n                item.start(0);\n            });\n        } else {\n            this.forEach(item => {\n                item.setPlayState(RUNNING);\n            });\n        }\n        return result;\n    }\n}\n\nexport default Scene;\n","import { IObject } from \"@daybrush/utils\";\nimport Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport { SceneOptions, SceneItemOptions } from \"./types\";\n\nexport function animate(properties?: IObject<any>, options?: Partial<SceneOptions>) {\n    return new Scene(properties, options).play();\n}\nexport function animateItem(properties?: IObject<any>, options?: Partial<SceneItemOptions>) {\n    return new SceneItem(properties, options).play();\n}\n","import Scene, * as others from \"./index\";\n\nfor (const name in others) {\n    (Scene as any)[name] = (others as any)[name];\n}\n\nexport default Scene;\n"],"names":["y1","y2","t","t2","x1","x2","x","solveX","dx","Math","abs","cubic","func","solveFromX","max","min","easingName","count","position","time","level","floor","STEP_START","steps","STEP_END","LINEAR","bezier","EASE","EASE_IN","EASE_OUT","EASE_IN_OUT","PREFIX","DATA_SCENE_ID","TIMING_FUNCTION","ROLES","transform","filter","attribute","html","ALIAS","easing","FIXED","_a","MAXIMUM","THRESHOLD","DURATION","FILL_MODE","DIRECTION","ITERATION_COUNT","DELAY","EASING","PLAY_SPEED","EASING_NAME","ITERATION_TIME","PAUSED","ENDED","TIMEUPDATE","ANIMATE","PLAY","RUNNING","ITERATION","START_ANIMATION","PAUSE_ANIMATION","ALTERNATE","REVERSE","ALTERNATE_REVERSE","NORMAL","INFINITE","PLAY_STATE","PLAY_CSS","PREV_TIME","TICK_TIME","CURRENT_TIME","SELECTOR","TRANSFORM_NAME","EASINGS","OPTIONS","EVENTS","events","name","callback","once","isObject","n","_on","isArray","forEach","_this","push","_i","args","off","callback2","callbacks","index","indexOf","splice","data","event","target","type","currentTarget","toArray","apply","value","options","setOptions","isString","split","separator","newOptions","length","prefix","suffix","model","arr","map","v","PropertyObject","clone","join","toValue","str","properties","splitText","obj","i","matches","trim","toPropertyObject","styles","RGBA","text","afterModel","COLOR_MODELS","arrayToColorObject","stringToRGBA","result","arrayToPropertyObject","values","splitComma","splitSpace","exec","stringToBracketObject","charAt","stringToColorObject","object","size","get","toObject","alias","names","isProperty","isFixedProperty","roles","fixed","OBJECT","ARRAY","isPropertyObject","PROPERTY","STRING","NUMBER","constructor","Object","stack","isPureObject","concat","getNames","pop","slice","updateFrame","num","round","undefined","isCheckTrue","role","isInProperties","item","isActivate","state","isPaused","isEnded","id","css","styleId","toId","styleElement","$","innerText","document","body","insertAdjacentHTML","selector","random","IS_WINDOW","checkElement","getId","setId","makeId","match","isExportCSS","playClassName","ANIMATION","getPlayState","className","isPausedCSS","addPlayClass","setTime","exportCSS","el","addAnimationEvent","setPlayCSS","setPlayState","duration","getDuration","isZeroDuration","isFinite","animationend","finish","animationstart","trigger","removeEvent","animationiteration","elapsedTime","currentTime","iterationCount","setIteration","addEvent","curveArray","parseFloat","getter","setter","parent","prototype","camelize","iteration","iteraiontCount","direction","setters","getters","tslib_1","_super","delay","fillMode","playSpeed","iterationTime","tickTime","prevTime","playState","getEasing","setEasing","setDuration","getActiveDuration","Infinity","getTime","toTime","timerId","requestAnimationFrame","tick","start","cancelAnimationFrame","end","pause","isTick","isParent","activeDuration","getUnitTime","calculate","isDelay","getIterationTime","unit","toFixed","passIterationCount","maxIterationCount","currentIterationTime","setIterationTime","isReverse","isDirectionReverse","isFiniteDuration","isForwards","now","to","Animator","GetterSetter","EventTrigger","arrObj","replace","merge","from","getType","FUNCTION","getValue","set","raw","getPropertyName","getValueByNames","params","self","firstParam","Frame","_set","isRole","has","isFixed","stylesLength","isUndefined","frame","frameProperties","cssObject","toInnerProperties","TRANSFORM","FILTER","toCSSObject","cssArray","lastParam","a1","a2","b1","b2","v1","dot","color1","color2","value1","value2","model1","model2","dotArray","colorModel","parseInt","a1Type","dotColor","type1","type2","isFunction1","isFunction2","dotObject","splitUnit","v2","isNaN","dotNumber","nextTime","prevValue","nextValue","ratio","times","decamelize","entries","keytime","prevEntry","states","nextEntries","intCount","ceil","currentDuration","lastTime","j","entry","divideTime","addEntry","unshift","load","originalDuration","ratio_1","items_1","obj_1","time2","items","newFrame","elements","sceneId_1","element","setAttribute","SceneItem","eachTime","realTime","innerValue","value_1","getDelay","frames","hasFrame","getDirection","frameTime","needUpdate","getFrame","remove","removeFrame","append","unshiftTime","firstFrame","prepend","isStartZero","isFunction","setElement","Element","style","targetFunc","attributes","html_1","innerHTML","cssText","toCSS","fromCSS","parentEasing","getNowFrame","temp","setFrame","addTime","update","toFrame","isAccurate","left","right","realEasing","nameObject","hasName","nowEasing","getNowValue","prevFrame","prevNames","keyframes","setTarget","setSelector","playCondition","parentDuration","itemState","reversedStates","reverse","getRealId","superParent","infiniteIndex","findIndex","finiteStates","reduce","prev","cur","find","makeAnimationProperties","timingFunction","selectors","sel","selectorCallback","preselector","peusdo","KEYFRAMES","_toKeyframes","pauseCSS","addClass","removeClass","isEndedCSS","endCSS","playCSS","hasClass","usePrevValue","nextFrame","isUndefinedLeft","isUndefinedRight","indicies","getNearTimeIndex","dotValue","getEntries","lastEntry","ListMap","getTotalDuration","getPlaySpeed","sceneDuration","setDelay","setItem","parentStates","totalDuration","animtionElement","Scene","scene","newItem","isItFunction","play","others"],"mappings":"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"}